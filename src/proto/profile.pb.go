// Code generated by protoc-gen-go.
// source: profile.proto
// DO NOT EDIT!

package gosuproto

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type GroupMembershipTypeV1 int32

const (
	GroupMembershipTypeV1_UNKNOWN GroupMembershipTypeV1 = 0
	GroupMembershipTypeV1_MEMBER  GroupMembershipTypeV1 = 1
	GroupMembershipTypeV1_GUEST   GroupMembershipTypeV1 = 2
)

var GroupMembershipTypeV1_name = map[int32]string{
	0: "UNKNOWN",
	1: "MEMBER",
	2: "GUEST",
}
var GroupMembershipTypeV1_value = map[string]int32{
	"UNKNOWN": 0,
	"MEMBER":  1,
	"GUEST":   2,
}

func (x GroupMembershipTypeV1) String() string {
	return proto.EnumName(GroupMembershipTypeV1_name, int32(x))
}

type User_UserStatus int32

const (
	User_UNKNOWN User_UserStatus = 0
	User_OFFLINE User_UserStatus = 1
	User_ONLINE  User_UserStatus = 2
	User_AWAY    User_UserStatus = 3
	User_BUSY    User_UserStatus = 4
)

var User_UserStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "OFFLINE",
	2: "ONLINE",
	3: "AWAY",
	4: "BUSY",
}
var User_UserStatus_value = map[string]int32{
	"UNKNOWN": 0,
	"OFFLINE": 1,
	"ONLINE":  2,
	"AWAY":    3,
	"BUSY":    4,
}

func (x User_UserStatus) String() string {
	return proto.EnumName(User_UserStatus_name, int32(x))
}

type UserAccount_AccountType int32

const (
	UserAccount_UNKNOWN    UserAccount_AccountType = 0
	UserAccount_STEAM      UserAccount_AccountType = 1
	UserAccount_PSN        UserAccount_AccountType = 2
	UserAccount_XBOX       UserAccount_AccountType = 3
	UserAccount_UPLAY      UserAccount_AccountType = 4
	UserAccount_BATTLE_NET UserAccount_AccountType = 5
	UserAccount_ORIGIN     UserAccount_AccountType = 6
	UserAccount_PVP_NET    UserAccount_AccountType = 7
	UserAccount_FACEBOOK   UserAccount_AccountType = 8
	UserAccount_PLAYER_ME  UserAccount_AccountType = 9
	UserAccount_TEAMSPEAK  UserAccount_AccountType = 10
	UserAccount_TWITCH     UserAccount_AccountType = 11
	UserAccount_TWITTER    UserAccount_AccountType = 12
	UserAccount_WEBLINK    UserAccount_AccountType = 13
	UserAccount_YOUTUBE    UserAccount_AccountType = 14
)

var UserAccount_AccountType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "STEAM",
	2:  "PSN",
	3:  "XBOX",
	4:  "UPLAY",
	5:  "BATTLE_NET",
	6:  "ORIGIN",
	7:  "PVP_NET",
	8:  "FACEBOOK",
	9:  "PLAYER_ME",
	10: "TEAMSPEAK",
	11: "TWITCH",
	12: "TWITTER",
	13: "WEBLINK",
	14: "YOUTUBE",
}
var UserAccount_AccountType_value = map[string]int32{
	"UNKNOWN":    0,
	"STEAM":      1,
	"PSN":        2,
	"XBOX":       3,
	"UPLAY":      4,
	"BATTLE_NET": 5,
	"ORIGIN":     6,
	"PVP_NET":    7,
	"FACEBOOK":   8,
	"PLAYER_ME":  9,
	"TEAMSPEAK":  10,
	"TWITCH":     11,
	"TWITTER":    12,
	"WEBLINK":    13,
	"YOUTUBE":    14,
}

func (x UserAccount_AccountType) String() string {
	return proto.EnumName(UserAccount_AccountType_name, int32(x))
}

type UserAgent_UserAgentType int32

const (
	UserAgent_UNKNOWN      UserAgent_UserAgentType = 0
	UserAgent_WEB          UserAgent_UserAgentType = 1
	UserAgent_ANDROID      UserAgent_UserAgentType = 2
	UserAgent_IOS          UserAgent_UserAgentType = 3
	UserAgent_WEB_EMBEDDED UserAgent_UserAgentType = 4
	UserAgent_BOT          UserAgent_UserAgentType = 5
	UserAgent_LOAD_TEST    UserAgent_UserAgentType = 6
)

var UserAgent_UserAgentType_name = map[int32]string{
	0: "UNKNOWN",
	1: "WEB",
	2: "ANDROID",
	3: "IOS",
	4: "WEB_EMBEDDED",
	5: "BOT",
	6: "LOAD_TEST",
}
var UserAgent_UserAgentType_value = map[string]int32{
	"UNKNOWN":      0,
	"WEB":          1,
	"ANDROID":      2,
	"IOS":          3,
	"WEB_EMBEDDED": 4,
	"BOT":          5,
	"LOAD_TEST":    6,
}

func (x UserAgent_UserAgentType) String() string {
	return proto.EnumName(UserAgent_UserAgentType_name, int32(x))
}

type ChannelUser_ChannelUserType int32

const (
	ChannelUser_UNKNOWN ChannelUser_ChannelUserType = 0
	ChannelUser_OWNER   ChannelUser_ChannelUserType = 1
	ChannelUser_MEMBER  ChannelUser_ChannelUserType = 2
	ChannelUser_CHATTER ChannelUser_ChannelUserType = 3
)

var ChannelUser_ChannelUserType_name = map[int32]string{
	0: "UNKNOWN",
	1: "OWNER",
	2: "MEMBER",
	3: "CHATTER",
}
var ChannelUser_ChannelUserType_value = map[string]int32{
	"UNKNOWN": 0,
	"OWNER":   1,
	"MEMBER":  2,
	"CHATTER": 3,
}

func (x ChannelUser_ChannelUserType) String() string {
	return proto.EnumName(ChannelUser_ChannelUserType_name, int32(x))
}

type ProprietaryUserGroupRecord_Type int32

const (
	ProprietaryUserGroupRecord_UNKNOWN    ProprietaryUserGroupRecord_Type = 0
	ProprietaryUserGroupRecord_NONE       ProprietaryUserGroupRecord_Type = 1
	ProprietaryUserGroupRecord_ESL_ADMINS ProprietaryUserGroupRecord_Type = 2
	ProprietaryUserGroupRecord_ESL_VIDEO  ProprietaryUserGroupRecord_Type = 3
)

var ProprietaryUserGroupRecord_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "NONE",
	2: "ESL_ADMINS",
	3: "ESL_VIDEO",
}
var ProprietaryUserGroupRecord_Type_value = map[string]int32{
	"UNKNOWN":    0,
	"NONE":       1,
	"ESL_ADMINS": 2,
	"ESL_VIDEO":  3,
}

func (x ProprietaryUserGroupRecord_Type) String() string {
	return proto.EnumName(ProprietaryUserGroupRecord_Type_name, int32(x))
}

type Channel_ChannelType int32

const (
	Channel_UNKNOWN Channel_ChannelType = 0
	Channel_PRIVATE Channel_ChannelType = 1
	Channel_PUBLIC  Channel_ChannelType = 2
	Channel_DIRECT  Channel_ChannelType = 3
	Channel_GAME    Channel_ChannelType = 4
	Channel_HUB     Channel_ChannelType = 5
)

var Channel_ChannelType_name = map[int32]string{
	0: "UNKNOWN",
	1: "PRIVATE",
	2: "PUBLIC",
	3: "DIRECT",
	4: "GAME",
	5: "HUB",
}
var Channel_ChannelType_value = map[string]int32{
	"UNKNOWN": 0,
	"PRIVATE": 1,
	"PUBLIC":  2,
	"DIRECT":  3,
	"GAME":    4,
	"HUB":     5,
}

func (x Channel_ChannelType) String() string {
	return proto.EnumName(Channel_ChannelType_name, int32(x))
}

type ChannelMembershipRecord_MembershipType int32

const (
	ChannelMembershipRecord_UNKNOWN         ChannelMembershipRecord_MembershipType = 0
	ChannelMembershipRecord_NONE            ChannelMembershipRecord_MembershipType = 1
	ChannelMembershipRecord_SUBSCRIBER      ChannelMembershipRecord_MembershipType = 25
	ChannelMembershipRecord_MODERATOR       ChannelMembershipRecord_MembershipType = 50
	ChannelMembershipRecord_MODERATOR_GROUP ChannelMembershipRecord_MembershipType = 60
	ChannelMembershipRecord_OWNER           ChannelMembershipRecord_MembershipType = 75
)

var ChannelMembershipRecord_MembershipType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "NONE",
	25: "SUBSCRIBER",
	50: "MODERATOR",
	60: "MODERATOR_GROUP",
	75: "OWNER",
}
var ChannelMembershipRecord_MembershipType_value = map[string]int32{
	"UNKNOWN":         0,
	"NONE":            1,
	"SUBSCRIBER":      25,
	"MODERATOR":       50,
	"MODERATOR_GROUP": 60,
	"OWNER":           75,
}

func (x ChannelMembershipRecord_MembershipType) String() string {
	return proto.EnumName(ChannelMembershipRecord_MembershipType_name, int32(x))
}

type ChannelMembershipRecord_VoiceStatus int32

const (
	ChannelMembershipRecord_VS_UNKNOWN      ChannelMembershipRecord_VoiceStatus = 0
	ChannelMembershipRecord_VS_OFFLINE      ChannelMembershipRecord_VoiceStatus = 1
	ChannelMembershipRecord_VS_ONLINE_MUTED ChannelMembershipRecord_VoiceStatus = 2
	ChannelMembershipRecord_VS_ONLINE       ChannelMembershipRecord_VoiceStatus = 3
)

var ChannelMembershipRecord_VoiceStatus_name = map[int32]string{
	0: "VS_UNKNOWN",
	1: "VS_OFFLINE",
	2: "VS_ONLINE_MUTED",
	3: "VS_ONLINE",
}
var ChannelMembershipRecord_VoiceStatus_value = map[string]int32{
	"VS_UNKNOWN":      0,
	"VS_OFFLINE":      1,
	"VS_ONLINE_MUTED": 2,
	"VS_ONLINE":       3,
}

func (x ChannelMembershipRecord_VoiceStatus) String() string {
	return proto.EnumName(ChannelMembershipRecord_VoiceStatus_name, int32(x))
}

type GroupMembershipRecord_MembershipType int32

const (
	GroupMembershipRecord_UNKNOWN   GroupMembershipRecord_MembershipType = 0
	GroupMembershipRecord_NONE      GroupMembershipRecord_MembershipType = 1
	GroupMembershipRecord_GUEST     GroupMembershipRecord_MembershipType = 25
	GroupMembershipRecord_MEMBER    GroupMembershipRecord_MembershipType = 40
	GroupMembershipRecord_MODERATOR GroupMembershipRecord_MembershipType = 50
	GroupMembershipRecord_OWNER     GroupMembershipRecord_MembershipType = 100
)

var GroupMembershipRecord_MembershipType_name = map[int32]string{
	0:   "UNKNOWN",
	1:   "NONE",
	25:  "GUEST",
	40:  "MEMBER",
	50:  "MODERATOR",
	100: "OWNER",
}
var GroupMembershipRecord_MembershipType_value = map[string]int32{
	"UNKNOWN":   0,
	"NONE":      1,
	"GUEST":     25,
	"MEMBER":    40,
	"MODERATOR": 50,
	"OWNER":     100,
}

func (x GroupMembershipRecord_MembershipType) String() string {
	return proto.EnumName(GroupMembershipRecord_MembershipType_name, int32(x))
}

type GameMembershipRecord_MembershipType int32

const (
	GameMembershipRecord_UNKNOWN GameMembershipRecord_MembershipType = 0
	GameMembershipRecord_NONE    GameMembershipRecord_MembershipType = 1
	GameMembershipRecord_MEMBER  GameMembershipRecord_MembershipType = 50
)

var GameMembershipRecord_MembershipType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "NONE",
	50: "MEMBER",
}
var GameMembershipRecord_MembershipType_value = map[string]int32{
	"UNKNOWN": 0,
	"NONE":    1,
	"MEMBER":  50,
}

func (x GameMembershipRecord_MembershipType) String() string {
	return proto.EnumName(GameMembershipRecord_MembershipType_name, int32(x))
}

type User struct {
	Id                 string                        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Login              string                        `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
	Password           []byte                        `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Email              string                        `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	DisplayName        string                        `protobuf:"bytes,5,opt,name=display_name" json:"display_name,omitempty"`
	AvatarImage        string                        `protobuf:"bytes,6,opt,name=avatar_image" json:"avatar_image,omitempty"`
	ChannelIds         []string                      `protobuf:"bytes,7,rep,name=channel_ids" json:"channel_ids,omitempty"`
	Channels           []*Channel                    `protobuf:"bytes,8,rep,name=channels" json:"channels,omitempty"`
	EmailConfirmed     bool                          `protobuf:"varint,9,opt,name=email_confirmed" json:"email_confirmed,omitempty"`
	Status             User_UserStatus               `protobuf:"varint,10,opt,name=status,enum=proto.User_UserStatus" json:"status,omitempty"`
	TermsOfService     bool                          `protobuf:"varint,11,opt,name=terms_of_service" json:"terms_of_service,omitempty"`
	Newsletter         bool                          `protobuf:"varint,12,opt,name=newsletter" json:"newsletter,omitempty"`
	TitleImage         string                        `protobuf:"bytes,13,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImage    string                        `protobuf:"bytes,14,opt,name=background_image" json:"background_image,omitempty"`
	GameIds            []string                      `protobuf:"bytes,15,rep,name=game_ids" json:"game_ids,omitempty"`
	NormalizedLogin    string                        `protobuf:"bytes,16,opt,name=normalized_login" json:"normalized_login,omitempty"`
	Biography          *UserBiography                `protobuf:"bytes,17,opt,name=biography" json:"biography,omitempty"`
	IsSysop            bool                          `protobuf:"varint,18,opt,name=is_sysop" json:"is_sysop,omitempty"`
	ChannelMemberships []*ChannelMembership          `protobuf:"bytes,19,rep,name=channelMemberships" json:"channelMemberships,omitempty"`
	Relations          []*ProprietaryUserGroupRecord `protobuf:"bytes,20,rep,name=relations" json:"relations,omitempty"`
	CreatedAt          int64                         `protobuf:"varint,21,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt          int64                         `protobuf:"varint,22,opt,name=updated_at" json:"updated_at,omitempty"`
	Ephemeral          bool                          `protobuf:"varint,23,opt,name=ephemeral" json:"ephemeral,omitempty"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}

func (m *User) GetChannels() []*Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *User) GetBiography() *UserBiography {
	if m != nil {
		return m.Biography
	}
	return nil
}

func (m *User) GetChannelMemberships() []*ChannelMembership {
	if m != nil {
		return m.ChannelMemberships
	}
	return nil
}

func (m *User) GetRelations() []*ProprietaryUserGroupRecord {
	if m != nil {
		return m.Relations
	}
	return nil
}

type UserProfile struct {
	Id              string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DisplayName     string             `protobuf:"bytes,2,opt,name=display_name" json:"display_name,omitempty"`
	AvatarImage     string             `protobuf:"bytes,3,opt,name=avatar_image" json:"avatar_image,omitempty"`
	TitleImage      string             `protobuf:"bytes,4,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImage string             `protobuf:"bytes,5,opt,name=background_image" json:"background_image,omitempty"`
	Biography       *UserBiography     `protobuf:"bytes,6,opt,name=biography" json:"biography,omitempty"`
	Games           []*UserGame        `protobuf:"bytes,16,rep,name=games" json:"games,omitempty"`
	Badges          []*UserBadge       `protobuf:"bytes,17,rep,name=badges" json:"badges,omitempty"`
	Groups          []*GroupMembership `protobuf:"bytes,18,rep,name=groups" json:"groups,omitempty"`
	Accounts        []*UserAccount     `protobuf:"bytes,19,rep,name=accounts" json:"accounts,omitempty"`
	Hubs            []*Hub             `protobuf:"bytes,20,rep,name=hubs" json:"hubs,omitempty"`
}

func (m *UserProfile) Reset()         { *m = UserProfile{} }
func (m *UserProfile) String() string { return proto.CompactTextString(m) }
func (*UserProfile) ProtoMessage()    {}

func (m *UserProfile) GetBiography() *UserBiography {
	if m != nil {
		return m.Biography
	}
	return nil
}

func (m *UserProfile) GetGames() []*UserGame {
	if m != nil {
		return m.Games
	}
	return nil
}

func (m *UserProfile) GetBadges() []*UserBadge {
	if m != nil {
		return m.Badges
	}
	return nil
}

func (m *UserProfile) GetGroups() []*GroupMembership {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *UserProfile) GetAccounts() []*UserAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *UserProfile) GetHubs() []*Hub {
	if m != nil {
		return m.Hubs
	}
	return nil
}

type UserBiography struct {
	Introduction string `protobuf:"bytes,1,opt,name=introduction" json:"introduction,omitempty"`
	Languages    string `protobuf:"bytes,2,opt,name=languages" json:"languages,omitempty"`
}

func (m *UserBiography) Reset()         { *m = UserBiography{} }
func (m *UserBiography) String() string { return proto.CompactTextString(m) }
func (*UserBiography) ProtoMessage()    {}

type UserAccount struct {
	Id        string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId string                  `protobuf:"bytes,2,opt,name=account_id" json:"account_id,omitempty"`
	Name      string                  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Type      UserAccount_AccountType `protobuf:"varint,4,opt,name=type,enum=proto.UserAccount_AccountType" json:"type,omitempty"`
}

func (m *UserAccount) Reset()         { *m = UserAccount{} }
func (m *UserAccount) String() string { return proto.CompactTextString(m) }
func (*UserAccount) ProtoMessage()    {}

type UserGame struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Rank string `protobuf:"bytes,2,opt,name=rank" json:"rank,omitempty"`
	Game *Game  `protobuf:"bytes,16,opt,name=game" json:"game,omitempty"`
}

func (m *UserGame) Reset()         { *m = UserGame{} }
func (m *UserGame) String() string { return proto.CompactTextString(m) }
func (*UserGame) ProtoMessage()    {}

func (m *UserGame) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

type UserAgent struct {
	Id        string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId    string                  `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	Name      string                  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Type      UserAgent_UserAgentType `protobuf:"varint,4,opt,name=type,enum=proto.UserAgent_UserAgentType" json:"type,omitempty"`
	LastToken string                  `protobuf:"bytes,5,opt,name=last_token" json:"last_token,omitempty"`
	LastLogin string                  `protobuf:"bytes,6,opt,name=last_login" json:"last_login,omitempty"`
	LastIp    string                  `protobuf:"bytes,7,opt,name=last_ip" json:"last_ip,omitempty"`
	User      *User                   `protobuf:"bytes,8,opt,name=user" json:"user,omitempty"`
}

func (m *UserAgent) Reset()         { *m = UserAgent{} }
func (m *UserAgent) String() string { return proto.CompactTextString(m) }
func (*UserAgent) ProtoMessage()    {}

func (m *UserAgent) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserAgentConnection struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AgentId   string `protobuf:"bytes,2,opt,name=agent_id" json:"agent_id,omitempty"`
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *UserAgentConnection) Reset()         { *m = UserAgentConnection{} }
func (m *UserAgentConnection) String() string { return proto.CompactTextString(m) }
func (*UserAgentConnection) ProtoMessage()    {}

type ChannelUser struct {
	User        *ChatUser                              `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	TypeV1      ChannelUser_ChannelUserType            `protobuf:"varint,2,opt,name=type_v1,enum=proto.ChannelUser_ChannelUserType" json:"type_v1,omitempty"`
	Type        ChannelMembershipRecord_MembershipType `protobuf:"varint,3,opt,name=type,enum=proto.ChannelMembershipRecord_MembershipType" json:"type,omitempty"`
	VoiceStatus ChannelMembershipRecord_VoiceStatus    `protobuf:"varint,4,opt,name=voice_status,enum=proto.ChannelMembershipRecord_VoiceStatus" json:"voice_status,omitempty"`
}

func (m *ChannelUser) Reset()         { *m = ChannelUser{} }
func (m *ChannelUser) String() string { return proto.CompactTextString(m) }
func (*ChannelUser) ProtoMessage()    {}

func (m *ChannelUser) GetUser() *ChatUser {
	if m != nil {
		return m.User
	}
	return nil
}

type ChatUser struct {
	Id              string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DisplayName     string          `protobuf:"bytes,2,opt,name=display_name" json:"display_name,omitempty"`
	AvatarImage     string          `protobuf:"bytes,3,opt,name=avatar_image" json:"avatar_image,omitempty"`
	IsModerator     bool            `protobuf:"varint,4,opt,name=is_moderator" json:"is_moderator,omitempty"`
	Status          User_UserStatus `protobuf:"varint,5,opt,name=status,enum=proto.User_UserStatus" json:"status,omitempty"`
	TitleImage      string          `protobuf:"bytes,6,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImage string          `protobuf:"bytes,7,opt,name=background_image" json:"background_image,omitempty"`
	Ephemeral       bool            `protobuf:"varint,8,opt,name=ephemeral" json:"ephemeral,omitempty"`
}

func (m *ChatUser) Reset()         { *m = ChatUser{} }
func (m *ChatUser) String() string { return proto.CompactTextString(m) }
func (*ChatUser) ProtoMessage()    {}

type ChatUserInfo struct {
	User             *ChatUser          `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Friends          []*ChatUser        `protobuf:"bytes,2,rep,name=friends" json:"friends,omitempty"`
	GroupMemberships []*GroupMembership `protobuf:"bytes,3,rep,name=group_memberships" json:"group_memberships,omitempty"`
	Games            []*Game            `protobuf:"bytes,4,rep,name=games" json:"games,omitempty"`
}

func (m *ChatUserInfo) Reset()         { *m = ChatUserInfo{} }
func (m *ChatUserInfo) String() string { return proto.CompactTextString(m) }
func (*ChatUserInfo) ProtoMessage()    {}

func (m *ChatUserInfo) GetUser() *ChatUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ChatUserInfo) GetFriends() []*ChatUser {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *ChatUserInfo) GetGroupMemberships() []*GroupMembership {
	if m != nil {
		return m.GroupMemberships
	}
	return nil
}

func (m *ChatUserInfo) GetGames() []*Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type ProprietaryUserGroupRecord struct {
	Id     string                          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId string                          `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	Type   ProprietaryUserGroupRecord_Type `protobuf:"varint,3,opt,name=type,enum=proto.ProprietaryUserGroupRecord_Type" json:"type,omitempty"`
}

func (m *ProprietaryUserGroupRecord) Reset()         { *m = ProprietaryUserGroupRecord{} }
func (m *ProprietaryUserGroupRecord) String() string { return proto.CompactTextString(m) }
func (*ProprietaryUserGroupRecord) ProtoMessage()    {}

type UserExternalIDRecord struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt  int64  `protobuf:"varint,2,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,3,opt,name=updated_at" json:"updated_at,omitempty"`
	UserId     string `protobuf:"bytes,4,opt,name=user_id" json:"user_id,omitempty"`
	GroupId    string `protobuf:"bytes,5,opt,name=group_id" json:"group_id,omitempty"`
	ExternalId string `protobuf:"bytes,6,opt,name=external_id" json:"external_id,omitempty"`
}

func (m *UserExternalIDRecord) Reset()         { *m = UserExternalIDRecord{} }
func (m *UserExternalIDRecord) String() string { return proto.CompactTextString(m) }
func (*UserExternalIDRecord) ProtoMessage()    {}

type FriendRequest struct {
	User    *ChatUser `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *FriendRequest) Reset()         { *m = FriendRequest{} }
func (m *FriendRequest) String() string { return proto.CompactTextString(m) }
func (*FriendRequest) ProtoMessage()    {}

func (m *FriendRequest) GetUser() *ChatUser {
	if m != nil {
		return m.User
	}
	return nil
}

type Channel struct {
	Id            string              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title         string              `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Type          Channel_ChannelType `protobuf:"varint,3,opt,name=type,enum=proto.Channel_ChannelType" json:"type,omitempty"`
	DirectUserIds []string            `protobuf:"bytes,4,rep,name=direct_user_ids" json:"direct_user_ids,omitempty"`
	DirectUsers   []*ChatUser         `protobuf:"bytes,5,rep,name=direct_users" json:"direct_users,omitempty"`
	GroupId       string              `protobuf:"bytes,6,opt,name=group_id" json:"group_id,omitempty"`
	Bans          []*ChannelBan       `protobuf:"bytes,7,rep,name=bans" json:"bans,omitempty"`
	GameId        string              `protobuf:"bytes,8,opt,name=game_id" json:"game_id,omitempty"`
	Game          *Game               `protobuf:"bytes,9,opt,name=game" json:"game,omitempty"`
	Tags          []string            `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	TagList       string              `protobuf:"bytes,11,opt,name=tag_list" json:"tag_list,omitempty"`
	Topic         string              `protobuf:"bytes,12,opt,name=topic" json:"topic,omitempty"`
	HubId         string              `protobuf:"bytes,13,opt,name=hub_id" json:"hub_id,omitempty"`
	Hub           *Hub                `protobuf:"bytes,14,opt,name=hub" json:"hub,omitempty"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}

func (m *Channel) GetDirectUsers() []*ChatUser {
	if m != nil {
		return m.DirectUsers
	}
	return nil
}

func (m *Channel) GetBans() []*ChannelBan {
	if m != nil {
		return m.Bans
	}
	return nil
}

func (m *Channel) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

func (m *Channel) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

type ChannelBan struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Expiry int64  `protobuf:"varint,2,opt,name=expiry" json:"expiry,omitempty"`
}

func (m *ChannelBan) Reset()         { *m = ChannelBan{} }
func (m *ChannelBan) String() string { return proto.CompactTextString(m) }
func (*ChannelBan) ProtoMessage()    {}

type ChannelMembership struct {
	ChannelId   string                                 `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
	UserId      string                                 `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	Type        ChannelMembershipRecord_MembershipType `protobuf:"varint,3,opt,name=type,enum=proto.ChannelMembershipRecord_MembershipType" json:"type,omitempty"`
	Channel     *Channel                               `protobuf:"bytes,4,opt,name=channel" json:"channel,omitempty"`
	Permissions *ChannelPermissions                    `protobuf:"bytes,5,opt,name=permissions" json:"permissions,omitempty"`
	VoiceStatus ChannelMembershipRecord_VoiceStatus    `protobuf:"varint,6,opt,name=voice_status,enum=proto.ChannelMembershipRecord_VoiceStatus" json:"voice_status,omitempty"`
}

func (m *ChannelMembership) Reset()         { *m = ChannelMembership{} }
func (m *ChannelMembership) String() string { return proto.CompactTextString(m) }
func (*ChannelMembership) ProtoMessage()    {}

func (m *ChannelMembership) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ChannelMembership) GetPermissions() *ChannelPermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type ChannelMembershipRecord struct {
	Id          string                                 `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ChannelId   string                                 `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
	UserId      string                                 `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	Type        ChannelMembershipRecord_MembershipType `protobuf:"varint,4,opt,name=type,enum=proto.ChannelMembershipRecord_MembershipType" json:"type,omitempty"`
	Channel     *Channel                               `protobuf:"bytes,5,opt,name=channel" json:"channel,omitempty"`
	User        *User                                  `protobuf:"bytes,6,opt,name=user" json:"user,omitempty"`
	Permissions *ChannelPermissions                    `protobuf:"bytes,7,opt,name=permissions" json:"permissions,omitempty"`
	VoiceStatus ChannelMembershipRecord_VoiceStatus    `protobuf:"varint,8,opt,name=voice_status,enum=proto.ChannelMembershipRecord_VoiceStatus" json:"voice_status,omitempty"`
}

func (m *ChannelMembershipRecord) Reset()         { *m = ChannelMembershipRecord{} }
func (m *ChannelMembershipRecord) String() string { return proto.CompactTextString(m) }
func (*ChannelMembershipRecord) ProtoMessage()    {}

func (m *ChannelMembershipRecord) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ChannelMembershipRecord) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ChannelMembershipRecord) GetPermissions() *ChannelPermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type ChannelPermissions struct {
	KickBanUser       bool `protobuf:"varint,1,opt,name=kick_ban_user" json:"kick_ban_user,omitempty"`
	InviteUser        bool `protobuf:"varint,2,opt,name=invite_user" json:"invite_user,omitempty"`
	SetChannelRole    bool `protobuf:"varint,3,opt,name=set_channel_role" json:"set_channel_role,omitempty"`
	EditStickyMessage bool `protobuf:"varint,4,opt,name=edit_sticky_message" json:"edit_sticky_message,omitempty"`
	DeleteMessage     bool `protobuf:"varint,5,opt,name=delete_message" json:"delete_message,omitempty"`
	EditChannel       bool `protobuf:"varint,6,opt,name=edit_channel" json:"edit_channel,omitempty"`
	DeleteChannel     bool `protobuf:"varint,7,opt,name=delete_channel" json:"delete_channel,omitempty"`
}

func (m *ChannelPermissions) Reset()         { *m = ChannelPermissions{} }
func (m *ChannelPermissions) String() string { return proto.CompactTextString(m) }
func (*ChannelPermissions) ProtoMessage()    {}

type Group struct {
	Id              string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Owner           string      `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Name            string      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description     string      `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	TitleImage      string      `protobuf:"bytes,5,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImage string      `protobuf:"bytes,6,opt,name=background_image" json:"background_image,omitempty"`
	Channels        []*Channel  `protobuf:"bytes,7,rep,name=channels" json:"channels,omitempty"`
	Members         []*ChatUser `protobuf:"bytes,8,rep,name=members" json:"members,omitempty"`
	MemberCount     int32       `protobuf:"varint,9,opt,name=member_count" json:"member_count,omitempty"`
	SubscriberCount int32       `protobuf:"varint,10,opt,name=subscriber_count" json:"subscriber_count,omitempty"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}

func (m *Group) GetChannels() []*Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *Group) GetMembers() []*ChatUser {
	if m != nil {
		return m.Members
	}
	return nil
}

type GroupPermissions struct {
	EditGroup             bool `protobuf:"varint,1,opt,name=edit_group" json:"edit_group,omitempty"`
	CreateChannel         bool `protobuf:"varint,2,opt,name=create_channel" json:"create_channel,omitempty"`
	JoinPublicChannel     bool `protobuf:"varint,3,opt,name=join_public_channel" json:"join_public_channel,omitempty"`
	JoinPrivateChannel    bool `protobuf:"varint,4,opt,name=join_private_channel" json:"join_private_channel,omitempty"`
	InviteUser            bool `protobuf:"varint,5,opt,name=invite_user" json:"invite_user,omitempty"`
	SetUserMembershipType bool `protobuf:"varint,6,opt,name=set_user_membership_type" json:"set_user_membership_type,omitempty"`
}

func (m *GroupPermissions) Reset()         { *m = GroupPermissions{} }
func (m *GroupPermissions) String() string { return proto.CompactTextString(m) }
func (*GroupPermissions) ProtoMessage()    {}

type GroupMembership struct {
	Group       *Group                               `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	TypeV1      GroupMembershipTypeV1                `protobuf:"varint,2,opt,name=type_v1,enum=proto.GroupMembershipTypeV1" json:"type_v1,omitempty"`
	GroupId     string                               `protobuf:"bytes,3,opt,name=group_id" json:"group_id,omitempty"`
	UserId      string                               `protobuf:"bytes,4,opt,name=user_id" json:"user_id,omitempty"`
	Type        GroupMembershipRecord_MembershipType `protobuf:"varint,5,opt,name=type,enum=proto.GroupMembershipRecord_MembershipType" json:"type,omitempty"`
	Permissions *GroupPermissions                    `protobuf:"bytes,6,opt,name=permissions" json:"permissions,omitempty"`
}

func (m *GroupMembership) Reset()         { *m = GroupMembership{} }
func (m *GroupMembership) String() string { return proto.CompactTextString(m) }
func (*GroupMembership) ProtoMessage()    {}

func (m *GroupMembership) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupMembership) GetPermissions() *GroupPermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type GroupMembershipRecord struct {
	Id          string                               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	GroupId     string                               `protobuf:"bytes,2,opt,name=group_id" json:"group_id,omitempty"`
	UserId      string                               `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	Type        GroupMembershipRecord_MembershipType `protobuf:"varint,4,opt,name=type,enum=proto.GroupMembershipRecord_MembershipType" json:"type,omitempty"`
	Group       *Group                               `protobuf:"bytes,5,opt,name=group" json:"group,omitempty"`
	User        *User                                `protobuf:"bytes,6,opt,name=user" json:"user,omitempty"`
	Permissions *GroupPermissions                    `protobuf:"bytes,7,opt,name=permissions" json:"permissions,omitempty"`
	CreatedAt   int64                                `protobuf:"varint,8,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt   int64                                `protobuf:"varint,9,opt,name=updated_at" json:"updated_at,omitempty"`
}

func (m *GroupMembershipRecord) Reset()         { *m = GroupMembershipRecord{} }
func (m *GroupMembershipRecord) String() string { return proto.CompactTextString(m) }
func (*GroupMembershipRecord) ProtoMessage()    {}

func (m *GroupMembershipRecord) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupMembershipRecord) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GroupMembershipRecord) GetPermissions() *GroupPermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type GroupMember struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	GroupId string `protobuf:"bytes,3,opt,name=group_id" json:"group_id,omitempty"`
}

func (m *GroupMember) Reset()         { *m = GroupMember{} }
func (m *GroupMember) String() string { return proto.CompactTextString(m) }
func (*GroupMember) ProtoMessage()    {}

// this is the deprecated group invite
type GroupInvitation struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	GroupId   string `protobuf:"bytes,2,opt,name=group_id" json:"group_id,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	InviterId string `protobuf:"bytes,4,opt,name=inviter_id" json:"inviter_id,omitempty"`
}

func (m *GroupInvitation) Reset()         { *m = GroupInvitation{} }
func (m *GroupInvitation) String() string { return proto.CompactTextString(m) }
func (*GroupInvitation) ProtoMessage()    {}

type PotentialGroupMember struct {
	UserId       *OptionalString `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	EmailAddress *OptionalString `protobuf:"bytes,2,opt,name=email_address" json:"email_address,omitempty"`
}

func (m *PotentialGroupMember) Reset()         { *m = PotentialGroupMember{} }
func (m *PotentialGroupMember) String() string { return proto.CompactTextString(m) }
func (*PotentialGroupMember) ProtoMessage()    {}

func (m *PotentialGroupMember) GetUserId() *OptionalString {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *PotentialGroupMember) GetEmailAddress() *OptionalString {
	if m != nil {
		return m.EmailAddress
	}
	return nil
}

type GroupInvite struct {
	Id        string                               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt int64                                `protobuf:"varint,2,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt int64                                `protobuf:"varint,3,opt,name=updated_at" json:"updated_at,omitempty"`
	GroupId   string                               `protobuf:"bytes,4,opt,name=group_id" json:"group_id,omitempty"`
	InviterId string                               `protobuf:"bytes,5,opt,name=inviter_id" json:"inviter_id,omitempty"`
	UserId    string                               `protobuf:"bytes,6,opt,name=user_id" json:"user_id,omitempty"`
	Email     string                               `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	Code      string                               `protobuf:"bytes,8,opt,name=code" json:"code,omitempty"`
	Type      GroupMembershipRecord_MembershipType `protobuf:"varint,9,opt,name=type,enum=proto.GroupMembershipRecord_MembershipType" json:"type,omitempty"`
}

func (m *GroupInvite) Reset()         { *m = GroupInvite{} }
func (m *GroupInvite) String() string { return proto.CompactTextString(m) }
func (*GroupInvite) ProtoMessage()    {}

// Game is how we transport games over the wire
// Usually games are wrapped in UserGames and are updated on the fly
type Game struct {
	Id               string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TitleImage       string   `protobuf:"bytes,3,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImages []string `protobuf:"bytes,4,rep,name=background_images" json:"background_images,omitempty"`
	ReadOnly         bool     `protobuf:"varint,5,opt,name=read_only" json:"read_only,omitempty"`
	ShortName        string   `protobuf:"bytes,6,opt,name=short_name" json:"short_name,omitempty"`
}

func (m *Game) Reset()         { *m = Game{} }
func (m *Game) String() string { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()    {}

type GameMembership struct {
	GameId string                              `protobuf:"bytes,1,opt,name=game_id" json:"game_id,omitempty"`
	UserId string                              `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	Type   GameMembershipRecord_MembershipType `protobuf:"varint,3,opt,name=type,enum=proto.GameMembershipRecord_MembershipType" json:"type,omitempty"`
	Game   *Game                               `protobuf:"bytes,4,opt,name=game" json:"game,omitempty"`
}

func (m *GameMembership) Reset()         { *m = GameMembership{} }
func (m *GameMembership) String() string { return proto.CompactTextString(m) }
func (*GameMembership) ProtoMessage()    {}

func (m *GameMembership) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

type GameMembershipRecord struct {
	Id     string                              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	GameId string                              `protobuf:"bytes,2,opt,name=game_id" json:"game_id,omitempty"`
	UserId string                              `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	Type   GameMembershipRecord_MembershipType `protobuf:"varint,4,opt,name=type,enum=proto.GameMembershipRecord_MembershipType" json:"type,omitempty"`
	Game   *Game                               `protobuf:"bytes,5,opt,name=game" json:"game,omitempty"`
	User   *User                               `protobuf:"bytes,6,opt,name=user" json:"user,omitempty"`
}

func (m *GameMembershipRecord) Reset()         { *m = GameMembershipRecord{} }
func (m *GameMembershipRecord) String() string { return proto.CompactTextString(m) }
func (*GameMembershipRecord) ProtoMessage()    {}

func (m *GameMembershipRecord) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

func (m *GameMembershipRecord) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type GameEditEntry struct {
	ExistingGameId *OptionalString `protobuf:"bytes,1,opt,name=existing_game_id" json:"existing_game_id,omitempty"`
	NewGame        *Game           `protobuf:"bytes,2,opt,name=new_game" json:"new_game,omitempty"`
	EditedGame     *Game           `protobuf:"bytes,3,opt,name=edited_game" json:"edited_game,omitempty"`
}

func (m *GameEditEntry) Reset()         { *m = GameEditEntry{} }
func (m *GameEditEntry) String() string { return proto.CompactTextString(m) }
func (*GameEditEntry) ProtoMessage()    {}

func (m *GameEditEntry) GetExistingGameId() *OptionalString {
	if m != nil {
		return m.ExistingGameId
	}
	return nil
}

func (m *GameEditEntry) GetNewGame() *Game {
	if m != nil {
		return m.NewGame
	}
	return nil
}

func (m *GameEditEntry) GetEditedGame() *Game {
	if m != nil {
		return m.EditedGame
	}
	return nil
}

type OptionalGames struct {
	Games []*GameEditEntry `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
}

func (m *OptionalGames) Reset()         { *m = OptionalGames{} }
func (m *OptionalGames) String() string { return proto.CompactTextString(m) }
func (*OptionalGames) ProtoMessage()    {}

func (m *OptionalGames) GetGames() []*GameEditEntry {
	if m != nil {
		return m.Games
	}
	return nil
}

// Game Record is an entry in the games table
type GameRecord struct {
	Id               string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId           string   `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	Name             string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	TitleImage       string   `protobuf:"bytes,4,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImages []string `protobuf:"bytes,5,rep,name=background_images" json:"background_images,omitempty"`
	ShortName        string   `protobuf:"bytes,6,opt,name=short_name" json:"short_name,omitempty"`
}

func (m *GameRecord) Reset()         { *m = GameRecord{} }
func (m *GameRecord) String() string { return proto.CompactTextString(m) }
func (*GameRecord) ProtoMessage()    {}

type GameListPage struct {
	Games      []*GameListEntry `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
	PageNumber int32            `protobuf:"varint,2,opt,name=page_number" json:"page_number,omitempty"`
	PageSize   int32            `protobuf:"varint,3,opt,name=page_size" json:"page_size,omitempty"`
}

func (m *GameListPage) Reset()         { *m = GameListPage{} }
func (m *GameListPage) String() string { return proto.CompactTextString(m) }
func (*GameListPage) ProtoMessage()    {}

func (m *GameListPage) GetGames() []*GameListEntry {
	if m != nil {
		return m.Games
	}
	return nil
}

type GameListEntry struct {
	Game            *Game                   `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
	Channels        []*GameChannelListEntry `protobuf:"bytes,2,rep,name=channels" json:"channels,omitempty"`
	OnlineUserCount int32                   `protobuf:"varint,3,opt,name=online_user_count" json:"online_user_count,omitempty"`
	UserCount       int32                   `protobuf:"varint,4,opt,name=user_count" json:"user_count,omitempty"`
	HasMoreChannels bool                    `protobuf:"varint,5,opt,name=has_more_channels" json:"has_more_channels,omitempty"`
	ChannelCount    int32                   `protobuf:"varint,6,opt,name=channel_count" json:"channel_count,omitempty"`
}

func (m *GameListEntry) Reset()         { *m = GameListEntry{} }
func (m *GameListEntry) String() string { return proto.CompactTextString(m) }
func (*GameListEntry) ProtoMessage()    {}

func (m *GameListEntry) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

func (m *GameListEntry) GetChannels() []*GameChannelListEntry {
	if m != nil {
		return m.Channels
	}
	return nil
}

type GameChannelListPage struct {
	Game            *Game                   `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
	Channels        []*GameChannelListEntry `protobuf:"bytes,2,rep,name=channels" json:"channels,omitempty"`
	PageNumber      int32                   `protobuf:"varint,3,opt,name=page_number" json:"page_number,omitempty"`
	PageSize        int32                   `protobuf:"varint,4,opt,name=page_size" json:"page_size,omitempty"`
	HasMoreChannels bool                    `protobuf:"varint,5,opt,name=has_more_channels" json:"has_more_channels,omitempty"`
}

func (m *GameChannelListPage) Reset()         { *m = GameChannelListPage{} }
func (m *GameChannelListPage) String() string { return proto.CompactTextString(m) }
func (*GameChannelListPage) ProtoMessage()    {}

func (m *GameChannelListPage) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

func (m *GameChannelListPage) GetChannels() []*GameChannelListEntry {
	if m != nil {
		return m.Channels
	}
	return nil
}

type GameChannelListEntry struct {
	Channel         *Channel `protobuf:"bytes,1,opt,name=channel" json:"channel,omitempty"`
	OnlineUserCount int32    `protobuf:"varint,2,opt,name=online_user_count" json:"online_user_count,omitempty"`
	UserCount       int32    `protobuf:"varint,3,opt,name=user_count" json:"user_count,omitempty"`
}

func (m *GameChannelListEntry) Reset()         { *m = GameChannelListEntry{} }
func (m *GameChannelListEntry) String() string { return proto.CompactTextString(m) }
func (*GameChannelListEntry) ProtoMessage()    {}

func (m *GameChannelListEntry) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type Badge struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Image    string `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	Priority int32  `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
}

func (m *Badge) Reset()         { *m = Badge{} }
func (m *Badge) String() string { return proto.CompactTextString(m) }
func (*Badge) ProtoMessage()    {}

type UserBadge struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	BadgeId   string `protobuf:"bytes,2,opt,name=badge_id" json:"badge_id,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	Title     string `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Image     string `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	Priority  int32  `protobuf:"varint,6,opt,name=priority" json:"priority,omitempty"`
	Timestamp int64  `protobuf:"varint,7,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *UserBadge) Reset()         { *m = UserBadge{} }
func (m *UserBadge) String() string { return proto.CompactTextString(m) }
func (*UserBadge) ProtoMessage()    {}

type Tag struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}

// Profile Update
type BiographyUpdateData struct {
	Introduction *OptionalString `protobuf:"bytes,1,opt,name=introduction" json:"introduction,omitempty"`
	Languages    *OptionalString `protobuf:"bytes,2,opt,name=languages" json:"languages,omitempty"`
}

func (m *BiographyUpdateData) Reset()         { *m = BiographyUpdateData{} }
func (m *BiographyUpdateData) String() string { return proto.CompactTextString(m) }
func (*BiographyUpdateData) ProtoMessage()    {}

func (m *BiographyUpdateData) GetIntroduction() *OptionalString {
	if m != nil {
		return m.Introduction
	}
	return nil
}

func (m *BiographyUpdateData) GetLanguages() *OptionalString {
	if m != nil {
		return m.Languages
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.GroupMembershipTypeV1", GroupMembershipTypeV1_name, GroupMembershipTypeV1_value)
	proto.RegisterEnum("proto.User_UserStatus", User_UserStatus_name, User_UserStatus_value)
	proto.RegisterEnum("proto.UserAccount_AccountType", UserAccount_AccountType_name, UserAccount_AccountType_value)
	proto.RegisterEnum("proto.UserAgent_UserAgentType", UserAgent_UserAgentType_name, UserAgent_UserAgentType_value)
	proto.RegisterEnum("proto.ChannelUser_ChannelUserType", ChannelUser_ChannelUserType_name, ChannelUser_ChannelUserType_value)
	proto.RegisterEnum("proto.ProprietaryUserGroupRecord_Type", ProprietaryUserGroupRecord_Type_name, ProprietaryUserGroupRecord_Type_value)
	proto.RegisterEnum("proto.Channel_ChannelType", Channel_ChannelType_name, Channel_ChannelType_value)
	proto.RegisterEnum("proto.ChannelMembershipRecord_MembershipType", ChannelMembershipRecord_MembershipType_name, ChannelMembershipRecord_MembershipType_value)
	proto.RegisterEnum("proto.ChannelMembershipRecord_VoiceStatus", ChannelMembershipRecord_VoiceStatus_name, ChannelMembershipRecord_VoiceStatus_value)
	proto.RegisterEnum("proto.GroupMembershipRecord_MembershipType", GroupMembershipRecord_MembershipType_name, GroupMembershipRecord_MembershipType_value)
	proto.RegisterEnum("proto.GameMembershipRecord_MembershipType", GameMembershipRecord_MembershipType_name, GameMembershipRecord_MembershipType_value)
}
