// Code generated by protoc-gen-go.
// source: hub.proto
// DO NOT EDIT!

package gosuproto

import proto "github.com/golang/protobuf/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type RPCHubCreateHubResponse_ErrorType int32

const (
	RPCHubCreateHubResponse_NONE                                       RPCHubCreateHubResponse_ErrorType = 0
	RPCHubCreateHubResponse_SERVER_ERROR                               RPCHubCreateHubResponse_ErrorType = 1
	RPCHubCreateHubResponse_TITLE_EXISTS                               RPCHubCreateHubResponse_ErrorType = 2
	RPCHubCreateHubResponse_OWNER_INVALID                              RPCHubCreateHubResponse_ErrorType = 3
	RPCHubCreateHubResponse_GROUP_INVALID                              RPCHubCreateHubResponse_ErrorType = 4
	RPCHubCreateHubResponse_TITLE_IMAGE_INVALID                        RPCHubCreateHubResponse_ErrorType = 5
	RPCHubCreateHubResponse_BACKGROUND_IMAGE_INVALID                   RPCHubCreateHubResponse_ErrorType = 6
	RPCHubCreateHubResponse_PARENTS_INVALID                            RPCHubCreateHubResponse_ErrorType = 7
	RPCHubCreateHubResponse_TRANSLATIONS_INVALID                       RPCHubCreateHubResponse_ErrorType = 8
	RPCHubCreateHubResponse_LANGUAGE_INVALID                           RPCHubCreateHubResponse_ErrorType = 9
	RPCHubCreateHubResponse_TITLE_INVALID                              RPCHubCreateHubResponse_ErrorType = 10
	RPCHubCreateHubResponse_SHORT_TITLE_INVALID                        RPCHubCreateHubResponse_ErrorType = 11
	RPCHubCreateHubResponse_BAD_REQUEST                                RPCHubCreateHubResponse_ErrorType = 12
	RPCHubCreateHubResponse_SHORT_TITLE_EXISTS                         RPCHubCreateHubResponse_ErrorType = 13
	RPCHubCreateHubResponse_FORBIDDEN                                  RPCHubCreateHubResponse_ErrorType = 14
	RPCHubCreateHubResponse_TITLE_TOO_SHORT                            RPCHubCreateHubResponse_ErrorType = 15
	RPCHubCreateHubResponse_TITLE_TOO_LONG                             RPCHubCreateHubResponse_ErrorType = 16
	RPCHubCreateHubResponse_SHORT_TITLE_TOO_SHORT                      RPCHubCreateHubResponse_ErrorType = 17
	RPCHubCreateHubResponse_SHORT_TITLE_TOO_LONG                       RPCHubCreateHubResponse_ErrorType = 18
	RPCHubCreateHubResponse_SHORT_TITLE_RESERVED                       RPCHubCreateHubResponse_ErrorType = 19
	RPCHubCreateHubResponse_MAX_MESSAGE_LENGTH_TOO_LOW                 RPCHubCreateHubResponse_ErrorType = 20
	RPCHubCreateHubResponse_MAX_MESSAGE_LENGTH_TOO_HIGH                RPCHubCreateHubResponse_ErrorType = 21
	RPCHubCreateHubResponse_MAX_MESSAGE_LENGTH_EPHEMERAL_TOO_LOW       RPCHubCreateHubResponse_ErrorType = 22
	RPCHubCreateHubResponse_MAX_MESSAGE_LENGTH_EPHEMERAL_TOO_HIGH      RPCHubCreateHubResponse_ErrorType = 23
	RPCHubCreateHubResponse_MAX_MESSAGES_PER_MINUTE_TOO_LOW            RPCHubCreateHubResponse_ErrorType = 24
	RPCHubCreateHubResponse_MAX_MESSAGES_PER_MINUTE_TOO_HIGH           RPCHubCreateHubResponse_ErrorType = 25
	RPCHubCreateHubResponse_MAX_MESSAGES_PER_MINUTE_EPHEMERAL_TOO_LOW  RPCHubCreateHubResponse_ErrorType = 26
	RPCHubCreateHubResponse_MAX_MESSAGES_PER_MINUTE_EPHEMERAL_TOO_HIGH RPCHubCreateHubResponse_ErrorType = 27
)

var RPCHubCreateHubResponse_ErrorType_name = map[int32]string{
	0:  "NONE",
	1:  "SERVER_ERROR",
	2:  "TITLE_EXISTS",
	3:  "OWNER_INVALID",
	4:  "GROUP_INVALID",
	5:  "TITLE_IMAGE_INVALID",
	6:  "BACKGROUND_IMAGE_INVALID",
	7:  "PARENTS_INVALID",
	8:  "TRANSLATIONS_INVALID",
	9:  "LANGUAGE_INVALID",
	10: "TITLE_INVALID",
	11: "SHORT_TITLE_INVALID",
	12: "BAD_REQUEST",
	13: "SHORT_TITLE_EXISTS",
	14: "FORBIDDEN",
	15: "TITLE_TOO_SHORT",
	16: "TITLE_TOO_LONG",
	17: "SHORT_TITLE_TOO_SHORT",
	18: "SHORT_TITLE_TOO_LONG",
	19: "SHORT_TITLE_RESERVED",
	20: "MAX_MESSAGE_LENGTH_TOO_LOW",
	21: "MAX_MESSAGE_LENGTH_TOO_HIGH",
	22: "MAX_MESSAGE_LENGTH_EPHEMERAL_TOO_LOW",
	23: "MAX_MESSAGE_LENGTH_EPHEMERAL_TOO_HIGH",
	24: "MAX_MESSAGES_PER_MINUTE_TOO_LOW",
	25: "MAX_MESSAGES_PER_MINUTE_TOO_HIGH",
	26: "MAX_MESSAGES_PER_MINUTE_EPHEMERAL_TOO_LOW",
	27: "MAX_MESSAGES_PER_MINUTE_EPHEMERAL_TOO_HIGH",
}
var RPCHubCreateHubResponse_ErrorType_value = map[string]int32{
	"NONE":                                       0,
	"SERVER_ERROR":                               1,
	"TITLE_EXISTS":                               2,
	"OWNER_INVALID":                              3,
	"GROUP_INVALID":                              4,
	"TITLE_IMAGE_INVALID":                        5,
	"BACKGROUND_IMAGE_INVALID":                   6,
	"PARENTS_INVALID":                            7,
	"TRANSLATIONS_INVALID":                       8,
	"LANGUAGE_INVALID":                           9,
	"TITLE_INVALID":                              10,
	"SHORT_TITLE_INVALID":                        11,
	"BAD_REQUEST":                                12,
	"SHORT_TITLE_EXISTS":                         13,
	"FORBIDDEN":                                  14,
	"TITLE_TOO_SHORT":                            15,
	"TITLE_TOO_LONG":                             16,
	"SHORT_TITLE_TOO_SHORT":                      17,
	"SHORT_TITLE_TOO_LONG":                       18,
	"SHORT_TITLE_RESERVED":                       19,
	"MAX_MESSAGE_LENGTH_TOO_LOW":                 20,
	"MAX_MESSAGE_LENGTH_TOO_HIGH":                21,
	"MAX_MESSAGE_LENGTH_EPHEMERAL_TOO_LOW":       22,
	"MAX_MESSAGE_LENGTH_EPHEMERAL_TOO_HIGH":      23,
	"MAX_MESSAGES_PER_MINUTE_TOO_LOW":            24,
	"MAX_MESSAGES_PER_MINUTE_TOO_HIGH":           25,
	"MAX_MESSAGES_PER_MINUTE_EPHEMERAL_TOO_LOW":  26,
	"MAX_MESSAGES_PER_MINUTE_EPHEMERAL_TOO_HIGH": 27,
}

func (x RPCHubCreateHubResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubCreateHubResponse_ErrorType_name, int32(x))
}

type RPCHubDeleteHubResponse_ErrorType int32

const (
	RPCHubDeleteHubResponse_NONE        RPCHubDeleteHubResponse_ErrorType = 0
	RPCHubDeleteHubResponse_UNKNOWN     RPCHubDeleteHubResponse_ErrorType = 1
	RPCHubDeleteHubResponse_FORBIDDEN   RPCHubDeleteHubResponse_ErrorType = 2
	RPCHubDeleteHubResponse_BAD_REQUEST RPCHubDeleteHubResponse_ErrorType = 3
)

var RPCHubDeleteHubResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
}
var RPCHubDeleteHubResponse_ErrorType_value = map[string]int32{
	"NONE":        0,
	"UNKNOWN":     1,
	"FORBIDDEN":   2,
	"BAD_REQUEST": 3,
}

func (x RPCHubDeleteHubResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubDeleteHubResponse_ErrorType_name, int32(x))
}

type RPCHubGetHubResponse_ErrorType int32

const (
	RPCHubGetHubResponse_NONE        RPCHubGetHubResponse_ErrorType = 0
	RPCHubGetHubResponse_UNKNOWN     RPCHubGetHubResponse_ErrorType = 1
	RPCHubGetHubResponse_NOT_FOUND   RPCHubGetHubResponse_ErrorType = 2
	RPCHubGetHubResponse_BAD_REQUEST RPCHubGetHubResponse_ErrorType = 3
)

var RPCHubGetHubResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN",
	2: "NOT_FOUND",
	3: "BAD_REQUEST",
}
var RPCHubGetHubResponse_ErrorType_value = map[string]int32{
	"NONE":        0,
	"UNKNOWN":     1,
	"NOT_FOUND":   2,
	"BAD_REQUEST": 3,
}

func (x RPCHubGetHubResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubGetHubResponse_ErrorType_name, int32(x))
}

type RPCHubLinkHubResponse_ErrorType int32

const (
	RPCHubLinkHubResponse_NONE           RPCHubLinkHubResponse_ErrorType = 0
	RPCHubLinkHubResponse_UNKNOWN_ERROR  RPCHubLinkHubResponse_ErrorType = 1
	RPCHubLinkHubResponse_FORBIDDEN      RPCHubLinkHubResponse_ErrorType = 2
	RPCHubLinkHubResponse_BAD_REQUEST    RPCHubLinkHubResponse_ErrorType = 3
	RPCHubLinkHubResponse_ALREADY_LINKED RPCHubLinkHubResponse_ErrorType = 4
)

var RPCHubLinkHubResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
	4: "ALREADY_LINKED",
}
var RPCHubLinkHubResponse_ErrorType_value = map[string]int32{
	"NONE":           0,
	"UNKNOWN_ERROR":  1,
	"FORBIDDEN":      2,
	"BAD_REQUEST":    3,
	"ALREADY_LINKED": 4,
}

func (x RPCHubLinkHubResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubLinkHubResponse_ErrorType_name, int32(x))
}

type RPCHubUnlinkHubResponse_ErrorType int32

const (
	RPCHubUnlinkHubResponse_NONE          RPCHubUnlinkHubResponse_ErrorType = 0
	RPCHubUnlinkHubResponse_UNKNOWN_ERROR RPCHubUnlinkHubResponse_ErrorType = 1
	RPCHubUnlinkHubResponse_FORBIDDEN     RPCHubUnlinkHubResponse_ErrorType = 2
	RPCHubUnlinkHubResponse_BAD_REQUEST   RPCHubUnlinkHubResponse_ErrorType = 3
	RPCHubUnlinkHubResponse_NOT_LINKED    RPCHubUnlinkHubResponse_ErrorType = 4
)

var RPCHubUnlinkHubResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
	4: "NOT_LINKED",
}
var RPCHubUnlinkHubResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"FORBIDDEN":     2,
	"BAD_REQUEST":   3,
	"NOT_LINKED":    4,
}

func (x RPCHubUnlinkHubResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubUnlinkHubResponse_ErrorType_name, int32(x))
}

type RPCHubValidateTitleResponse_ErrorType int32

const (
	RPCHubValidateTitleResponse_NONE                  RPCHubValidateTitleResponse_ErrorType = 0
	RPCHubValidateTitleResponse_BAD_REQUEST           RPCHubValidateTitleResponse_ErrorType = 1
	RPCHubValidateTitleResponse_SERVER_ERROR          RPCHubValidateTitleResponse_ErrorType = 2
	RPCHubValidateTitleResponse_TITLE_EXISTS          RPCHubValidateTitleResponse_ErrorType = 3
	RPCHubValidateTitleResponse_TITLE_INVALID         RPCHubValidateTitleResponse_ErrorType = 4
	RPCHubValidateTitleResponse_SHORT_TITLE_EXISTS    RPCHubValidateTitleResponse_ErrorType = 5
	RPCHubValidateTitleResponse_SHORT_TITLE_INVALID   RPCHubValidateTitleResponse_ErrorType = 6
	RPCHubValidateTitleResponse_TITLE_TOO_SHORT       RPCHubValidateTitleResponse_ErrorType = 7
	RPCHubValidateTitleResponse_TITLE_TOO_LONG        RPCHubValidateTitleResponse_ErrorType = 8
	RPCHubValidateTitleResponse_SHORT_TITLE_TOO_SHORT RPCHubValidateTitleResponse_ErrorType = 9
	RPCHubValidateTitleResponse_SHORT_TITLE_TOO_LONG  RPCHubValidateTitleResponse_ErrorType = 10
	RPCHubValidateTitleResponse_SHORT_TITLE_RESERVED  RPCHubValidateTitleResponse_ErrorType = 11
)

var RPCHubValidateTitleResponse_ErrorType_name = map[int32]string{
	0:  "NONE",
	1:  "BAD_REQUEST",
	2:  "SERVER_ERROR",
	3:  "TITLE_EXISTS",
	4:  "TITLE_INVALID",
	5:  "SHORT_TITLE_EXISTS",
	6:  "SHORT_TITLE_INVALID",
	7:  "TITLE_TOO_SHORT",
	8:  "TITLE_TOO_LONG",
	9:  "SHORT_TITLE_TOO_SHORT",
	10: "SHORT_TITLE_TOO_LONG",
	11: "SHORT_TITLE_RESERVED",
}
var RPCHubValidateTitleResponse_ErrorType_value = map[string]int32{
	"NONE":                  0,
	"BAD_REQUEST":           1,
	"SERVER_ERROR":          2,
	"TITLE_EXISTS":          3,
	"TITLE_INVALID":         4,
	"SHORT_TITLE_EXISTS":    5,
	"SHORT_TITLE_INVALID":   6,
	"TITLE_TOO_SHORT":       7,
	"TITLE_TOO_LONG":        8,
	"SHORT_TITLE_TOO_SHORT": 9,
	"SHORT_TITLE_TOO_LONG":  10,
	"SHORT_TITLE_RESERVED":  11,
}

func (x RPCHubValidateTitleResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubValidateTitleResponse_ErrorType_name, int32(x))
}

type RPCHubAddMemberResponse_ErrorType int32

const (
	RPCHubAddMemberResponse_NONE                    RPCHubAddMemberResponse_ErrorType = 0
	RPCHubAddMemberResponse_UNKNOWN_ERROR           RPCHubAddMemberResponse_ErrorType = 1
	RPCHubAddMemberResponse_FORBIDDEN               RPCHubAddMemberResponse_ErrorType = 2
	RPCHubAddMemberResponse_INVALID_USER_ID         RPCHubAddMemberResponse_ErrorType = 3
	RPCHubAddMemberResponse_INVALID_EMAIL           RPCHubAddMemberResponse_ErrorType = 4
	RPCHubAddMemberResponse_INVALID_MEMBERSHIP_TYPE RPCHubAddMemberResponse_ErrorType = 5
	RPCHubAddMemberResponse_BAD_REQUEST             RPCHubAddMemberResponse_ErrorType = 6
	RPCHubAddMemberResponse_ALREADY_PENDING         RPCHubAddMemberResponse_ErrorType = 7
	RPCHubAddMemberResponse_ALREADY_MEMBER          RPCHubAddMemberResponse_ErrorType = 8
	RPCHubAddMemberResponse_ALREADY_BANNED          RPCHubAddMemberResponse_ErrorType = 9
)

var RPCHubAddMemberResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "INVALID_USER_ID",
	4: "INVALID_EMAIL",
	5: "INVALID_MEMBERSHIP_TYPE",
	6: "BAD_REQUEST",
	7: "ALREADY_PENDING",
	8: "ALREADY_MEMBER",
	9: "ALREADY_BANNED",
}
var RPCHubAddMemberResponse_ErrorType_value = map[string]int32{
	"NONE":                    0,
	"UNKNOWN_ERROR":           1,
	"FORBIDDEN":               2,
	"INVALID_USER_ID":         3,
	"INVALID_EMAIL":           4,
	"INVALID_MEMBERSHIP_TYPE": 5,
	"BAD_REQUEST":             6,
	"ALREADY_PENDING":         7,
	"ALREADY_MEMBER":          8,
	"ALREADY_BANNED":          9,
}

func (x RPCHubAddMemberResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubAddMemberResponse_ErrorType_name, int32(x))
}

type RPCHubGetMembersResponse_ErrorType int32

const (
	RPCHubGetMembersResponse_NONE          RPCHubGetMembersResponse_ErrorType = 0
	RPCHubGetMembersResponse_UNKNOWN_ERROR RPCHubGetMembersResponse_ErrorType = 1
	RPCHubGetMembersResponse_FORBIDDEN     RPCHubGetMembersResponse_ErrorType = 2
	RPCHubGetMembersResponse_BAD_REQUEST   RPCHubGetMembersResponse_ErrorType = 3
)

var RPCHubGetMembersResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
}
var RPCHubGetMembersResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"FORBIDDEN":     2,
	"BAD_REQUEST":   3,
}

func (x RPCHubGetMembersResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubGetMembersResponse_ErrorType_name, int32(x))
}

type MembershipEntry_Status int32

const (
	MembershipEntry_STATUS_UNKNOWN  MembershipEntry_Status = 0
	MembershipEntry_STATUS_EXISTING MembershipEntry_Status = 1
	MembershipEntry_STATUS_PENDING  MembershipEntry_Status = 2
	MembershipEntry_STATUS_BANNED   MembershipEntry_Status = 3
)

var MembershipEntry_Status_name = map[int32]string{
	0: "STATUS_UNKNOWN",
	1: "STATUS_EXISTING",
	2: "STATUS_PENDING",
	3: "STATUS_BANNED",
}
var MembershipEntry_Status_value = map[string]int32{
	"STATUS_UNKNOWN":  0,
	"STATUS_EXISTING": 1,
	"STATUS_PENDING":  2,
	"STATUS_BANNED":   3,
}

func (x MembershipEntry_Status) String() string {
	return proto.EnumName(MembershipEntry_Status_name, int32(x))
}

type MembershipEntry_MembershipType int32

const (
	MembershipEntry_UNKNOWN   MembershipEntry_MembershipType = 0
	MembershipEntry_BANNED    MembershipEntry_MembershipType = 5
	MembershipEntry_NONE      MembershipEntry_MembershipType = 10
	MembershipEntry_MEMBER    MembershipEntry_MembershipType = 25
	MembershipEntry_MODERATOR MembershipEntry_MembershipType = 50
	MembershipEntry_OWNER     MembershipEntry_MembershipType = 75
)

var MembershipEntry_MembershipType_name = map[int32]string{
	0:  "UNKNOWN",
	5:  "BANNED",
	10: "NONE",
	25: "MEMBER",
	50: "MODERATOR",
	75: "OWNER",
}
var MembershipEntry_MembershipType_value = map[string]int32{
	"UNKNOWN":   0,
	"BANNED":    5,
	"NONE":      10,
	"MEMBER":    25,
	"MODERATOR": 50,
	"OWNER":     75,
}

func (x MembershipEntry_MembershipType) String() string {
	return proto.EnumName(MembershipEntry_MembershipType_name, int32(x))
}

type RPCHubSendInviteResponse_ErrorType int32

const (
	RPCHubSendInviteResponse_NONE           RPCHubSendInviteResponse_ErrorType = 0
	RPCHubSendInviteResponse_UNKNOWN_ERROR  RPCHubSendInviteResponse_ErrorType = 1
	RPCHubSendInviteResponse_FORBIDDEN      RPCHubSendInviteResponse_ErrorType = 2
	RPCHubSendInviteResponse_ALREADY_MEMBER RPCHubSendInviteResponse_ErrorType = 3
	RPCHubSendInviteResponse_NOT_INVITED    RPCHubSendInviteResponse_ErrorType = 4
	RPCHubSendInviteResponse_BAD_REQUEST    RPCHubSendInviteResponse_ErrorType = 5
)

var RPCHubSendInviteResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "ALREADY_MEMBER",
	4: "NOT_INVITED",
	5: "BAD_REQUEST",
}
var RPCHubSendInviteResponse_ErrorType_value = map[string]int32{
	"NONE":           0,
	"UNKNOWN_ERROR":  1,
	"FORBIDDEN":      2,
	"ALREADY_MEMBER": 3,
	"NOT_INVITED":    4,
	"BAD_REQUEST":    5,
}

func (x RPCHubSendInviteResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubSendInviteResponse_ErrorType_name, int32(x))
}

type RPCHubRequestMembershipResponse_ErrorType int32

const (
	RPCHubRequestMembershipResponse_NONE           RPCHubRequestMembershipResponse_ErrorType = 0
	RPCHubRequestMembershipResponse_UNKNOWN_ERROR  RPCHubRequestMembershipResponse_ErrorType = 1
	RPCHubRequestMembershipResponse_BAD_REQUEST    RPCHubRequestMembershipResponse_ErrorType = 2
	RPCHubRequestMembershipResponse_ALREADY_MEMBER RPCHubRequestMembershipResponse_ErrorType = 3
	RPCHubRequestMembershipResponse_BANNED         RPCHubRequestMembershipResponse_ErrorType = 4
	RPCHubRequestMembershipResponse_HUB_NOT_CLOSED RPCHubRequestMembershipResponse_ErrorType = 5
)

var RPCHubRequestMembershipResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "ALREADY_MEMBER",
	4: "BANNED",
	5: "HUB_NOT_CLOSED",
}
var RPCHubRequestMembershipResponse_ErrorType_value = map[string]int32{
	"NONE":           0,
	"UNKNOWN_ERROR":  1,
	"BAD_REQUEST":    2,
	"ALREADY_MEMBER": 3,
	"BANNED":         4,
	"HUB_NOT_CLOSED": 5,
}

func (x RPCHubRequestMembershipResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubRequestMembershipResponse_ErrorType_name, int32(x))
}

type RPCHubEditMemberResponse_ErrorType int32

const (
	RPCHubEditMemberResponse_NONE          RPCHubEditMemberResponse_ErrorType = 0
	RPCHubEditMemberResponse_UNKNOWN_ERROR RPCHubEditMemberResponse_ErrorType = 1
	RPCHubEditMemberResponse_FORBIDDEN     RPCHubEditMemberResponse_ErrorType = 2
	RPCHubEditMemberResponse_BAD_REQUEST   RPCHubEditMemberResponse_ErrorType = 3
)

var RPCHubEditMemberResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
}
var RPCHubEditMemberResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"FORBIDDEN":     2,
	"BAD_REQUEST":   3,
}

func (x RPCHubEditMemberResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubEditMemberResponse_ErrorType_name, int32(x))
}

type RPCHubJoinHubResponse_ErrorType int32

const (
	RPCHubJoinHubResponse_NONE          RPCHubJoinHubResponse_ErrorType = 0
	RPCHubJoinHubResponse_UNKNOWN_ERROR RPCHubJoinHubResponse_ErrorType = 1
	RPCHubJoinHubResponse_BAD_REQUEST   RPCHubJoinHubResponse_ErrorType = 2
	RPCHubJoinHubResponse_FORBIDDEN     RPCHubJoinHubResponse_ErrorType = 3
	RPCHubJoinHubResponse_BANNED        RPCHubJoinHubResponse_ErrorType = 4
	RPCHubJoinHubResponse_INVALID_CODE  RPCHubJoinHubResponse_ErrorType = 5
)

var RPCHubJoinHubResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
	4: "BANNED",
	5: "INVALID_CODE",
}
var RPCHubJoinHubResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
	"BANNED":        4,
	"INVALID_CODE":  5,
}

func (x RPCHubJoinHubResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubJoinHubResponse_ErrorType_name, int32(x))
}

type RPCHubLeaveHubResponse_ErrorType int32

const (
	RPCHubLeaveHubResponse_NONE          RPCHubLeaveHubResponse_ErrorType = 0
	RPCHubLeaveHubResponse_UNKNOWN_ERROR RPCHubLeaveHubResponse_ErrorType = 1
	RPCHubLeaveHubResponse_BAD_REQUEST   RPCHubLeaveHubResponse_ErrorType = 2
)

var RPCHubLeaveHubResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
}
var RPCHubLeaveHubResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
}

func (x RPCHubLeaveHubResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubLeaveHubResponse_ErrorType_name, int32(x))
}

type RPCHubAddExternalMemberResponse_ErrorType int32

const (
	RPCHubAddExternalMemberResponse_NONE                    RPCHubAddExternalMemberResponse_ErrorType = 0
	RPCHubAddExternalMemberResponse_UNKNOWN_ERROR           RPCHubAddExternalMemberResponse_ErrorType = 1
	RPCHubAddExternalMemberResponse_BAD_REQUEST             RPCHubAddExternalMemberResponse_ErrorType = 2
	RPCHubAddExternalMemberResponse_FORBIDDEN               RPCHubAddExternalMemberResponse_ErrorType = 3
	RPCHubAddExternalMemberResponse_INVALID_MEMBERSHIP_TYPE RPCHubAddExternalMemberResponse_ErrorType = 4
	RPCHubAddExternalMemberResponse_ALREADY_MEMBER          RPCHubAddExternalMemberResponse_ErrorType = 5
)

var RPCHubAddExternalMemberResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
	4: "INVALID_MEMBERSHIP_TYPE",
	5: "ALREADY_MEMBER",
}
var RPCHubAddExternalMemberResponse_ErrorType_value = map[string]int32{
	"NONE":                    0,
	"UNKNOWN_ERROR":           1,
	"BAD_REQUEST":             2,
	"FORBIDDEN":               3,
	"INVALID_MEMBERSHIP_TYPE": 4,
	"ALREADY_MEMBER":          5,
}

func (x RPCHubAddExternalMemberResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubAddExternalMemberResponse_ErrorType_name, int32(x))
}

type RPCHubGetExternalMembersResponse_ErrorType int32

const (
	RPCHubGetExternalMembersResponse_NONE          RPCHubGetExternalMembersResponse_ErrorType = 0
	RPCHubGetExternalMembersResponse_UNKNOWN_ERROR RPCHubGetExternalMembersResponse_ErrorType = 1
	RPCHubGetExternalMembersResponse_FORBIDDEN     RPCHubGetExternalMembersResponse_ErrorType = 2
	RPCHubGetExternalMembersResponse_BAD_REQUEST   RPCHubGetExternalMembersResponse_ErrorType = 3
)

var RPCHubGetExternalMembersResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
}
var RPCHubGetExternalMembersResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"FORBIDDEN":     2,
	"BAD_REQUEST":   3,
}

func (x RPCHubGetExternalMembersResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubGetExternalMembersResponse_ErrorType_name, int32(x))
}

type ExternalMembershipEntry_Status int32

const (
	ExternalMembershipEntry_STATUS_UNKNOWN  ExternalMembershipEntry_Status = 0
	ExternalMembershipEntry_STATUS_EXISTING ExternalMembershipEntry_Status = 1
)

var ExternalMembershipEntry_Status_name = map[int32]string{
	0: "STATUS_UNKNOWN",
	1: "STATUS_EXISTING",
}
var ExternalMembershipEntry_Status_value = map[string]int32{
	"STATUS_UNKNOWN":  0,
	"STATUS_EXISTING": 1,
}

func (x ExternalMembershipEntry_Status) String() string {
	return proto.EnumName(ExternalMembershipEntry_Status_name, int32(x))
}

type ExternalMembershipEntry_MembershipType int32

const (
	ExternalMembershipEntry_UNKNOWN   ExternalMembershipEntry_MembershipType = 0
	ExternalMembershipEntry_BANNED    ExternalMembershipEntry_MembershipType = 5
	ExternalMembershipEntry_NONE      ExternalMembershipEntry_MembershipType = 10
	ExternalMembershipEntry_MEMBER    ExternalMembershipEntry_MembershipType = 25
	ExternalMembershipEntry_MODERATOR ExternalMembershipEntry_MembershipType = 50
	ExternalMembershipEntry_OWNER     ExternalMembershipEntry_MembershipType = 75
)

var ExternalMembershipEntry_MembershipType_name = map[int32]string{
	0:  "UNKNOWN",
	5:  "BANNED",
	10: "NONE",
	25: "MEMBER",
	50: "MODERATOR",
	75: "OWNER",
}
var ExternalMembershipEntry_MembershipType_value = map[string]int32{
	"UNKNOWN":   0,
	"BANNED":    5,
	"NONE":      10,
	"MEMBER":    25,
	"MODERATOR": 50,
	"OWNER":     75,
}

func (x ExternalMembershipEntry_MembershipType) String() string {
	return proto.EnumName(ExternalMembershipEntry_MembershipType_name, int32(x))
}

type RPCHubEditExternalMemberResponse_ErrorType int32

const (
	RPCHubEditExternalMemberResponse_NONE          RPCHubEditExternalMemberResponse_ErrorType = 0
	RPCHubEditExternalMemberResponse_UNKNOWN_ERROR RPCHubEditExternalMemberResponse_ErrorType = 1
	RPCHubEditExternalMemberResponse_FORBIDDEN     RPCHubEditExternalMemberResponse_ErrorType = 2
	RPCHubEditExternalMemberResponse_BAD_REQUEST   RPCHubEditExternalMemberResponse_ErrorType = 3
)

var RPCHubEditExternalMemberResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
}
var RPCHubEditExternalMemberResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"FORBIDDEN":     2,
	"BAD_REQUEST":   3,
}

func (x RPCHubEditExternalMemberResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubEditExternalMemberResponse_ErrorType_name, int32(x))
}

type RPCHubGetMemberResponse_ErrorType int32

const (
	RPCHubGetMemberResponse_NONE          RPCHubGetMemberResponse_ErrorType = 0
	RPCHubGetMemberResponse_UNKNOWN_ERROR RPCHubGetMemberResponse_ErrorType = 1
	RPCHubGetMemberResponse_FORBIDDEN     RPCHubGetMemberResponse_ErrorType = 2
	RPCHubGetMemberResponse_BAD_REQUEST   RPCHubGetMemberResponse_ErrorType = 3
)

var RPCHubGetMemberResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
}
var RPCHubGetMemberResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"FORBIDDEN":     2,
	"BAD_REQUEST":   3,
}

func (x RPCHubGetMemberResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubGetMemberResponse_ErrorType_name, int32(x))
}

type RPCHubRegisterExternalUserIDResponse_ErrorType int32

const (
	RPCHubRegisterExternalUserIDResponse_NONE          RPCHubRegisterExternalUserIDResponse_ErrorType = 0
	RPCHubRegisterExternalUserIDResponse_UNKNOWN_ERROR RPCHubRegisterExternalUserIDResponse_ErrorType = 1
	RPCHubRegisterExternalUserIDResponse_FORBIDDEN     RPCHubRegisterExternalUserIDResponse_ErrorType = 2
	RPCHubRegisterExternalUserIDResponse_BAD_REQUEST   RPCHubRegisterExternalUserIDResponse_ErrorType = 3
)

var RPCHubRegisterExternalUserIDResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
}
var RPCHubRegisterExternalUserIDResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"FORBIDDEN":     2,
	"BAD_REQUEST":   3,
}

func (x RPCHubRegisterExternalUserIDResponse_ErrorType) String() string {
	return proto.EnumName(RPCHubRegisterExternalUserIDResponse_ErrorType_name, int32(x))
}

type HubMembershipRecord_MembershipType int32

const (
	HubMembershipRecord_UNKNOWN         HubMembershipRecord_MembershipType = 0
	HubMembershipRecord_BANNED          HubMembershipRecord_MembershipType = 5
	HubMembershipRecord_NONE            HubMembershipRecord_MembershipType = 10
	HubMembershipRecord_REQUEST_PENDING HubMembershipRecord_MembershipType = 15
	HubMembershipRecord_INVITED         HubMembershipRecord_MembershipType = 20
	HubMembershipRecord_MEMBER          HubMembershipRecord_MembershipType = 25
	HubMembershipRecord_MODERATOR       HubMembershipRecord_MembershipType = 50
	HubMembershipRecord_MODERATOR_GROUP HubMembershipRecord_MembershipType = 60
	HubMembershipRecord_OWNER           HubMembershipRecord_MembershipType = 75
)

var HubMembershipRecord_MembershipType_name = map[int32]string{
	0:  "UNKNOWN",
	5:  "BANNED",
	10: "NONE",
	15: "REQUEST_PENDING",
	20: "INVITED",
	25: "MEMBER",
	50: "MODERATOR",
	60: "MODERATOR_GROUP",
	75: "OWNER",
}
var HubMembershipRecord_MembershipType_value = map[string]int32{
	"UNKNOWN":         0,
	"BANNED":          5,
	"NONE":            10,
	"REQUEST_PENDING": 15,
	"INVITED":         20,
	"MEMBER":          25,
	"MODERATOR":       50,
	"MODERATOR_GROUP": 60,
	"OWNER":           75,
}

func (x HubMembershipRecord_MembershipType) String() string {
	return proto.EnumName(HubMembershipRecord_MembershipType_name, int32(x))
}

type HubAddMembersResponse_ErrorType int32

const (
	HubAddMembersResponse_NONE          HubAddMembersResponse_ErrorType = 0
	HubAddMembersResponse_UNKNOWN_ERROR HubAddMembersResponse_ErrorType = 1
	HubAddMembersResponse_FORBIDDEN     HubAddMembersResponse_ErrorType = 2
	HubAddMembersResponse_BAD_REQUEST   HubAddMembersResponse_ErrorType = 3
)

var HubAddMembersResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "FORBIDDEN",
	3: "BAD_REQUEST",
}
var HubAddMembersResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"FORBIDDEN":     2,
	"BAD_REQUEST":   3,
}

func (x HubAddMembersResponse_ErrorType) String() string {
	return proto.EnumName(HubAddMembersResponse_ErrorType_name, int32(x))
}

type HubAddMembersResponseEntry_ErrorType int32

const (
	HubAddMembersResponseEntry_NONE                    HubAddMembersResponseEntry_ErrorType = 0
	HubAddMembersResponseEntry_UNKNOWN_ERROR           HubAddMembersResponseEntry_ErrorType = 1
	HubAddMembersResponseEntry_INVALID_USER_ID         HubAddMembersResponseEntry_ErrorType = 2
	HubAddMembersResponseEntry_INVALID_EMAIL           HubAddMembersResponseEntry_ErrorType = 3
	HubAddMembersResponseEntry_INVALID_MEMBERSHIP_TYPE HubAddMembersResponseEntry_ErrorType = 4
	HubAddMembersResponseEntry_ALREADY_PENDING         HubAddMembersResponseEntry_ErrorType = 5
	HubAddMembersResponseEntry_ALREADY_MEMBER          HubAddMembersResponseEntry_ErrorType = 6
	HubAddMembersResponseEntry_ALREADY_BANNED          HubAddMembersResponseEntry_ErrorType = 7
)

var HubAddMembersResponseEntry_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "INVALID_USER_ID",
	3: "INVALID_EMAIL",
	4: "INVALID_MEMBERSHIP_TYPE",
	5: "ALREADY_PENDING",
	6: "ALREADY_MEMBER",
	7: "ALREADY_BANNED",
}
var HubAddMembersResponseEntry_ErrorType_value = map[string]int32{
	"NONE":                    0,
	"UNKNOWN_ERROR":           1,
	"INVALID_USER_ID":         2,
	"INVALID_EMAIL":           3,
	"INVALID_MEMBERSHIP_TYPE": 4,
	"ALREADY_PENDING":         5,
	"ALREADY_MEMBER":          6,
	"ALREADY_BANNED":          7,
}

func (x HubAddMembersResponseEntry_ErrorType) String() string {
	return proto.EnumName(HubAddMembersResponseEntry_ErrorType_name, int32(x))
}

type SearchMembersResponse_ErrorType int32

const (
	SearchMembersResponse_NONE          SearchMembersResponse_ErrorType = 0
	SearchMembersResponse_UNKNOWN_ERROR SearchMembersResponse_ErrorType = 1
	SearchMembersResponse_BAD_REQUEST   SearchMembersResponse_ErrorType = 2
	SearchMembersResponse_FORBIDDEN     SearchMembersResponse_ErrorType = 3
)

var SearchMembersResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var SearchMembersResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x SearchMembersResponse_ErrorType) String() string {
	return proto.EnumName(SearchMembersResponse_ErrorType_name, int32(x))
}

type HubGetUserByExternalIDResponse_ErrorType int32

const (
	HubGetUserByExternalIDResponse_NONE          HubGetUserByExternalIDResponse_ErrorType = 0
	HubGetUserByExternalIDResponse_UNKNOWN_ERROR HubGetUserByExternalIDResponse_ErrorType = 1
	HubGetUserByExternalIDResponse_BAD_REQUEST   HubGetUserByExternalIDResponse_ErrorType = 2
	HubGetUserByExternalIDResponse_NOT_FOUND     HubGetUserByExternalIDResponse_ErrorType = 3
)

var HubGetUserByExternalIDResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "NOT_FOUND",
}
var HubGetUserByExternalIDResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"NOT_FOUND":     3,
}

func (x HubGetUserByExternalIDResponse_ErrorType) String() string {
	return proto.EnumName(HubGetUserByExternalIDResponse_ErrorType_name, int32(x))
}

type RPCHubCreateHubRequest struct {
	ParentIds                    []string     `protobuf:"bytes,1,rep,name=parent_ids" json:"parent_ids,omitempty"`
	TranslationIds               []string     `protobuf:"bytes,2,rep,name=translation_ids" json:"translation_ids,omitempty"`
	UserId                       string       `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	GroupId                      string       `protobuf:"bytes,13,opt,name=group_id" json:"group_id,omitempty"`
	Closed                       bool         `protobuf:"varint,4,opt,name=closed" json:"closed,omitempty"`
	Title                        string       `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	ShortTitle                   string       `protobuf:"bytes,6,opt,name=short_title" json:"short_title,omitempty"`
	Description                  string       `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	TitleImage                   string       `protobuf:"bytes,8,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImage              string       `protobuf:"bytes,9,opt,name=background_image" json:"background_image,omitempty"`
	ClaimedGroupId               string       `protobuf:"bytes,10,opt,name=claimed_group_id" json:"claimed_group_id,omitempty"`
	Language                     string       `protobuf:"bytes,11,opt,name=language" json:"language,omitempty"`
	Nsfw                         bool         `protobuf:"varint,12,opt,name=nsfw" json:"nsfw,omitempty"`
	AutoGenerateTitleSuffix      bool         `protobuf:"varint,14,opt,name=auto_generate_title_suffix" json:"auto_generate_title_suffix,omitempty"`
	AutoGenerateShortTitleSuffix bool         `protobuf:"varint,15,opt,name=auto_generate_short_title_suffix" json:"auto_generate_short_title_suffix,omitempty"`
	GeoLocation                  *GeoLocation `protobuf:"bytes,16,opt,name=geo_location" json:"geo_location,omitempty"`
}

func (m *RPCHubCreateHubRequest) Reset()         { *m = RPCHubCreateHubRequest{} }
func (m *RPCHubCreateHubRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubCreateHubRequest) ProtoMessage()    {}

func (m *RPCHubCreateHubRequest) GetGeoLocation() *GeoLocation {
	if m != nil {
		return m.GeoLocation
	}
	return nil
}

type RPCHubCreateHubResponse struct {
	Error    RPCHubCreateHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubCreateHubResponse_ErrorType" json:"error,omitempty"`
	Hub      *Hub                              `protobuf:"bytes,2,opt,name=hub" json:"hub,omitempty"`
	Children []*Hub                            `protobuf:"bytes,3,rep,name=children" json:"children,omitempty"`
	Siblings []*Hub                            `protobuf:"bytes,4,rep,name=siblings" json:"siblings,omitempty"`
}

func (m *RPCHubCreateHubResponse) Reset()         { *m = RPCHubCreateHubResponse{} }
func (m *RPCHubCreateHubResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubCreateHubResponse) ProtoMessage()    {}

func (m *RPCHubCreateHubResponse) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

func (m *RPCHubCreateHubResponse) GetChildren() []*Hub {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *RPCHubCreateHubResponse) GetSiblings() []*Hub {
	if m != nil {
		return m.Siblings
	}
	return nil
}

type RPCHubEditHubRequest struct {
	HubId                         string                  `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId                        string                  `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	GroupId                       string                  `protobuf:"bytes,15,opt,name=group_id" json:"group_id,omitempty"`
	ParentIds                     *OptionalRepeatedString `protobuf:"bytes,3,opt,name=parent_ids" json:"parent_ids,omitempty"`
	TranslationIds                *OptionalRepeatedString `protobuf:"bytes,4,opt,name=translation_ids" json:"translation_ids,omitempty"`
	OwnerId                       *StringValue            `protobuf:"bytes,5,opt,name=owner_id" json:"owner_id,omitempty"`
	Closed                        *BoolValue              `protobuf:"bytes,6,opt,name=closed" json:"closed,omitempty"`
	Title                         *StringValue            `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	ShortTitle                    *StringValue            `protobuf:"bytes,8,opt,name=short_title" json:"short_title,omitempty"`
	Description                   *StringValue            `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
	TitleImage                    *StringValue            `protobuf:"bytes,10,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImage               *StringValue            `protobuf:"bytes,11,opt,name=background_image" json:"background_image,omitempty"`
	ClaimedGroupId                *StringValue            `protobuf:"bytes,12,opt,name=claimed_group_id" json:"claimed_group_id,omitempty"`
	Language                      *StringValue            `protobuf:"bytes,13,opt,name=language" json:"language,omitempty"`
	Nsfw                          *BoolValue              `protobuf:"bytes,14,opt,name=nsfw" json:"nsfw,omitempty"`
	WordfilterEnabled             *BoolValue              `protobuf:"bytes,16,opt,name=wordfilter_enabled" json:"wordfilter_enabled,omitempty"`
	WordfilterList                *StringValue            `protobuf:"bytes,17,opt,name=wordfilter_list" json:"wordfilter_list,omitempty"`
	LinkwhitelistEnabled          *BoolValue              `protobuf:"bytes,18,opt,name=linkwhitelist_enabled" json:"linkwhitelist_enabled,omitempty"`
	LinkwhitelistList             *StringValue            `protobuf:"bytes,19,opt,name=linkwhitelist_list" json:"linkwhitelist_list,omitempty"`
	GeoLocation                   *OptionalGeoLocation    `protobuf:"bytes,20,opt,name=geo_location" json:"geo_location,omitempty"`
	Topic                         *StringValue            `protobuf:"bytes,21,opt,name=topic" json:"topic,omitempty"`
	MaxMessageLength              *Int32Value             `protobuf:"bytes,22,opt,name=max_message_length" json:"max_message_length,omitempty"`
	MaxMessagesPerMinute          *Int32Value             `protobuf:"bytes,23,opt,name=max_messages_per_minute" json:"max_messages_per_minute,omitempty"`
	MaxMessageLengthEphemeral     *Int32Value             `protobuf:"bytes,24,opt,name=max_message_length_ephemeral" json:"max_message_length_ephemeral,omitempty"`
	MaxMessagesPerMinuteEphemeral *Int32Value             `protobuf:"bytes,25,opt,name=max_messages_per_minute_ephemeral" json:"max_messages_per_minute_ephemeral,omitempty"`
}

func (m *RPCHubEditHubRequest) Reset()         { *m = RPCHubEditHubRequest{} }
func (m *RPCHubEditHubRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubEditHubRequest) ProtoMessage()    {}

func (m *RPCHubEditHubRequest) GetParentIds() *OptionalRepeatedString {
	if m != nil {
		return m.ParentIds
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetTranslationIds() *OptionalRepeatedString {
	if m != nil {
		return m.TranslationIds
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetOwnerId() *StringValue {
	if m != nil {
		return m.OwnerId
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetClosed() *BoolValue {
	if m != nil {
		return m.Closed
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetTitle() *StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetShortTitle() *StringValue {
	if m != nil {
		return m.ShortTitle
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetDescription() *StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetTitleImage() *StringValue {
	if m != nil {
		return m.TitleImage
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetBackgroundImage() *StringValue {
	if m != nil {
		return m.BackgroundImage
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetClaimedGroupId() *StringValue {
	if m != nil {
		return m.ClaimedGroupId
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetLanguage() *StringValue {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetNsfw() *BoolValue {
	if m != nil {
		return m.Nsfw
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetWordfilterEnabled() *BoolValue {
	if m != nil {
		return m.WordfilterEnabled
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetWordfilterList() *StringValue {
	if m != nil {
		return m.WordfilterList
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetLinkwhitelistEnabled() *BoolValue {
	if m != nil {
		return m.LinkwhitelistEnabled
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetLinkwhitelistList() *StringValue {
	if m != nil {
		return m.LinkwhitelistList
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetGeoLocation() *OptionalGeoLocation {
	if m != nil {
		return m.GeoLocation
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetTopic() *StringValue {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetMaxMessageLength() *Int32Value {
	if m != nil {
		return m.MaxMessageLength
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetMaxMessagesPerMinute() *Int32Value {
	if m != nil {
		return m.MaxMessagesPerMinute
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetMaxMessageLengthEphemeral() *Int32Value {
	if m != nil {
		return m.MaxMessageLengthEphemeral
	}
	return nil
}

func (m *RPCHubEditHubRequest) GetMaxMessagesPerMinuteEphemeral() *Int32Value {
	if m != nil {
		return m.MaxMessagesPerMinuteEphemeral
	}
	return nil
}

type RPCHubEditHubResponse struct {
	Error    RPCHubCreateHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubCreateHubResponse_ErrorType" json:"error,omitempty"`
	Hub      *Hub                              `protobuf:"bytes,2,opt,name=hub" json:"hub,omitempty"`
	Children []*Hub                            `protobuf:"bytes,3,rep,name=children" json:"children,omitempty"`
	Siblings []*Hub                            `protobuf:"bytes,4,rep,name=siblings" json:"siblings,omitempty"`
}

func (m *RPCHubEditHubResponse) Reset()         { *m = RPCHubEditHubResponse{} }
func (m *RPCHubEditHubResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubEditHubResponse) ProtoMessage()    {}

func (m *RPCHubEditHubResponse) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

func (m *RPCHubEditHubResponse) GetChildren() []*Hub {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *RPCHubEditHubResponse) GetSiblings() []*Hub {
	if m != nil {
		return m.Siblings
	}
	return nil
}

type RPCHubDeleteHubRequest struct {
	HubId   string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	GroupId string `protobuf:"bytes,3,opt,name=group_id" json:"group_id,omitempty"`
}

func (m *RPCHubDeleteHubRequest) Reset()         { *m = RPCHubDeleteHubRequest{} }
func (m *RPCHubDeleteHubRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubDeleteHubRequest) ProtoMessage()    {}

type RPCHubDeleteHubResponse struct {
	Error RPCHubDeleteHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubDeleteHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubDeleteHubResponse) Reset()         { *m = RPCHubDeleteHubResponse{} }
func (m *RPCHubDeleteHubResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubDeleteHubResponse) ProtoMessage()    {}

type RPCHubGetHubRequest struct {
	HubId             string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	ShortTitle        string `protobuf:"bytes,2,opt,name=short_title" json:"short_title,omitempty"`
	HubIdOrShortTitle string `protobuf:"bytes,3,opt,name=hub_id_or_short_title" json:"hub_id_or_short_title,omitempty"`
	PopulateParents   bool   `protobuf:"varint,4,opt,name=populate_parents" json:"populate_parents,omitempty"`
	PopulateChildren  bool   `protobuf:"varint,5,opt,name=populate_children" json:"populate_children,omitempty"`
	PopulateSiblings  bool   `protobuf:"varint,6,opt,name=populate_siblings" json:"populate_siblings,omitempty"`
}

func (m *RPCHubGetHubRequest) Reset()         { *m = RPCHubGetHubRequest{} }
func (m *RPCHubGetHubRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetHubRequest) ProtoMessage()    {}

type RPCHubGetHubResponse struct {
	Error    RPCHubGetHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubGetHubResponse_ErrorType" json:"error,omitempty"`
	Hub      *Hub                           `protobuf:"bytes,2,opt,name=hub" json:"hub,omitempty"`
	Children []*Hub                         `protobuf:"bytes,3,rep,name=children" json:"children,omitempty"`
	Siblings []*Hub                         `protobuf:"bytes,4,rep,name=siblings" json:"siblings,omitempty"`
}

func (m *RPCHubGetHubResponse) Reset()         { *m = RPCHubGetHubResponse{} }
func (m *RPCHubGetHubResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetHubResponse) ProtoMessage()    {}

func (m *RPCHubGetHubResponse) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

func (m *RPCHubGetHubResponse) GetChildren() []*Hub {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *RPCHubGetHubResponse) GetSiblings() []*Hub {
	if m != nil {
		return m.Siblings
	}
	return nil
}

type RPCHubLinkHubRequest struct {
	HubId   string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id" json:"group_id,omitempty"`
	UserId  string `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
}

func (m *RPCHubLinkHubRequest) Reset()         { *m = RPCHubLinkHubRequest{} }
func (m *RPCHubLinkHubRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubLinkHubRequest) ProtoMessage()    {}

type RPCHubLinkHubResponse struct {
	Error RPCHubLinkHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubLinkHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubLinkHubResponse) Reset()         { *m = RPCHubLinkHubResponse{} }
func (m *RPCHubLinkHubResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubLinkHubResponse) ProtoMessage()    {}

type RPCHubUnlinkHubRequest struct {
	HubId   string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id" json:"group_id,omitempty"`
	UserId  string `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
}

func (m *RPCHubUnlinkHubRequest) Reset()         { *m = RPCHubUnlinkHubRequest{} }
func (m *RPCHubUnlinkHubRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubUnlinkHubRequest) ProtoMessage()    {}

type RPCHubUnlinkHubResponse struct {
	Error RPCHubUnlinkHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubUnlinkHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubUnlinkHubResponse) Reset()         { *m = RPCHubUnlinkHubResponse{} }
func (m *RPCHubUnlinkHubResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubUnlinkHubResponse) ProtoMessage()    {}

type RPCHubGetAllHubsRequest struct {
	Limit int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
}

func (m *RPCHubGetAllHubsRequest) Reset()         { *m = RPCHubGetAllHubsRequest{} }
func (m *RPCHubGetAllHubsRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetAllHubsRequest) ProtoMessage()    {}

type RPCHubGetAllHubsResponse struct {
	Hubs []*Hub `protobuf:"bytes,1,rep,name=hubs" json:"hubs,omitempty"`
}

func (m *RPCHubGetAllHubsResponse) Reset()         { *m = RPCHubGetAllHubsResponse{} }
func (m *RPCHubGetAllHubsResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetAllHubsResponse) ProtoMessage()    {}

func (m *RPCHubGetAllHubsResponse) GetHubs() []*Hub {
	if m != nil {
		return m.Hubs
	}
	return nil
}

type RPCHubValidateTitleRequest struct {
	Title      *StringValue `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	ShortTitle *StringValue `protobuf:"bytes,2,opt,name=short_title" json:"short_title,omitempty"`
}

func (m *RPCHubValidateTitleRequest) Reset()         { *m = RPCHubValidateTitleRequest{} }
func (m *RPCHubValidateTitleRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubValidateTitleRequest) ProtoMessage()    {}

func (m *RPCHubValidateTitleRequest) GetTitle() *StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *RPCHubValidateTitleRequest) GetShortTitle() *StringValue {
	if m != nil {
		return m.ShortTitle
	}
	return nil
}

type RPCHubValidateTitleResponse struct {
	Error RPCHubValidateTitleResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubValidateTitleResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubValidateTitleResponse) Reset()         { *m = RPCHubValidateTitleResponse{} }
func (m *RPCHubValidateTitleResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubValidateTitleResponse) ProtoMessage()    {}

// used to add (invite) a member to a hub
type RPCHubAddMemberRequest struct {
	HubId         string                         `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	InviterId     string                         `protobuf:"bytes,2,opt,name=inviter_id" json:"inviter_id,omitempty"`
	UserId        string                         `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	Email         string                         `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Type          MembershipEntry_MembershipType `protobuf:"varint,5,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
	FetchExisting bool                           `protobuf:"varint,6,opt,name=fetch_existing" json:"fetch_existing,omitempty"`
	FetchPending  bool                           `protobuf:"varint,7,opt,name=fetch_pending" json:"fetch_pending,omitempty"`
	FetchBanned   bool                           `protobuf:"varint,8,opt,name=fetch_banned" json:"fetch_banned,omitempty"`
	BanDuration   int64                          `protobuf:"varint,9,opt,name=ban_duration" json:"ban_duration,omitempty"`
	InviteText    string                         `protobuf:"bytes,10,opt,name=invite_text" json:"invite_text,omitempty"`
	JoinLink      string                         `protobuf:"bytes,11,opt,name=join_link" json:"join_link,omitempty"`
}

func (m *RPCHubAddMemberRequest) Reset()         { *m = RPCHubAddMemberRequest{} }
func (m *RPCHubAddMemberRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubAddMemberRequest) ProtoMessage()    {}

type RPCHubAddMemberResponse struct {
	Error         RPCHubAddMemberResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubAddMemberResponse_ErrorType" json:"error,omitempty"`
	ExistingUsers []*MembershipEntry                `protobuf:"bytes,2,rep,name=existing_users" json:"existing_users,omitempty"`
	PendingUsers  []*MembershipEntry                `protobuf:"bytes,3,rep,name=pending_users" json:"pending_users,omitempty"`
	BannedUsers   []*MembershipEntry                `protobuf:"bytes,4,rep,name=banned_users" json:"banned_users,omitempty"`
	UpdatedEntry  *MembershipEntry                  `protobuf:"bytes,5,opt,name=updated_entry" json:"updated_entry,omitempty"`
}

func (m *RPCHubAddMemberResponse) Reset()         { *m = RPCHubAddMemberResponse{} }
func (m *RPCHubAddMemberResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubAddMemberResponse) ProtoMessage()    {}

func (m *RPCHubAddMemberResponse) GetExistingUsers() []*MembershipEntry {
	if m != nil {
		return m.ExistingUsers
	}
	return nil
}

func (m *RPCHubAddMemberResponse) GetPendingUsers() []*MembershipEntry {
	if m != nil {
		return m.PendingUsers
	}
	return nil
}

func (m *RPCHubAddMemberResponse) GetBannedUsers() []*MembershipEntry {
	if m != nil {
		return m.BannedUsers
	}
	return nil
}

func (m *RPCHubAddMemberResponse) GetUpdatedEntry() *MembershipEntry {
	if m != nil {
		return m.UpdatedEntry
	}
	return nil
}

// used to add (invite) a member to a hub
type RPCHubAddMembersRequest struct {
	HubId      string                       `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	InviterId  string                       `protobuf:"bytes,2,opt,name=inviter_id" json:"inviter_id,omitempty"`
	Entries    []*HubAddMembersRequestEntry `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`
	InviteText string                       `protobuf:"bytes,4,opt,name=invite_text" json:"invite_text,omitempty"`
	JoinLink   string                       `protobuf:"bytes,5,opt,name=join_link" json:"join_link,omitempty"`
}

func (m *RPCHubAddMembersRequest) Reset()         { *m = RPCHubAddMembersRequest{} }
func (m *RPCHubAddMembersRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubAddMembersRequest) ProtoMessage()    {}

func (m *RPCHubAddMembersRequest) GetEntries() []*HubAddMembersRequestEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type RPCHubAddMembersResponse struct {
	Error          HubAddMembersResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.HubAddMembersResponse_ErrorType" json:"error,omitempty"`
	UpdatedEntries []*HubAddMembersResponseEntry   `protobuf:"bytes,2,rep,name=updated_entries" json:"updated_entries,omitempty"`
}

func (m *RPCHubAddMembersResponse) Reset()         { *m = RPCHubAddMembersResponse{} }
func (m *RPCHubAddMembersResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubAddMembersResponse) ProtoMessage()    {}

func (m *RPCHubAddMembersResponse) GetUpdatedEntries() []*HubAddMembersResponseEntry {
	if m != nil {
		return m.UpdatedEntries
	}
	return nil
}

// used to fetch all members for a hub
type RPCHubGetMembersRequest struct {
	HubId         string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	FetchExisting bool   `protobuf:"varint,3,opt,name=fetch_existing" json:"fetch_existing,omitempty"`
	FetchPending  bool   `protobuf:"varint,4,opt,name=fetch_pending" json:"fetch_pending,omitempty"`
	FetchBanned   bool   `protobuf:"varint,5,opt,name=fetch_banned" json:"fetch_banned,omitempty"`
	Size          int64  `protobuf:"varint,6,opt,name=size" json:"size,omitempty"`
	From          int64  `protobuf:"varint,7,opt,name=from" json:"from,omitempty"`
}

func (m *RPCHubGetMembersRequest) Reset()         { *m = RPCHubGetMembersRequest{} }
func (m *RPCHubGetMembersRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetMembersRequest) ProtoMessage()    {}

type RPCHubGetMembersResponse struct {
	Error         RPCHubGetMembersResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubGetMembersResponse_ErrorType" json:"error,omitempty"`
	ExistingUsers []*MembershipEntry                 `protobuf:"bytes,2,rep,name=existing_users" json:"existing_users,omitempty"`
	PendingUsers  []*MembershipEntry                 `protobuf:"bytes,3,rep,name=pending_users" json:"pending_users,omitempty"`
	BannedUsers   []*MembershipEntry                 `protobuf:"bytes,4,rep,name=banned_users" json:"banned_users,omitempty"`
	TotalUsers    int64                              `protobuf:"varint,5,opt,name=total_users" json:"total_users,omitempty"`
	From          int64                              `protobuf:"varint,6,opt,name=from" json:"from,omitempty"`
	PagedUsers    int64                              `protobuf:"varint,7,opt,name=paged_users" json:"paged_users,omitempty"`
}

func (m *RPCHubGetMembersResponse) Reset()         { *m = RPCHubGetMembersResponse{} }
func (m *RPCHubGetMembersResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetMembersResponse) ProtoMessage()    {}

func (m *RPCHubGetMembersResponse) GetExistingUsers() []*MembershipEntry {
	if m != nil {
		return m.ExistingUsers
	}
	return nil
}

func (m *RPCHubGetMembersResponse) GetPendingUsers() []*MembershipEntry {
	if m != nil {
		return m.PendingUsers
	}
	return nil
}

func (m *RPCHubGetMembersResponse) GetBannedUsers() []*MembershipEntry {
	if m != nil {
		return m.BannedUsers
	}
	return nil
}

type MembershipEntry struct {
	UserId       string                         `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	InvitedEmail string                         `protobuf:"bytes,2,opt,name=invited_email" json:"invited_email,omitempty"`
	Status       MembershipEntry_Status         `protobuf:"varint,3,opt,name=status,enum=proto.MembershipEntry_Status" json:"status,omitempty"`
	Type         MembershipEntry_MembershipType `protobuf:"varint,4,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
	User         *ChatUser                      `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	Owner        *ChatUser                      `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
	CreatedAt    int64                          `protobuf:"varint,7,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt    int64                          `protobuf:"varint,8,opt,name=updated_at" json:"updated_at,omitempty"`
	DerivedType  MembershipEntry_MembershipType `protobuf:"varint,9,opt,name=derived_type,enum=proto.MembershipEntry_MembershipType" json:"derived_type,omitempty"`
	ParentType   MembershipEntry_MembershipType `protobuf:"varint,10,opt,name=parent_type,enum=proto.MembershipEntry_MembershipType" json:"parent_type,omitempty"`
	BannedUntil  int64                          `protobuf:"varint,11,opt,name=banned_until" json:"banned_until,omitempty"`
}

func (m *MembershipEntry) Reset()         { *m = MembershipEntry{} }
func (m *MembershipEntry) String() string { return proto.CompactTextString(m) }
func (*MembershipEntry) ProtoMessage()    {}

func (m *MembershipEntry) GetUser() *ChatUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *MembershipEntry) GetOwner() *ChatUser {
	if m != nil {
		return m.Owner
	}
	return nil
}

// used to resend an invitation email for an invited member that has not joined the hub yet
type RPCHubSendInviteRequest struct {
	HubId    string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	SenderId string `protobuf:"bytes,2,opt,name=sender_id" json:"sender_id,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
}

func (m *RPCHubSendInviteRequest) Reset()         { *m = RPCHubSendInviteRequest{} }
func (m *RPCHubSendInviteRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubSendInviteRequest) ProtoMessage()    {}

type RPCHubSendInviteResponse struct {
	Error RPCHubSendInviteResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubSendInviteResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubSendInviteResponse) Reset()         { *m = RPCHubSendInviteResponse{} }
func (m *RPCHubSendInviteResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubSendInviteResponse) ProtoMessage()    {}

type RPCHubRequestMembershipRequest struct {
	HubId  string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
}

func (m *RPCHubRequestMembershipRequest) Reset()         { *m = RPCHubRequestMembershipRequest{} }
func (m *RPCHubRequestMembershipRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubRequestMembershipRequest) ProtoMessage()    {}

type RPCHubRequestMembershipResponse struct {
	Error RPCHubRequestMembershipResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubRequestMembershipResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubRequestMembershipResponse) Reset()         { *m = RPCHubRequestMembershipResponse{} }
func (m *RPCHubRequestMembershipResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubRequestMembershipResponse) ProtoMessage()    {}

// used to edit an existing hub membership
// a membership/invite can be revoked/deleted by setting type to NONE
// either user id or email have to be supplied to identify the user to be edited
type RPCHubEditMemberRequest struct {
	HubId         string                         `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	EditerId      string                         `protobuf:"bytes,2,opt,name=editer_id" json:"editer_id,omitempty"`
	UserId        string                         `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	Email         string                         `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Type          MembershipEntry_MembershipType `protobuf:"varint,5,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
	FetchExisting bool                           `protobuf:"varint,6,opt,name=fetch_existing" json:"fetch_existing,omitempty"`
	FetchPending  bool                           `protobuf:"varint,7,opt,name=fetch_pending" json:"fetch_pending,omitempty"`
	FetchBanned   bool                           `protobuf:"varint,8,opt,name=fetch_banned" json:"fetch_banned,omitempty"`
	BanDuration   int64                          `protobuf:"varint,9,opt,name=ban_duration" json:"ban_duration,omitempty"`
}

func (m *RPCHubEditMemberRequest) Reset()         { *m = RPCHubEditMemberRequest{} }
func (m *RPCHubEditMemberRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubEditMemberRequest) ProtoMessage()    {}

type RPCHubEditMemberResponse struct {
	Error         RPCHubEditMemberResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubEditMemberResponse_ErrorType" json:"error,omitempty"`
	ExistingUsers []*MembershipEntry                 `protobuf:"bytes,2,rep,name=existing_users" json:"existing_users,omitempty"`
	PendingUsers  []*MembershipEntry                 `protobuf:"bytes,3,rep,name=pending_users" json:"pending_users,omitempty"`
	BannedUsers   []*MembershipEntry                 `protobuf:"bytes,4,rep,name=banned_users" json:"banned_users,omitempty"`
	UpdatedEntry  *MembershipEntry                   `protobuf:"bytes,5,opt,name=updated_entry" json:"updated_entry,omitempty"`
}

func (m *RPCHubEditMemberResponse) Reset()         { *m = RPCHubEditMemberResponse{} }
func (m *RPCHubEditMemberResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubEditMemberResponse) ProtoMessage()    {}

func (m *RPCHubEditMemberResponse) GetExistingUsers() []*MembershipEntry {
	if m != nil {
		return m.ExistingUsers
	}
	return nil
}

func (m *RPCHubEditMemberResponse) GetPendingUsers() []*MembershipEntry {
	if m != nil {
		return m.PendingUsers
	}
	return nil
}

func (m *RPCHubEditMemberResponse) GetBannedUsers() []*MembershipEntry {
	if m != nil {
		return m.BannedUsers
	}
	return nil
}

func (m *RPCHubEditMemberResponse) GetUpdatedEntry() *MembershipEntry {
	if m != nil {
		return m.UpdatedEntry
	}
	return nil
}

// used to join a hub channel
// code is optional (can be used to redeem an invite via email)
type RPCHubJoinHubRequest struct {
	HubId  string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	Code   string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *RPCHubJoinHubRequest) Reset()         { *m = RPCHubJoinHubRequest{} }
func (m *RPCHubJoinHubRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubJoinHubRequest) ProtoMessage()    {}

type RPCHubJoinHubResponse struct {
	Error RPCHubJoinHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubJoinHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubJoinHubResponse) Reset()         { *m = RPCHubJoinHubResponse{} }
func (m *RPCHubJoinHubResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubJoinHubResponse) ProtoMessage()    {}

// used to leave a hub channel
type RPCHubLeaveHubRequest struct {
	HubId  string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
}

func (m *RPCHubLeaveHubRequest) Reset()         { *m = RPCHubLeaveHubRequest{} }
func (m *RPCHubLeaveHubRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubLeaveHubRequest) ProtoMessage()    {}

type RPCHubLeaveHubResponse struct {
	Error RPCHubLeaveHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubLeaveHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubLeaveHubResponse) Reset()         { *m = RPCHubLeaveHubResponse{} }
func (m *RPCHubLeaveHubResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubLeaveHubResponse) ProtoMessage()    {}

// used to add an external member to a hub
type RPCHubAddExternalMemberRequest struct {
	HubId          string                         `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	ActingUserId   string                         `protobuf:"bytes,2,opt,name=acting_user_id" json:"acting_user_id,omitempty"`
	ActingGroupId  string                         `protobuf:"bytes,3,opt,name=acting_group_id" json:"acting_group_id,omitempty"`
	ExternalUserId string                         `protobuf:"bytes,4,opt,name=external_user_id" json:"external_user_id,omitempty"`
	Type           MembershipEntry_MembershipType `protobuf:"varint,5,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
}

func (m *RPCHubAddExternalMemberRequest) Reset()         { *m = RPCHubAddExternalMemberRequest{} }
func (m *RPCHubAddExternalMemberRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubAddExternalMemberRequest) ProtoMessage()    {}

type RPCHubAddExternalMemberResponse struct {
	Error RPCHubAddExternalMemberResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubAddExternalMemberResponse_ErrorType" json:"error,omitempty"`
	Users []*ExternalMembershipEntry                `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *RPCHubAddExternalMemberResponse) Reset()         { *m = RPCHubAddExternalMemberResponse{} }
func (m *RPCHubAddExternalMemberResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubAddExternalMemberResponse) ProtoMessage()    {}

func (m *RPCHubAddExternalMemberResponse) GetUsers() []*ExternalMembershipEntry {
	if m != nil {
		return m.Users
	}
	return nil
}

// used to fetch all external members for a hub
type RPCHubGetExternalMembersRequest struct {
	HubId         string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	ActingUserId  string `protobuf:"bytes,2,opt,name=acting_user_id" json:"acting_user_id,omitempty"`
	ActingGroupId string `protobuf:"bytes,3,opt,name=acting_group_id" json:"acting_group_id,omitempty"`
}

func (m *RPCHubGetExternalMembersRequest) Reset()         { *m = RPCHubGetExternalMembersRequest{} }
func (m *RPCHubGetExternalMembersRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetExternalMembersRequest) ProtoMessage()    {}

type RPCHubGetExternalMembersResponse struct {
	Error RPCHubGetExternalMembersResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubGetExternalMembersResponse_ErrorType" json:"error,omitempty"`
	Users []*ExternalMembershipEntry                 `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *RPCHubGetExternalMembersResponse) Reset()         { *m = RPCHubGetExternalMembersResponse{} }
func (m *RPCHubGetExternalMembersResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetExternalMembersResponse) ProtoMessage()    {}

func (m *RPCHubGetExternalMembersResponse) GetUsers() []*ExternalMembershipEntry {
	if m != nil {
		return m.Users
	}
	return nil
}

type ExternalMembershipEntry struct {
	ExternalUserId string                                 `protobuf:"bytes,1,opt,name=external_user_id" json:"external_user_id,omitempty"`
	Type           ExternalMembershipEntry_MembershipType `protobuf:"varint,2,opt,name=type,enum=proto.ExternalMembershipEntry_MembershipType" json:"type,omitempty"`
	CreatedAt      int64                                  `protobuf:"varint,3,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt      int64                                  `protobuf:"varint,4,opt,name=updated_at" json:"updated_at,omitempty"`
}

func (m *ExternalMembershipEntry) Reset()         { *m = ExternalMembershipEntry{} }
func (m *ExternalMembershipEntry) String() string { return proto.CompactTextString(m) }
func (*ExternalMembershipEntry) ProtoMessage()    {}

// used to edit an existing hub membership
// a membership/invite can be revoked/deleted by setting type to NONE
type RPCHubEditExternalMemberRequest struct {
	HubId          string                         `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	ActingUserId   string                         `protobuf:"bytes,2,opt,name=acting_user_id" json:"acting_user_id,omitempty"`
	ActingGroupId  string                         `protobuf:"bytes,3,opt,name=acting_group_id" json:"acting_group_id,omitempty"`
	ExternalUserId string                         `protobuf:"bytes,4,opt,name=external_user_id" json:"external_user_id,omitempty"`
	Type           MembershipEntry_MembershipType `protobuf:"varint,5,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
}

func (m *RPCHubEditExternalMemberRequest) Reset()         { *m = RPCHubEditExternalMemberRequest{} }
func (m *RPCHubEditExternalMemberRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubEditExternalMemberRequest) ProtoMessage()    {}

type RPCHubEditExternalMemberResponse struct {
	Error RPCHubEditExternalMemberResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubEditExternalMemberResponse_ErrorType" json:"error,omitempty"`
	Users []*ExternalMembershipEntry                 `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *RPCHubEditExternalMemberResponse) Reset()         { *m = RPCHubEditExternalMemberResponse{} }
func (m *RPCHubEditExternalMemberResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubEditExternalMemberResponse) ProtoMessage()    {}

func (m *RPCHubEditExternalMemberResponse) GetUsers() []*ExternalMembershipEntry {
	if m != nil {
		return m.Users
	}
	return nil
}

type RPCHubGetMemberRequest struct {
	HubId  string `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
}

func (m *RPCHubGetMemberRequest) Reset()         { *m = RPCHubGetMemberRequest{} }
func (m *RPCHubGetMemberRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetMemberRequest) ProtoMessage()    {}

type RPCHubGetMemberResponse struct {
	Error RPCHubGetMemberResponse_ErrorType  `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubGetMemberResponse_ErrorType" json:"error,omitempty"`
	Type  HubMembershipRecord_MembershipType `protobuf:"varint,2,opt,name=type,enum=proto.HubMembershipRecord_MembershipType" json:"type,omitempty"`
}

func (m *RPCHubGetMemberResponse) Reset()         { *m = RPCHubGetMemberResponse{} }
func (m *RPCHubGetMemberResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetMemberResponse) ProtoMessage()    {}

type RPCHubRegisterExternalUserIDRequest struct {
	UserId         string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	GroupId        string `protobuf:"bytes,2,opt,name=group_id" json:"group_id,omitempty"`
	ExternalUserId string `protobuf:"bytes,3,opt,name=external_user_id" json:"external_user_id,omitempty"`
}

func (m *RPCHubRegisterExternalUserIDRequest) Reset()         { *m = RPCHubRegisterExternalUserIDRequest{} }
func (m *RPCHubRegisterExternalUserIDRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubRegisterExternalUserIDRequest) ProtoMessage()    {}

type RPCHubRegisterExternalUserIDResponse struct {
	Error RPCHubRegisterExternalUserIDResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubRegisterExternalUserIDResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCHubRegisterExternalUserIDResponse) Reset()         { *m = RPCHubRegisterExternalUserIDResponse{} }
func (m *RPCHubRegisterExternalUserIDResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubRegisterExternalUserIDResponse) ProtoMessage()    {}

type RPCHubGetUserByExternalIDRequest struct {
	ExternalUserId string `protobuf:"bytes,1,opt,name=external_user_id" json:"external_user_id,omitempty"`
	GroupId        string `protobuf:"bytes,2,opt,name=group_id" json:"group_id,omitempty"`
}

func (m *RPCHubGetUserByExternalIDRequest) Reset()         { *m = RPCHubGetUserByExternalIDRequest{} }
func (m *RPCHubGetUserByExternalIDRequest) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetUserByExternalIDRequest) ProtoMessage()    {}

type RPCHubGetUserByExternalIDResponse struct {
	Error    HubGetUserByExternalIDResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.HubGetUserByExternalIDResponse_ErrorType" json:"error,omitempty"`
	UserInfo *ExternalUserInfo                        `protobuf:"bytes,2,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *RPCHubGetUserByExternalIDResponse) Reset()         { *m = RPCHubGetUserByExternalIDResponse{} }
func (m *RPCHubGetUserByExternalIDResponse) String() string { return proto.CompactTextString(m) }
func (*RPCHubGetUserByExternalIDResponse) ProtoMessage()    {}

func (m *RPCHubGetUserByExternalIDResponse) GetUserInfo() *ExternalUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type HubInvite struct {
	Id        string                             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt int64                              `protobuf:"varint,2,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt int64                              `protobuf:"varint,3,opt,name=updated_at" json:"updated_at,omitempty"`
	HubId     string                             `protobuf:"bytes,4,opt,name=hub_id" json:"hub_id,omitempty"`
	InviterId string                             `protobuf:"bytes,5,opt,name=inviter_id" json:"inviter_id,omitempty"`
	UserId    string                             `protobuf:"bytes,6,opt,name=user_id" json:"user_id,omitempty"`
	Email     string                             `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	Code      string                             `protobuf:"bytes,8,opt,name=code" json:"code,omitempty"`
	Type      HubMembershipRecord_MembershipType `protobuf:"varint,9,opt,name=type,enum=proto.HubMembershipRecord_MembershipType" json:"type,omitempty"`
}

func (m *HubInvite) Reset()         { *m = HubInvite{} }
func (m *HubInvite) String() string { return proto.CompactTextString(m) }
func (*HubInvite) ProtoMessage()    {}

type HubMembershipRequest struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt int64  `protobuf:"varint,2,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,3,opt,name=updated_at" json:"updated_at,omitempty"`
	HubId     string `protobuf:"bytes,4,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId    string `protobuf:"bytes,5,opt,name=user_id" json:"user_id,omitempty"`
}

func (m *HubMembershipRequest) Reset()         { *m = HubMembershipRequest{} }
func (m *HubMembershipRequest) String() string { return proto.CompactTextString(m) }
func (*HubMembershipRequest) ProtoMessage()    {}

type HubMembership struct {
	HubId       string                             `protobuf:"bytes,1,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId      string                             `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	Type        HubMembershipRecord_MembershipType `protobuf:"varint,3,opt,name=type,enum=proto.HubMembershipRecord_MembershipType" json:"type,omitempty"`
	Hub         *Hub                               `protobuf:"bytes,4,opt,name=hub" json:"hub,omitempty"`
	Permissions *HubPermissions                    `protobuf:"bytes,5,opt,name=permissions" json:"permissions,omitempty"`
}

func (m *HubMembership) Reset()         { *m = HubMembership{} }
func (m *HubMembership) String() string { return proto.CompactTextString(m) }
func (*HubMembership) ProtoMessage()    {}

func (m *HubMembership) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

func (m *HubMembership) GetPermissions() *HubPermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type HubMembershipRecord struct {
	Id          string                             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt   int64                              `protobuf:"varint,2,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt   int64                              `protobuf:"varint,3,opt,name=updated_at" json:"updated_at,omitempty"`
	HubId       string                             `protobuf:"bytes,4,opt,name=hub_id" json:"hub_id,omitempty"`
	UserId      string                             `protobuf:"bytes,5,opt,name=user_id" json:"user_id,omitempty"`
	Type        HubMembershipRecord_MembershipType `protobuf:"varint,6,opt,name=type,enum=proto.HubMembershipRecord_MembershipType" json:"type,omitempty"`
	Hub         *Hub                               `protobuf:"bytes,7,opt,name=hub" json:"hub,omitempty"`
	User        *User                              `protobuf:"bytes,8,opt,name=user" json:"user,omitempty"`
	Permissions *HubPermissions                    `protobuf:"bytes,9,opt,name=permissions" json:"permissions,omitempty"`
}

func (m *HubMembershipRecord) Reset()         { *m = HubMembershipRecord{} }
func (m *HubMembershipRecord) String() string { return proto.CompactTextString(m) }
func (*HubMembershipRecord) ProtoMessage()    {}

func (m *HubMembershipRecord) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

func (m *HubMembershipRecord) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *HubMembershipRecord) GetPermissions() *HubPermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type HubPermissions struct {
	EditHub   bool `protobuf:"varint,1,opt,name=edit_hub" json:"edit_hub,omitempty"`
	DeleteHub bool `protobuf:"varint,2,opt,name=delete_hub" json:"delete_hub,omitempty"`
}

func (m *HubPermissions) Reset()         { *m = HubPermissions{} }
func (m *HubPermissions) String() string { return proto.CompactTextString(m) }
func (*HubPermissions) ProtoMessage()    {}

type HubExternalMembershipRecord struct {
	Id             string                             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt      int64                              `protobuf:"varint,2,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt      int64                              `protobuf:"varint,3,opt,name=updated_at" json:"updated_at,omitempty"`
	HubId          string                             `protobuf:"bytes,4,opt,name=hub_id" json:"hub_id,omitempty"`
	ExternalUserId string                             `protobuf:"bytes,5,opt,name=external_user_id" json:"external_user_id,omitempty"`
	Type           HubMembershipRecord_MembershipType `protobuf:"varint,7,opt,name=type,enum=proto.HubMembershipRecord_MembershipType" json:"type,omitempty"`
}

func (m *HubExternalMembershipRecord) Reset()         { *m = HubExternalMembershipRecord{} }
func (m *HubExternalMembershipRecord) String() string { return proto.CompactTextString(m) }
func (*HubExternalMembershipRecord) ProtoMessage()    {}

type ExternalUserInfo struct {
	ExternalUserId string `protobuf:"bytes,1,opt,name=external_user_id" json:"external_user_id,omitempty"`
	EmailAddress   string `protobuf:"bytes,2,opt,name=email_address" json:"email_address,omitempty"`
}

func (m *ExternalUserInfo) Reset()         { *m = ExternalUserInfo{} }
func (m *ExternalUserInfo) String() string { return proto.CompactTextString(m) }
func (*ExternalUserInfo) ProtoMessage()    {}

type HubCreateHubRequest struct {
	ParentIds                    []string     `protobuf:"bytes,1,rep,name=parent_ids" json:"parent_ids,omitempty"`
	TranslationIds               []string     `protobuf:"bytes,2,rep,name=translation_ids" json:"translation_ids,omitempty"`
	Closed                       bool         `protobuf:"varint,4,opt,name=closed" json:"closed,omitempty"`
	Title                        string       `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	ShortTitle                   string       `protobuf:"bytes,6,opt,name=short_title" json:"short_title,omitempty"`
	Description                  string       `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	TitleImage                   string       `protobuf:"bytes,8,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImage              string       `protobuf:"bytes,9,opt,name=background_image" json:"background_image,omitempty"`
	ClaimedGroupId               string       `protobuf:"bytes,10,opt,name=claimed_group_id" json:"claimed_group_id,omitempty"`
	Language                     string       `protobuf:"bytes,11,opt,name=language" json:"language,omitempty"`
	Nsfw                         bool         `protobuf:"varint,12,opt,name=nsfw" json:"nsfw,omitempty"`
	AutoGenerateTitleSuffix      bool         `protobuf:"varint,13,opt,name=auto_generate_title_suffix" json:"auto_generate_title_suffix,omitempty"`
	AutoGenerateShortTitleSuffix bool         `protobuf:"varint,14,opt,name=auto_generate_short_title_suffix" json:"auto_generate_short_title_suffix,omitempty"`
	GeoLocation                  *GeoLocation `protobuf:"bytes,15,opt,name=geo_location" json:"geo_location,omitempty"`
}

func (m *HubCreateHubRequest) Reset()         { *m = HubCreateHubRequest{} }
func (m *HubCreateHubRequest) String() string { return proto.CompactTextString(m) }
func (*HubCreateHubRequest) ProtoMessage()    {}

func (m *HubCreateHubRequest) GetGeoLocation() *GeoLocation {
	if m != nil {
		return m.GeoLocation
	}
	return nil
}

type HubCreateHubResponse struct {
	Error    RPCHubCreateHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubCreateHubResponse_ErrorType" json:"error,omitempty"`
	Hub      *Hub                              `protobuf:"bytes,2,opt,name=hub" json:"hub,omitempty"`
	Children []*Hub                            `protobuf:"bytes,3,rep,name=children" json:"children,omitempty"`
	Siblings []*Hub                            `protobuf:"bytes,4,rep,name=siblings" json:"siblings,omitempty"`
}

func (m *HubCreateHubResponse) Reset()         { *m = HubCreateHubResponse{} }
func (m *HubCreateHubResponse) String() string { return proto.CompactTextString(m) }
func (*HubCreateHubResponse) ProtoMessage()    {}

func (m *HubCreateHubResponse) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

func (m *HubCreateHubResponse) GetChildren() []*Hub {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *HubCreateHubResponse) GetSiblings() []*Hub {
	if m != nil {
		return m.Siblings
	}
	return nil
}

type HubGetHubResponse struct {
	Hub      *Hub   `protobuf:"bytes,1,opt,name=hub" json:"hub,omitempty"`
	Children []*Hub `protobuf:"bytes,2,rep,name=children" json:"children,omitempty"`
	Siblings []*Hub `protobuf:"bytes,3,rep,name=siblings" json:"siblings,omitempty"`
}

func (m *HubGetHubResponse) Reset()         { *m = HubGetHubResponse{} }
func (m *HubGetHubResponse) String() string { return proto.CompactTextString(m) }
func (*HubGetHubResponse) ProtoMessage()    {}

func (m *HubGetHubResponse) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

func (m *HubGetHubResponse) GetChildren() []*Hub {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *HubGetHubResponse) GetSiblings() []*Hub {
	if m != nil {
		return m.Siblings
	}
	return nil
}

type HubGetAllHubsResponse struct {
	Hubs []*Hub `protobuf:"bytes,1,rep,name=hubs" json:"hubs,omitempty"`
}

func (m *HubGetAllHubsResponse) Reset()         { *m = HubGetAllHubsResponse{} }
func (m *HubGetAllHubsResponse) String() string { return proto.CompactTextString(m) }
func (*HubGetAllHubsResponse) ProtoMessage()    {}

func (m *HubGetAllHubsResponse) GetHubs() []*Hub {
	if m != nil {
		return m.Hubs
	}
	return nil
}

type HubEditHubRequest struct {
	ParentIds                     *OptionalRepeatedString `protobuf:"bytes,1,opt,name=parent_ids" json:"parent_ids,omitempty"`
	TranslationIds                *OptionalRepeatedString `protobuf:"bytes,2,opt,name=translation_ids" json:"translation_ids,omitempty"`
	Closed                        *BoolValue              `protobuf:"bytes,3,opt,name=closed" json:"closed,omitempty"`
	Title                         *StringValue            `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	ShortTitle                    *StringValue            `protobuf:"bytes,5,opt,name=short_title" json:"short_title,omitempty"`
	Description                   *StringValue            `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	TitleImage                    *StringValue            `protobuf:"bytes,7,opt,name=title_image" json:"title_image,omitempty"`
	BackgroundImage               *StringValue            `protobuf:"bytes,8,opt,name=background_image" json:"background_image,omitempty"`
	ClaimedGroupId                *StringValue            `protobuf:"bytes,9,opt,name=claimed_group_id" json:"claimed_group_id,omitempty"`
	Language                      *StringValue            `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	Nsfw                          *BoolValue              `protobuf:"bytes,11,opt,name=nsfw" json:"nsfw,omitempty"`
	WordfilterEnabled             *BoolValue              `protobuf:"bytes,12,opt,name=wordfilter_enabled" json:"wordfilter_enabled,omitempty"`
	WordfilterList                *StringValue            `protobuf:"bytes,13,opt,name=wordfilter_list" json:"wordfilter_list,omitempty"`
	LinkwhitelistEnabled          *BoolValue              `protobuf:"bytes,14,opt,name=linkwhitelist_enabled" json:"linkwhitelist_enabled,omitempty"`
	LinkwhitelistList             *StringValue            `protobuf:"bytes,15,opt,name=linkwhitelist_list" json:"linkwhitelist_list,omitempty"`
	GeoLocation                   *OptionalGeoLocation    `protobuf:"bytes,16,opt,name=geo_location" json:"geo_location,omitempty"`
	Topic                         *StringValue            `protobuf:"bytes,17,opt,name=topic" json:"topic,omitempty"`
	MaxMessageLength              *Int32Value             `protobuf:"bytes,18,opt,name=max_message_length" json:"max_message_length,omitempty"`
	MaxMessagesPerMinute          *Int32Value             `protobuf:"bytes,19,opt,name=max_messages_per_minute" json:"max_messages_per_minute,omitempty"`
	MaxMessageLengthEphemeral     *Int32Value             `protobuf:"bytes,20,opt,name=max_message_length_ephemeral" json:"max_message_length_ephemeral,omitempty"`
	MaxMessagesPerMinuteEphemeral *Int32Value             `protobuf:"bytes,21,opt,name=max_messages_per_minute_ephemeral" json:"max_messages_per_minute_ephemeral,omitempty"`
}

func (m *HubEditHubRequest) Reset()         { *m = HubEditHubRequest{} }
func (m *HubEditHubRequest) String() string { return proto.CompactTextString(m) }
func (*HubEditHubRequest) ProtoMessage()    {}

func (m *HubEditHubRequest) GetParentIds() *OptionalRepeatedString {
	if m != nil {
		return m.ParentIds
	}
	return nil
}

func (m *HubEditHubRequest) GetTranslationIds() *OptionalRepeatedString {
	if m != nil {
		return m.TranslationIds
	}
	return nil
}

func (m *HubEditHubRequest) GetClosed() *BoolValue {
	if m != nil {
		return m.Closed
	}
	return nil
}

func (m *HubEditHubRequest) GetTitle() *StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *HubEditHubRequest) GetShortTitle() *StringValue {
	if m != nil {
		return m.ShortTitle
	}
	return nil
}

func (m *HubEditHubRequest) GetDescription() *StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *HubEditHubRequest) GetTitleImage() *StringValue {
	if m != nil {
		return m.TitleImage
	}
	return nil
}

func (m *HubEditHubRequest) GetBackgroundImage() *StringValue {
	if m != nil {
		return m.BackgroundImage
	}
	return nil
}

func (m *HubEditHubRequest) GetClaimedGroupId() *StringValue {
	if m != nil {
		return m.ClaimedGroupId
	}
	return nil
}

func (m *HubEditHubRequest) GetLanguage() *StringValue {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *HubEditHubRequest) GetNsfw() *BoolValue {
	if m != nil {
		return m.Nsfw
	}
	return nil
}

func (m *HubEditHubRequest) GetWordfilterEnabled() *BoolValue {
	if m != nil {
		return m.WordfilterEnabled
	}
	return nil
}

func (m *HubEditHubRequest) GetWordfilterList() *StringValue {
	if m != nil {
		return m.WordfilterList
	}
	return nil
}

func (m *HubEditHubRequest) GetLinkwhitelistEnabled() *BoolValue {
	if m != nil {
		return m.LinkwhitelistEnabled
	}
	return nil
}

func (m *HubEditHubRequest) GetLinkwhitelistList() *StringValue {
	if m != nil {
		return m.LinkwhitelistList
	}
	return nil
}

func (m *HubEditHubRequest) GetGeoLocation() *OptionalGeoLocation {
	if m != nil {
		return m.GeoLocation
	}
	return nil
}

func (m *HubEditHubRequest) GetTopic() *StringValue {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *HubEditHubRequest) GetMaxMessageLength() *Int32Value {
	if m != nil {
		return m.MaxMessageLength
	}
	return nil
}

func (m *HubEditHubRequest) GetMaxMessagesPerMinute() *Int32Value {
	if m != nil {
		return m.MaxMessagesPerMinute
	}
	return nil
}

func (m *HubEditHubRequest) GetMaxMessageLengthEphemeral() *Int32Value {
	if m != nil {
		return m.MaxMessageLengthEphemeral
	}
	return nil
}

func (m *HubEditHubRequest) GetMaxMessagesPerMinuteEphemeral() *Int32Value {
	if m != nil {
		return m.MaxMessagesPerMinuteEphemeral
	}
	return nil
}

type HubEditHubResponse struct {
	Error    RPCHubCreateHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubCreateHubResponse_ErrorType" json:"error,omitempty"`
	Hub      *Hub                              `protobuf:"bytes,2,opt,name=hub" json:"hub,omitempty"`
	Children []*Hub                            `protobuf:"bytes,3,rep,name=children" json:"children,omitempty"`
	Siblings []*Hub                            `protobuf:"bytes,4,rep,name=siblings" json:"siblings,omitempty"`
}

func (m *HubEditHubResponse) Reset()         { *m = HubEditHubResponse{} }
func (m *HubEditHubResponse) String() string { return proto.CompactTextString(m) }
func (*HubEditHubResponse) ProtoMessage()    {}

func (m *HubEditHubResponse) GetHub() *Hub {
	if m != nil {
		return m.Hub
	}
	return nil
}

func (m *HubEditHubResponse) GetChildren() []*Hub {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *HubEditHubResponse) GetSiblings() []*Hub {
	if m != nil {
		return m.Siblings
	}
	return nil
}

type HubDeleteHubResponse struct {
	Error RPCHubDeleteHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubDeleteHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *HubDeleteHubResponse) Reset()         { *m = HubDeleteHubResponse{} }
func (m *HubDeleteHubResponse) String() string { return proto.CompactTextString(m) }
func (*HubDeleteHubResponse) ProtoMessage()    {}

type HubValidateTitleRequest struct {
	Title      *StringValue `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	ShortTitle *StringValue `protobuf:"bytes,2,opt,name=short_title" json:"short_title,omitempty"`
}

func (m *HubValidateTitleRequest) Reset()         { *m = HubValidateTitleRequest{} }
func (m *HubValidateTitleRequest) String() string { return proto.CompactTextString(m) }
func (*HubValidateTitleRequest) ProtoMessage()    {}

func (m *HubValidateTitleRequest) GetTitle() *StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *HubValidateTitleRequest) GetShortTitle() *StringValue {
	if m != nil {
		return m.ShortTitle
	}
	return nil
}

type HubValidateTitleResponse struct {
	Error RPCHubValidateTitleResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubValidateTitleResponse_ErrorType" json:"error,omitempty"`
}

func (m *HubValidateTitleResponse) Reset()         { *m = HubValidateTitleResponse{} }
func (m *HubValidateTitleResponse) String() string { return proto.CompactTextString(m) }
func (*HubValidateTitleResponse) ProtoMessage()    {}

// used to add (invite) a member to a hub or group
type AddMemberRequest struct {
	UserId        string                         `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Email         string                         `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Type          MembershipEntry_MembershipType `protobuf:"varint,3,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
	FetchExisting bool                           `protobuf:"varint,4,opt,name=fetch_existing" json:"fetch_existing,omitempty"`
	FetchPending  bool                           `protobuf:"varint,5,opt,name=fetch_pending" json:"fetch_pending,omitempty"`
	FetchBanned   bool                           `protobuf:"varint,6,opt,name=fetch_banned" json:"fetch_banned,omitempty"`
	BanDuration   int64                          `protobuf:"varint,7,opt,name=ban_duration" json:"ban_duration,omitempty"`
	InviteText    string                         `protobuf:"bytes,8,opt,name=invite_text" json:"invite_text,omitempty"`
	JoinLink      string                         `protobuf:"bytes,9,opt,name=join_link" json:"join_link,omitempty"`
}

func (m *AddMemberRequest) Reset()         { *m = AddMemberRequest{} }
func (m *AddMemberRequest) String() string { return proto.CompactTextString(m) }
func (*AddMemberRequest) ProtoMessage()    {}

type AddMemberResponse struct {
	Error         RPCHubAddMemberResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubAddMemberResponse_ErrorType" json:"error,omitempty"`
	ExistingUsers []*MembershipEntry                `protobuf:"bytes,2,rep,name=existing_users" json:"existing_users,omitempty"`
	PendingUsers  []*MembershipEntry                `protobuf:"bytes,3,rep,name=pending_users" json:"pending_users,omitempty"`
	BannedUsers   []*MembershipEntry                `protobuf:"bytes,4,rep,name=banned_users" json:"banned_users,omitempty"`
	UpdatedEntry  *MembershipEntry                  `protobuf:"bytes,5,opt,name=updated_entry" json:"updated_entry,omitempty"`
}

func (m *AddMemberResponse) Reset()         { *m = AddMemberResponse{} }
func (m *AddMemberResponse) String() string { return proto.CompactTextString(m) }
func (*AddMemberResponse) ProtoMessage()    {}

func (m *AddMemberResponse) GetExistingUsers() []*MembershipEntry {
	if m != nil {
		return m.ExistingUsers
	}
	return nil
}

func (m *AddMemberResponse) GetPendingUsers() []*MembershipEntry {
	if m != nil {
		return m.PendingUsers
	}
	return nil
}

func (m *AddMemberResponse) GetBannedUsers() []*MembershipEntry {
	if m != nil {
		return m.BannedUsers
	}
	return nil
}

func (m *AddMemberResponse) GetUpdatedEntry() *MembershipEntry {
	if m != nil {
		return m.UpdatedEntry
	}
	return nil
}

type HubAddMembersRequest struct {
	InviteText string                       `protobuf:"bytes,1,opt,name=invite_text" json:"invite_text,omitempty"`
	JoinLink   string                       `protobuf:"bytes,2,opt,name=join_link" json:"join_link,omitempty"`
	Entries    []*HubAddMembersRequestEntry `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`
}

func (m *HubAddMembersRequest) Reset()         { *m = HubAddMembersRequest{} }
func (m *HubAddMembersRequest) String() string { return proto.CompactTextString(m) }
func (*HubAddMembersRequest) ProtoMessage()    {}

func (m *HubAddMembersRequest) GetEntries() []*HubAddMembersRequestEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type HubAddMembersResponse struct {
	Error          HubAddMembersResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.HubAddMembersResponse_ErrorType" json:"error,omitempty"`
	UpdatedEntries []*HubAddMembersResponseEntry   `protobuf:"bytes,2,rep,name=updated_entries" json:"updated_entries,omitempty"`
}

func (m *HubAddMembersResponse) Reset()         { *m = HubAddMembersResponse{} }
func (m *HubAddMembersResponse) String() string { return proto.CompactTextString(m) }
func (*HubAddMembersResponse) ProtoMessage()    {}

func (m *HubAddMembersResponse) GetUpdatedEntries() []*HubAddMembersResponseEntry {
	if m != nil {
		return m.UpdatedEntries
	}
	return nil
}

type HubAddMembersRequestEntry struct {
	UserId      string                         `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Email       string                         `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Type        MembershipEntry_MembershipType `protobuf:"varint,3,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
	BanDuration int64                          `protobuf:"varint,4,opt,name=ban_duration" json:"ban_duration,omitempty"`
	InviteText  string                         `protobuf:"bytes,5,opt,name=invite_text" json:"invite_text,omitempty"`
	JoinLink    string                         `protobuf:"bytes,6,opt,name=join_link" json:"join_link,omitempty"`
}

func (m *HubAddMembersRequestEntry) Reset()         { *m = HubAddMembersRequestEntry{} }
func (m *HubAddMembersRequestEntry) String() string { return proto.CompactTextString(m) }
func (*HubAddMembersRequestEntry) ProtoMessage()    {}

type HubAddMembersResponseEntry struct {
	Error HubAddMembersResponseEntry_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.HubAddMembersResponseEntry_ErrorType" json:"error,omitempty"`
	Entry *HubAddMembersRequestEntry           `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (m *HubAddMembersResponseEntry) Reset()         { *m = HubAddMembersResponseEntry{} }
func (m *HubAddMembersResponseEntry) String() string { return proto.CompactTextString(m) }
func (*HubAddMembersResponseEntry) ProtoMessage()    {}

func (m *HubAddMembersResponseEntry) GetEntry() *HubAddMembersRequestEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

// used to fetch all members for a hub or group
type GetMembersResponse struct {
	Error         RPCHubGetMembersResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubGetMembersResponse_ErrorType" json:"error,omitempty"`
	ExistingUsers []*MembershipEntry                 `protobuf:"bytes,2,rep,name=existing_users" json:"existing_users,omitempty"`
	PendingUsers  []*MembershipEntry                 `protobuf:"bytes,3,rep,name=pending_users" json:"pending_users,omitempty"`
	BannedUsers   []*MembershipEntry                 `protobuf:"bytes,4,rep,name=banned_users" json:"banned_users,omitempty"`
	TotalUsers    int64                              `protobuf:"varint,5,opt,name=total_users" json:"total_users,omitempty"`
	From          int64                              `protobuf:"varint,6,opt,name=from" json:"from,omitempty"`
	PagedUsers    int64                              `protobuf:"varint,7,opt,name=paged_users" json:"paged_users,omitempty"`
}

func (m *GetMembersResponse) Reset()         { *m = GetMembersResponse{} }
func (m *GetMembersResponse) String() string { return proto.CompactTextString(m) }
func (*GetMembersResponse) ProtoMessage()    {}

func (m *GetMembersResponse) GetExistingUsers() []*MembershipEntry {
	if m != nil {
		return m.ExistingUsers
	}
	return nil
}

func (m *GetMembersResponse) GetPendingUsers() []*MembershipEntry {
	if m != nil {
		return m.PendingUsers
	}
	return nil
}

func (m *GetMembersResponse) GetBannedUsers() []*MembershipEntry {
	if m != nil {
		return m.BannedUsers
	}
	return nil
}

type SearchMembersResponse struct {
	Error      SearchMembersResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.SearchMembersResponse_ErrorType" json:"error,omitempty"`
	From       int64                           `protobuf:"varint,2,opt,name=from" json:"from,omitempty"`
	Users      []*MembershipEntry              `protobuf:"bytes,3,rep,name=users" json:"users,omitempty"`
	PagedUsers int64                           `protobuf:"varint,4,opt,name=paged_users" json:"paged_users,omitempty"`
}

func (m *SearchMembersResponse) Reset()         { *m = SearchMembersResponse{} }
func (m *SearchMembersResponse) String() string { return proto.CompactTextString(m) }
func (*SearchMembersResponse) ProtoMessage()    {}

func (m *SearchMembersResponse) GetUsers() []*MembershipEntry {
	if m != nil {
		return m.Users
	}
	return nil
}

// used to resend an invitation email for an invited member that has not joined the hub or group yet
// either user id or email has to be supplied
type SendInviteRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Email  string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *SendInviteRequest) Reset()         { *m = SendInviteRequest{} }
func (m *SendInviteRequest) String() string { return proto.CompactTextString(m) }
func (*SendInviteRequest) ProtoMessage()    {}

type SendInviteResponse struct {
	Error RPCHubSendInviteResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubSendInviteResponse_ErrorType" json:"error,omitempty"`
}

func (m *SendInviteResponse) Reset()         { *m = SendInviteResponse{} }
func (m *SendInviteResponse) String() string { return proto.CompactTextString(m) }
func (*SendInviteResponse) ProtoMessage()    {}

// used to edit an existing hub or group membership
// a membership/invite can be revoked/deleted by setting type to NONE
// either user id or email have to be supplied to identify the user to be edited
type EditMemberRequest struct {
	UserId        string                         `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Email         string                         `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Type          MembershipEntry_MembershipType `protobuf:"varint,3,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
	FetchExisting bool                           `protobuf:"varint,4,opt,name=fetch_existing" json:"fetch_existing,omitempty"`
	FetchPending  bool                           `protobuf:"varint,5,opt,name=fetch_pending" json:"fetch_pending,omitempty"`
	FetchBanned   bool                           `protobuf:"varint,6,opt,name=fetch_banned" json:"fetch_banned,omitempty"`
	BanDuration   int64                          `protobuf:"varint,7,opt,name=ban_duration" json:"ban_duration,omitempty"`
}

func (m *EditMemberRequest) Reset()         { *m = EditMemberRequest{} }
func (m *EditMemberRequest) String() string { return proto.CompactTextString(m) }
func (*EditMemberRequest) ProtoMessage()    {}

type EditMemberResponse struct {
	Error         RPCHubEditMemberResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubEditMemberResponse_ErrorType" json:"error,omitempty"`
	ExistingUsers []*MembershipEntry                 `protobuf:"bytes,2,rep,name=existing_users" json:"existing_users,omitempty"`
	PendingUsers  []*MembershipEntry                 `protobuf:"bytes,3,rep,name=pending_users" json:"pending_users,omitempty"`
	BannedUsers   []*MembershipEntry                 `protobuf:"bytes,4,rep,name=banned_users" json:"banned_users,omitempty"`
	UpdatedEntry  *MembershipEntry                   `protobuf:"bytes,5,opt,name=updated_entry" json:"updated_entry,omitempty"`
}

func (m *EditMemberResponse) Reset()         { *m = EditMemberResponse{} }
func (m *EditMemberResponse) String() string { return proto.CompactTextString(m) }
func (*EditMemberResponse) ProtoMessage()    {}

func (m *EditMemberResponse) GetExistingUsers() []*MembershipEntry {
	if m != nil {
		return m.ExistingUsers
	}
	return nil
}

func (m *EditMemberResponse) GetPendingUsers() []*MembershipEntry {
	if m != nil {
		return m.PendingUsers
	}
	return nil
}

func (m *EditMemberResponse) GetBannedUsers() []*MembershipEntry {
	if m != nil {
		return m.BannedUsers
	}
	return nil
}

func (m *EditMemberResponse) GetUpdatedEntry() *MembershipEntry {
	if m != nil {
		return m.UpdatedEntry
	}
	return nil
}

type HubAddExternalMemberRequest struct {
	ExternalUserId string                         `protobuf:"bytes,1,opt,name=external_user_id" json:"external_user_id,omitempty"`
	Type           MembershipEntry_MembershipType `protobuf:"varint,2,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
}

func (m *HubAddExternalMemberRequest) Reset()         { *m = HubAddExternalMemberRequest{} }
func (m *HubAddExternalMemberRequest) String() string { return proto.CompactTextString(m) }
func (*HubAddExternalMemberRequest) ProtoMessage()    {}

type HubAddExternalMemberResponse struct {
	Error RPCHubAddExternalMemberResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubAddExternalMemberResponse_ErrorType" json:"error,omitempty"`
	Users []*ExternalMembershipEntry                `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *HubAddExternalMemberResponse) Reset()         { *m = HubAddExternalMemberResponse{} }
func (m *HubAddExternalMemberResponse) String() string { return proto.CompactTextString(m) }
func (*HubAddExternalMemberResponse) ProtoMessage()    {}

func (m *HubAddExternalMemberResponse) GetUsers() []*ExternalMembershipEntry {
	if m != nil {
		return m.Users
	}
	return nil
}

type HubEditExternalMemberRequest struct {
	ExternalUserId string                         `protobuf:"bytes,1,opt,name=external_user_id" json:"external_user_id,omitempty"`
	Type           MembershipEntry_MembershipType `protobuf:"varint,2,opt,name=type,enum=proto.MembershipEntry_MembershipType" json:"type,omitempty"`
}

func (m *HubEditExternalMemberRequest) Reset()         { *m = HubEditExternalMemberRequest{} }
func (m *HubEditExternalMemberRequest) String() string { return proto.CompactTextString(m) }
func (*HubEditExternalMemberRequest) ProtoMessage()    {}

type HubEditExternalMemberResponse struct {
	Error RPCHubEditExternalMemberResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubEditExternalMemberResponse_ErrorType" json:"error,omitempty"`
	Users []*ExternalMembershipEntry                 `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *HubEditExternalMemberResponse) Reset()         { *m = HubEditExternalMemberResponse{} }
func (m *HubEditExternalMemberResponse) String() string { return proto.CompactTextString(m) }
func (*HubEditExternalMemberResponse) ProtoMessage()    {}

func (m *HubEditExternalMemberResponse) GetUsers() []*ExternalMembershipEntry {
	if m != nil {
		return m.Users
	}
	return nil
}

type HubGetExternalMembersResponse struct {
	Error RPCHubGetExternalMembersResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubGetExternalMembersResponse_ErrorType" json:"error,omitempty"`
	Users []*ExternalMembershipEntry                 `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *HubGetExternalMembersResponse) Reset()         { *m = HubGetExternalMembersResponse{} }
func (m *HubGetExternalMembersResponse) String() string { return proto.CompactTextString(m) }
func (*HubGetExternalMembersResponse) ProtoMessage()    {}

func (m *HubGetExternalMembersResponse) GetUsers() []*ExternalMembershipEntry {
	if m != nil {
		return m.Users
	}
	return nil
}

// used to join a hub channel
// code is optional (can be used to redeem an invite via email)
type HubJoinHubRequest struct {
	Code string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
}

func (m *HubJoinHubRequest) Reset()         { *m = HubJoinHubRequest{} }
func (m *HubJoinHubRequest) String() string { return proto.CompactTextString(m) }
func (*HubJoinHubRequest) ProtoMessage()    {}

type HubJoinHubResponse struct {
	Error RPCHubJoinHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubJoinHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *HubJoinHubResponse) Reset()         { *m = HubJoinHubResponse{} }
func (m *HubJoinHubResponse) String() string { return proto.CompactTextString(m) }
func (*HubJoinHubResponse) ProtoMessage()    {}

type HubLeaveHubResponse struct {
	Error RPCHubLeaveHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubLeaveHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *HubLeaveHubResponse) Reset()         { *m = HubLeaveHubResponse{} }
func (m *HubLeaveHubResponse) String() string { return proto.CompactTextString(m) }
func (*HubLeaveHubResponse) ProtoMessage()    {}

type HubLinkHubResponse struct {
	Error RPCHubLinkHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubLinkHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *HubLinkHubResponse) Reset()         { *m = HubLinkHubResponse{} }
func (m *HubLinkHubResponse) String() string { return proto.CompactTextString(m) }
func (*HubLinkHubResponse) ProtoMessage()    {}

type HubUnlinkHubResponse struct {
	Error RPCHubUnlinkHubResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubUnlinkHubResponse_ErrorType" json:"error,omitempty"`
}

func (m *HubUnlinkHubResponse) Reset()         { *m = HubUnlinkHubResponse{} }
func (m *HubUnlinkHubResponse) String() string { return proto.CompactTextString(m) }
func (*HubUnlinkHubResponse) ProtoMessage()    {}

type RegisterExternalUserIDRequest struct {
	GroupId        string `protobuf:"bytes,1,opt,name=group_id" json:"group_id,omitempty"`
	ExternalUserId string `protobuf:"bytes,2,opt,name=external_user_id" json:"external_user_id,omitempty"`
}

func (m *RegisterExternalUserIDRequest) Reset()         { *m = RegisterExternalUserIDRequest{} }
func (m *RegisterExternalUserIDRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterExternalUserIDRequest) ProtoMessage()    {}

type RegisterExternalUserIDResponse struct {
	Error RPCHubRegisterExternalUserIDResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubRegisterExternalUserIDResponse_ErrorType" json:"error,omitempty"`
}

func (m *RegisterExternalUserIDResponse) Reset()         { *m = RegisterExternalUserIDResponse{} }
func (m *RegisterExternalUserIDResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterExternalUserIDResponse) ProtoMessage()    {}

type HubGetMemberResponse struct {
	Error RPCHubGetMemberResponse_ErrorType  `protobuf:"varint,1,opt,name=error,enum=proto.RPCHubGetMemberResponse_ErrorType" json:"error,omitempty"`
	Type  HubMembershipRecord_MembershipType `protobuf:"varint,2,opt,name=type,enum=proto.HubMembershipRecord_MembershipType" json:"type,omitempty"`
}

func (m *HubGetMemberResponse) Reset()         { *m = HubGetMemberResponse{} }
func (m *HubGetMemberResponse) String() string { return proto.CompactTextString(m) }
func (*HubGetMemberResponse) ProtoMessage()    {}

type HubGetUserByExternalIDResponse struct {
	Error    HubGetUserByExternalIDResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.HubGetUserByExternalIDResponse_ErrorType" json:"error,omitempty"`
	UserInfo *ExternalUserInfo                        `protobuf:"bytes,2,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *HubGetUserByExternalIDResponse) Reset()         { *m = HubGetUserByExternalIDResponse{} }
func (m *HubGetUserByExternalIDResponse) String() string { return proto.CompactTextString(m) }
func (*HubGetUserByExternalIDResponse) ProtoMessage()    {}

func (m *HubGetUserByExternalIDResponse) GetUserInfo() *ExternalUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.RPCHubCreateHubResponse_ErrorType", RPCHubCreateHubResponse_ErrorType_name, RPCHubCreateHubResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubDeleteHubResponse_ErrorType", RPCHubDeleteHubResponse_ErrorType_name, RPCHubDeleteHubResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubGetHubResponse_ErrorType", RPCHubGetHubResponse_ErrorType_name, RPCHubGetHubResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubLinkHubResponse_ErrorType", RPCHubLinkHubResponse_ErrorType_name, RPCHubLinkHubResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubUnlinkHubResponse_ErrorType", RPCHubUnlinkHubResponse_ErrorType_name, RPCHubUnlinkHubResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubValidateTitleResponse_ErrorType", RPCHubValidateTitleResponse_ErrorType_name, RPCHubValidateTitleResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubAddMemberResponse_ErrorType", RPCHubAddMemberResponse_ErrorType_name, RPCHubAddMemberResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubGetMembersResponse_ErrorType", RPCHubGetMembersResponse_ErrorType_name, RPCHubGetMembersResponse_ErrorType_value)
	proto.RegisterEnum("proto.MembershipEntry_Status", MembershipEntry_Status_name, MembershipEntry_Status_value)
	proto.RegisterEnum("proto.MembershipEntry_MembershipType", MembershipEntry_MembershipType_name, MembershipEntry_MembershipType_value)
	proto.RegisterEnum("proto.RPCHubSendInviteResponse_ErrorType", RPCHubSendInviteResponse_ErrorType_name, RPCHubSendInviteResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubRequestMembershipResponse_ErrorType", RPCHubRequestMembershipResponse_ErrorType_name, RPCHubRequestMembershipResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubEditMemberResponse_ErrorType", RPCHubEditMemberResponse_ErrorType_name, RPCHubEditMemberResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubJoinHubResponse_ErrorType", RPCHubJoinHubResponse_ErrorType_name, RPCHubJoinHubResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubLeaveHubResponse_ErrorType", RPCHubLeaveHubResponse_ErrorType_name, RPCHubLeaveHubResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubAddExternalMemberResponse_ErrorType", RPCHubAddExternalMemberResponse_ErrorType_name, RPCHubAddExternalMemberResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubGetExternalMembersResponse_ErrorType", RPCHubGetExternalMembersResponse_ErrorType_name, RPCHubGetExternalMembersResponse_ErrorType_value)
	proto.RegisterEnum("proto.ExternalMembershipEntry_Status", ExternalMembershipEntry_Status_name, ExternalMembershipEntry_Status_value)
	proto.RegisterEnum("proto.ExternalMembershipEntry_MembershipType", ExternalMembershipEntry_MembershipType_name, ExternalMembershipEntry_MembershipType_value)
	proto.RegisterEnum("proto.RPCHubEditExternalMemberResponse_ErrorType", RPCHubEditExternalMemberResponse_ErrorType_name, RPCHubEditExternalMemberResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubGetMemberResponse_ErrorType", RPCHubGetMemberResponse_ErrorType_name, RPCHubGetMemberResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCHubRegisterExternalUserIDResponse_ErrorType", RPCHubRegisterExternalUserIDResponse_ErrorType_name, RPCHubRegisterExternalUserIDResponse_ErrorType_value)
	proto.RegisterEnum("proto.HubMembershipRecord_MembershipType", HubMembershipRecord_MembershipType_name, HubMembershipRecord_MembershipType_value)
	proto.RegisterEnum("proto.HubAddMembersResponse_ErrorType", HubAddMembersResponse_ErrorType_name, HubAddMembersResponse_ErrorType_value)
	proto.RegisterEnum("proto.HubAddMembersResponseEntry_ErrorType", HubAddMembersResponseEntry_ErrorType_name, HubAddMembersResponseEntry_ErrorType_value)
	proto.RegisterEnum("proto.SearchMembersResponse_ErrorType", SearchMembersResponse_ErrorType_name, SearchMembersResponse_ErrorType_value)
	proto.RegisterEnum("proto.HubGetUserByExternalIDResponse_ErrorType", HubGetUserByExternalIDResponse_ErrorType_name, HubGetUserByExternalIDResponse_ErrorType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for HubService service

type HubServiceClient interface {
	CreateHub(ctx context.Context, in *RPCHubCreateHubRequest, opts ...grpc.CallOption) (*RPCHubCreateHubResponse, error)
	EditHub(ctx context.Context, in *RPCHubEditHubRequest, opts ...grpc.CallOption) (*RPCHubEditHubResponse, error)
	DeleteHub(ctx context.Context, in *RPCHubDeleteHubRequest, opts ...grpc.CallOption) (*RPCHubDeleteHubResponse, error)
	GetHub(ctx context.Context, in *RPCHubGetHubRequest, opts ...grpc.CallOption) (*RPCHubGetHubResponse, error)
	GetAllHubs(ctx context.Context, in *RPCHubGetAllHubsRequest, opts ...grpc.CallOption) (*RPCHubGetAllHubsResponse, error)
	ValidateTitle(ctx context.Context, in *RPCHubValidateTitleRequest, opts ...grpc.CallOption) (*RPCHubValidateTitleResponse, error)
	AddMember(ctx context.Context, in *RPCHubAddMemberRequest, opts ...grpc.CallOption) (*RPCHubAddMemberResponse, error)
	AddMembers(ctx context.Context, in *RPCHubAddMembersRequest, opts ...grpc.CallOption) (*RPCHubAddMembersResponse, error)
	EditMember(ctx context.Context, in *RPCHubEditMemberRequest, opts ...grpc.CallOption) (*RPCHubEditMemberResponse, error)
	GetMembers(ctx context.Context, in *RPCHubGetMembersRequest, opts ...grpc.CallOption) (*RPCHubGetMembersResponse, error)
	GetHubMember(ctx context.Context, in *RPCHubGetMemberRequest, opts ...grpc.CallOption) (*RPCHubGetMemberResponse, error)
	AddExternalMember(ctx context.Context, in *RPCHubAddExternalMemberRequest, opts ...grpc.CallOption) (*RPCHubAddExternalMemberResponse, error)
	EditExternalMember(ctx context.Context, in *RPCHubEditExternalMemberRequest, opts ...grpc.CallOption) (*RPCHubEditExternalMemberResponse, error)
	GetExternalMembers(ctx context.Context, in *RPCHubGetExternalMembersRequest, opts ...grpc.CallOption) (*RPCHubGetExternalMembersResponse, error)
	SendInvite(ctx context.Context, in *RPCHubSendInviteRequest, opts ...grpc.CallOption) (*RPCHubSendInviteResponse, error)
	RequestMembership(ctx context.Context, in *RPCHubRequestMembershipRequest, opts ...grpc.CallOption) (*RPCHubRequestMembershipResponse, error)
	JoinHub(ctx context.Context, in *RPCHubJoinHubRequest, opts ...grpc.CallOption) (*RPCHubJoinHubResponse, error)
	LeaveHub(ctx context.Context, in *RPCHubLeaveHubRequest, opts ...grpc.CallOption) (*RPCHubLeaveHubResponse, error)
	LinkHub(ctx context.Context, in *RPCHubLinkHubRequest, opts ...grpc.CallOption) (*RPCHubLinkHubResponse, error)
	UnlinkHub(ctx context.Context, in *RPCHubUnlinkHubRequest, opts ...grpc.CallOption) (*RPCHubUnlinkHubResponse, error)
	RegisterExternalUserID(ctx context.Context, in *RPCHubRegisterExternalUserIDRequest, opts ...grpc.CallOption) (*RPCHubRegisterExternalUserIDResponse, error)
	GetUserByExternalID(ctx context.Context, in *RPCHubGetUserByExternalIDRequest, opts ...grpc.CallOption) (*RPCHubGetUserByExternalIDResponse, error)
}

type hubServiceClient struct {
	cc *grpc.ClientConn
}

func NewHubServiceClient(cc *grpc.ClientConn) HubServiceClient {
	return &hubServiceClient{cc}
}

func (c *hubServiceClient) CreateHub(ctx context.Context, in *RPCHubCreateHubRequest, opts ...grpc.CallOption) (*RPCHubCreateHubResponse, error) {
	out := new(RPCHubCreateHubResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/CreateHub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) EditHub(ctx context.Context, in *RPCHubEditHubRequest, opts ...grpc.CallOption) (*RPCHubEditHubResponse, error) {
	out := new(RPCHubEditHubResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/EditHub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) DeleteHub(ctx context.Context, in *RPCHubDeleteHubRequest, opts ...grpc.CallOption) (*RPCHubDeleteHubResponse, error) {
	out := new(RPCHubDeleteHubResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/DeleteHub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) GetHub(ctx context.Context, in *RPCHubGetHubRequest, opts ...grpc.CallOption) (*RPCHubGetHubResponse, error) {
	out := new(RPCHubGetHubResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/GetHub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) GetAllHubs(ctx context.Context, in *RPCHubGetAllHubsRequest, opts ...grpc.CallOption) (*RPCHubGetAllHubsResponse, error) {
	out := new(RPCHubGetAllHubsResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/GetAllHubs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) ValidateTitle(ctx context.Context, in *RPCHubValidateTitleRequest, opts ...grpc.CallOption) (*RPCHubValidateTitleResponse, error) {
	out := new(RPCHubValidateTitleResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/ValidateTitle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) AddMember(ctx context.Context, in *RPCHubAddMemberRequest, opts ...grpc.CallOption) (*RPCHubAddMemberResponse, error) {
	out := new(RPCHubAddMemberResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/AddMember", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) AddMembers(ctx context.Context, in *RPCHubAddMembersRequest, opts ...grpc.CallOption) (*RPCHubAddMembersResponse, error) {
	out := new(RPCHubAddMembersResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/AddMembers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) EditMember(ctx context.Context, in *RPCHubEditMemberRequest, opts ...grpc.CallOption) (*RPCHubEditMemberResponse, error) {
	out := new(RPCHubEditMemberResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/EditMember", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) GetMembers(ctx context.Context, in *RPCHubGetMembersRequest, opts ...grpc.CallOption) (*RPCHubGetMembersResponse, error) {
	out := new(RPCHubGetMembersResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/GetMembers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) GetHubMember(ctx context.Context, in *RPCHubGetMemberRequest, opts ...grpc.CallOption) (*RPCHubGetMemberResponse, error) {
	out := new(RPCHubGetMemberResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/GetHubMember", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) AddExternalMember(ctx context.Context, in *RPCHubAddExternalMemberRequest, opts ...grpc.CallOption) (*RPCHubAddExternalMemberResponse, error) {
	out := new(RPCHubAddExternalMemberResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/AddExternalMember", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) EditExternalMember(ctx context.Context, in *RPCHubEditExternalMemberRequest, opts ...grpc.CallOption) (*RPCHubEditExternalMemberResponse, error) {
	out := new(RPCHubEditExternalMemberResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/EditExternalMember", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) GetExternalMembers(ctx context.Context, in *RPCHubGetExternalMembersRequest, opts ...grpc.CallOption) (*RPCHubGetExternalMembersResponse, error) {
	out := new(RPCHubGetExternalMembersResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/GetExternalMembers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) SendInvite(ctx context.Context, in *RPCHubSendInviteRequest, opts ...grpc.CallOption) (*RPCHubSendInviteResponse, error) {
	out := new(RPCHubSendInviteResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/SendInvite", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) RequestMembership(ctx context.Context, in *RPCHubRequestMembershipRequest, opts ...grpc.CallOption) (*RPCHubRequestMembershipResponse, error) {
	out := new(RPCHubRequestMembershipResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/RequestMembership", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) JoinHub(ctx context.Context, in *RPCHubJoinHubRequest, opts ...grpc.CallOption) (*RPCHubJoinHubResponse, error) {
	out := new(RPCHubJoinHubResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/JoinHub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) LeaveHub(ctx context.Context, in *RPCHubLeaveHubRequest, opts ...grpc.CallOption) (*RPCHubLeaveHubResponse, error) {
	out := new(RPCHubLeaveHubResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/LeaveHub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) LinkHub(ctx context.Context, in *RPCHubLinkHubRequest, opts ...grpc.CallOption) (*RPCHubLinkHubResponse, error) {
	out := new(RPCHubLinkHubResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/LinkHub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) UnlinkHub(ctx context.Context, in *RPCHubUnlinkHubRequest, opts ...grpc.CallOption) (*RPCHubUnlinkHubResponse, error) {
	out := new(RPCHubUnlinkHubResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/UnlinkHub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) RegisterExternalUserID(ctx context.Context, in *RPCHubRegisterExternalUserIDRequest, opts ...grpc.CallOption) (*RPCHubRegisterExternalUserIDResponse, error) {
	out := new(RPCHubRegisterExternalUserIDResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/RegisterExternalUserID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubServiceClient) GetUserByExternalID(ctx context.Context, in *RPCHubGetUserByExternalIDRequest, opts ...grpc.CallOption) (*RPCHubGetUserByExternalIDResponse, error) {
	out := new(RPCHubGetUserByExternalIDResponse)
	err := grpc.Invoke(ctx, "/proto.HubService/GetUserByExternalID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HubService service

type HubServiceServer interface {
	CreateHub(context.Context, *RPCHubCreateHubRequest) (*RPCHubCreateHubResponse, error)
	EditHub(context.Context, *RPCHubEditHubRequest) (*RPCHubEditHubResponse, error)
	DeleteHub(context.Context, *RPCHubDeleteHubRequest) (*RPCHubDeleteHubResponse, error)
	GetHub(context.Context, *RPCHubGetHubRequest) (*RPCHubGetHubResponse, error)
	GetAllHubs(context.Context, *RPCHubGetAllHubsRequest) (*RPCHubGetAllHubsResponse, error)
	ValidateTitle(context.Context, *RPCHubValidateTitleRequest) (*RPCHubValidateTitleResponse, error)
	AddMember(context.Context, *RPCHubAddMemberRequest) (*RPCHubAddMemberResponse, error)
	AddMembers(context.Context, *RPCHubAddMembersRequest) (*RPCHubAddMembersResponse, error)
	EditMember(context.Context, *RPCHubEditMemberRequest) (*RPCHubEditMemberResponse, error)
	GetMembers(context.Context, *RPCHubGetMembersRequest) (*RPCHubGetMembersResponse, error)
	GetHubMember(context.Context, *RPCHubGetMemberRequest) (*RPCHubGetMemberResponse, error)
	AddExternalMember(context.Context, *RPCHubAddExternalMemberRequest) (*RPCHubAddExternalMemberResponse, error)
	EditExternalMember(context.Context, *RPCHubEditExternalMemberRequest) (*RPCHubEditExternalMemberResponse, error)
	GetExternalMembers(context.Context, *RPCHubGetExternalMembersRequest) (*RPCHubGetExternalMembersResponse, error)
	SendInvite(context.Context, *RPCHubSendInviteRequest) (*RPCHubSendInviteResponse, error)
	RequestMembership(context.Context, *RPCHubRequestMembershipRequest) (*RPCHubRequestMembershipResponse, error)
	JoinHub(context.Context, *RPCHubJoinHubRequest) (*RPCHubJoinHubResponse, error)
	LeaveHub(context.Context, *RPCHubLeaveHubRequest) (*RPCHubLeaveHubResponse, error)
	LinkHub(context.Context, *RPCHubLinkHubRequest) (*RPCHubLinkHubResponse, error)
	UnlinkHub(context.Context, *RPCHubUnlinkHubRequest) (*RPCHubUnlinkHubResponse, error)
	RegisterExternalUserID(context.Context, *RPCHubRegisterExternalUserIDRequest) (*RPCHubRegisterExternalUserIDResponse, error)
	GetUserByExternalID(context.Context, *RPCHubGetUserByExternalIDRequest) (*RPCHubGetUserByExternalIDResponse, error)
}

func RegisterHubServiceServer(s *grpc.Server, srv HubServiceServer) {
	s.RegisterService(&_HubService_serviceDesc, srv)
}

func _HubService_CreateHub_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubCreateHubRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).CreateHub(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_EditHub_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubEditHubRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).EditHub(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_DeleteHub_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubDeleteHubRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).DeleteHub(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_GetHub_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubGetHubRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).GetHub(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_GetAllHubs_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubGetAllHubsRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).GetAllHubs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_ValidateTitle_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubValidateTitleRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).ValidateTitle(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_AddMember_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubAddMemberRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).AddMember(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_AddMembers_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubAddMembersRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).AddMembers(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_EditMember_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubEditMemberRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).EditMember(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_GetMembers_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubGetMembersRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).GetMembers(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_GetHubMember_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubGetMemberRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).GetHubMember(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_AddExternalMember_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubAddExternalMemberRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).AddExternalMember(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_EditExternalMember_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubEditExternalMemberRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).EditExternalMember(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_GetExternalMembers_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubGetExternalMembersRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).GetExternalMembers(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_SendInvite_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubSendInviteRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).SendInvite(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_RequestMembership_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubRequestMembershipRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).RequestMembership(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_JoinHub_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubJoinHubRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).JoinHub(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_LeaveHub_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubLeaveHubRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).LeaveHub(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_LinkHub_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubLinkHubRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).LinkHub(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_UnlinkHub_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubUnlinkHubRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).UnlinkHub(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_RegisterExternalUserID_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubRegisterExternalUserIDRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).RegisterExternalUserID(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _HubService_GetUserByExternalID_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCHubGetUserByExternalIDRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(HubServiceServer).GetUserByExternalID(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _HubService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HubService",
	HandlerType: (*HubServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateHub",
			Handler:    _HubService_CreateHub_Handler,
		},
		{
			MethodName: "EditHub",
			Handler:    _HubService_EditHub_Handler,
		},
		{
			MethodName: "DeleteHub",
			Handler:    _HubService_DeleteHub_Handler,
		},
		{
			MethodName: "GetHub",
			Handler:    _HubService_GetHub_Handler,
		},
		{
			MethodName: "GetAllHubs",
			Handler:    _HubService_GetAllHubs_Handler,
		},
		{
			MethodName: "ValidateTitle",
			Handler:    _HubService_ValidateTitle_Handler,
		},
		{
			MethodName: "AddMember",
			Handler:    _HubService_AddMember_Handler,
		},
		{
			MethodName: "AddMembers",
			Handler:    _HubService_AddMembers_Handler,
		},
		{
			MethodName: "EditMember",
			Handler:    _HubService_EditMember_Handler,
		},
		{
			MethodName: "GetMembers",
			Handler:    _HubService_GetMembers_Handler,
		},
		{
			MethodName: "GetHubMember",
			Handler:    _HubService_GetHubMember_Handler,
		},
		{
			MethodName: "AddExternalMember",
			Handler:    _HubService_AddExternalMember_Handler,
		},
		{
			MethodName: "EditExternalMember",
			Handler:    _HubService_EditExternalMember_Handler,
		},
		{
			MethodName: "GetExternalMembers",
			Handler:    _HubService_GetExternalMembers_Handler,
		},
		{
			MethodName: "SendInvite",
			Handler:    _HubService_SendInvite_Handler,
		},
		{
			MethodName: "RequestMembership",
			Handler:    _HubService_RequestMembership_Handler,
		},
		{
			MethodName: "JoinHub",
			Handler:    _HubService_JoinHub_Handler,
		},
		{
			MethodName: "LeaveHub",
			Handler:    _HubService_LeaveHub_Handler,
		},
		{
			MethodName: "LinkHub",
			Handler:    _HubService_LinkHub_Handler,
		},
		{
			MethodName: "UnlinkHub",
			Handler:    _HubService_UnlinkHub_Handler,
		},
		{
			MethodName: "RegisterExternalUserID",
			Handler:    _HubService_RegisterExternalUserID_Handler,
		},
		{
			MethodName: "GetUserByExternalID",
			Handler:    _HubService_GetUserByExternalID_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}
