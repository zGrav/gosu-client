// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: profile.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Channel;
@class ChannelBan;
@class ChannelMembership;
@class ChannelPermissions;
@class ChatUser;
@class Game;
@class GameChannelListEntry;
@class GameEditEntry;
@class GameListEntry;
@class Group;
@class GroupMembership;
@class GroupPermissions;
@class Hub;
@class OptionalString;
@class ProprietaryUserGroupRecord;
@class User;
@class UserAccount;
@class UserBadge;
@class UserBiography;
@class UserGame;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum GroupMembershipTypeV1

typedef GPB_ENUM(GroupMembershipTypeV1) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  GroupMembershipTypeV1_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GroupMembershipTypeV1_Unknown = 0,
  GroupMembershipTypeV1_Member = 1,
  GroupMembershipTypeV1_Guest = 2,
};

GPBEnumDescriptor *GroupMembershipTypeV1_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL GroupMembershipTypeV1_IsValidValue(int32_t value);

#pragma mark - Enum User_UserStatus

typedef GPB_ENUM(User_UserStatus) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  User_UserStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  User_UserStatus_Unknown = 0,
  User_UserStatus_Offline = 1,
  User_UserStatus_Online = 2,
  User_UserStatus_Away = 3,
  User_UserStatus_Busy = 4,
};

GPBEnumDescriptor *User_UserStatus_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL User_UserStatus_IsValidValue(int32_t value);

#pragma mark - Enum UserAccount_AccountType

typedef GPB_ENUM(UserAccount_AccountType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  UserAccount_AccountType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UserAccount_AccountType_Unknown = 0,

  /// ic_account_steam
  UserAccount_AccountType_Steam = 1,

  /// ic_account_psn
  UserAccount_AccountType_Psn = 2,

  /// ic_account_xbox
  UserAccount_AccountType_Xbox = 3,

  /// ic_account_uplay
  UserAccount_AccountType_Uplay = 4,

  /// ic_account_battlenet
  UserAccount_AccountType_BattleNet = 5,

  /// ic_account_origin
  UserAccount_AccountType_Origin = 6,

  /// ic_account_pvpnet
  UserAccount_AccountType_PvpNet = 7,

  /// ic_account_facebook
  UserAccount_AccountType_Facebook = 8,

  /// ic_account_playerme
  UserAccount_AccountType_PlayerMe = 9,

  /// ic_account_teamspeak
  UserAccount_AccountType_Teamspeak = 10,

  /// ic_account_twitch
  UserAccount_AccountType_Twitch = 11,

  /// ic_account_twitter
  UserAccount_AccountType_Twitter = 12,

  /// ic_account_weblink
  UserAccount_AccountType_Weblink = 13,

  /// ic_account_youtube
  UserAccount_AccountType_Youtube = 14,
};

GPBEnumDescriptor *UserAccount_AccountType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL UserAccount_AccountType_IsValidValue(int32_t value);

#pragma mark - Enum UserAgent_UserAgentType

typedef GPB_ENUM(UserAgent_UserAgentType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  UserAgent_UserAgentType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UserAgent_UserAgentType_Unknown = 0,
  UserAgent_UserAgentType_Web = 1,
  UserAgent_UserAgentType_Android = 2,
  UserAgent_UserAgentType_Ios = 3,
  UserAgent_UserAgentType_WebEmbedded = 4,
  UserAgent_UserAgentType_Bot = 5,
  UserAgent_UserAgentType_LoadTest = 6,
  UserAgent_UserAgentType_ManagementConsole = 7,
};

GPBEnumDescriptor *UserAgent_UserAgentType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL UserAgent_UserAgentType_IsValidValue(int32_t value);

#pragma mark - Enum ChannelUser_ChannelUserType

typedef GPB_ENUM(ChannelUser_ChannelUserType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  ChannelUser_ChannelUserType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ChannelUser_ChannelUserType_Unknown = 0,
  ChannelUser_ChannelUserType_Owner = 1,
  ChannelUser_ChannelUserType_Member = 2,
  ChannelUser_ChannelUserType_Chatter = 3,
};

GPBEnumDescriptor *ChannelUser_ChannelUserType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL ChannelUser_ChannelUserType_IsValidValue(int32_t value);

#pragma mark - Enum ProprietaryUserGroupRecord_Type

typedef GPB_ENUM(ProprietaryUserGroupRecord_Type) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  ProprietaryUserGroupRecord_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ProprietaryUserGroupRecord_Type_Unknown = 0,
  ProprietaryUserGroupRecord_Type_None = 1,
  ProprietaryUserGroupRecord_Type_EslAdmins = 2,
  ProprietaryUserGroupRecord_Type_EslVideo = 3,
};

GPBEnumDescriptor *ProprietaryUserGroupRecord_Type_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL ProprietaryUserGroupRecord_Type_IsValidValue(int32_t value);

#pragma mark - Enum Channel_ChannelType

typedef GPB_ENUM(Channel_ChannelType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  Channel_ChannelType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Channel_ChannelType_Unknown = 0,
  Channel_ChannelType_Private = 1,
  Channel_ChannelType_Public = 2,
  Channel_ChannelType_Direct = 3,
  Channel_ChannelType_Game = 4,
  Channel_ChannelType_Hub = 5,
};

GPBEnumDescriptor *Channel_ChannelType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL Channel_ChannelType_IsValidValue(int32_t value);

#pragma mark - Enum ChannelMembershipRecord_MembershipType

typedef GPB_ENUM(ChannelMembershipRecord_MembershipType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  ChannelMembershipRecord_MembershipType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ChannelMembershipRecord_MembershipType_Unknown = 0,
  ChannelMembershipRecord_MembershipType_None = 1,
  ChannelMembershipRecord_MembershipType_Subscriber = 25,
  ChannelMembershipRecord_MembershipType_Moderator = 50,
  ChannelMembershipRecord_MembershipType_ModeratorGroup = 60,
  ChannelMembershipRecord_MembershipType_Owner = 75,
};

GPBEnumDescriptor *ChannelMembershipRecord_MembershipType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL ChannelMembershipRecord_MembershipType_IsValidValue(int32_t value);

#pragma mark - Enum ChannelMembershipRecord_VoiceStatus

typedef GPB_ENUM(ChannelMembershipRecord_VoiceStatus) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  ChannelMembershipRecord_VoiceStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ChannelMembershipRecord_VoiceStatus_VsUnknown = 0,
  ChannelMembershipRecord_VoiceStatus_VsOffline = 1,
  ChannelMembershipRecord_VoiceStatus_VsOnlineMuted = 2,
  ChannelMembershipRecord_VoiceStatus_VsOnline = 3,
};

GPBEnumDescriptor *ChannelMembershipRecord_VoiceStatus_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL ChannelMembershipRecord_VoiceStatus_IsValidValue(int32_t value);

#pragma mark - Enum GroupMembershipRecord_MembershipType

typedef GPB_ENUM(GroupMembershipRecord_MembershipType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  GroupMembershipRecord_MembershipType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GroupMembershipRecord_MembershipType_Unknown = 0,
  GroupMembershipRecord_MembershipType_None = 1,
  GroupMembershipRecord_MembershipType_Guest = 25,
  GroupMembershipRecord_MembershipType_Member = 40,
  GroupMembershipRecord_MembershipType_Moderator = 50,
  GroupMembershipRecord_MembershipType_Owner = 100,
};

GPBEnumDescriptor *GroupMembershipRecord_MembershipType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL GroupMembershipRecord_MembershipType_IsValidValue(int32_t value);

#pragma mark - Enum GameMembershipRecord_MembershipType

typedef GPB_ENUM(GameMembershipRecord_MembershipType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  GameMembershipRecord_MembershipType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GameMembershipRecord_MembershipType_Unknown = 0,
  GameMembershipRecord_MembershipType_None = 1,
  GameMembershipRecord_MembershipType_Member = 50,
};

GPBEnumDescriptor *GameMembershipRecord_MembershipType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL GameMembershipRecord_MembershipType_IsValidValue(int32_t value);

#pragma mark - ProfileRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface ProfileRoot : GPBRootObject
@end

#pragma mark - User

typedef GPB_ENUM(User_FieldNumber) {
  User_FieldNumber_Id_p = 1,
  User_FieldNumber_Login = 2,
  User_FieldNumber_Password = 3,
  User_FieldNumber_Email = 4,
  User_FieldNumber_DisplayName = 5,
  User_FieldNumber_AvatarImage = 6,
  User_FieldNumber_ChannelIdsArray = 7,
  User_FieldNumber_ChannelsArray = 8,
  User_FieldNumber_EmailConfirmed = 9,
  User_FieldNumber_Status = 10,
  User_FieldNumber_TermsOfService = 11,
  User_FieldNumber_Newsletter = 12,
  User_FieldNumber_TitleImage = 13,
  User_FieldNumber_BackgroundImage = 14,
  User_FieldNumber_GameIdsArray = 15,
  User_FieldNumber_NormalizedLogin = 16,
  User_FieldNumber_Biography = 17,
  User_FieldNumber_IsSysop = 18,
  User_FieldNumber_ChannelMembershipsArray = 19,
  User_FieldNumber_RelationsArray = 20,
  User_FieldNumber_CreatedAt = 21,
  User_FieldNumber_UpdatedAt = 22,
  User_FieldNumber_Ephemeral = 23,
  User_FieldNumber_FacebookId = 24,
  User_FieldNumber_AvatarImageIsAutogenerated = 25,
  User_FieldNumber_NameIsAutogenerated = 26,
  User_FieldNumber_GoogleId = 27,
  User_FieldNumber_HasSetPassword = 28,
  User_FieldNumber_HasMobileClient = 29,
};

@interface User : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *login;

@property(nonatomic, readwrite, copy, null_resettable) NSData *password;

@property(nonatomic, readwrite, copy, null_resettable) NSString *email;

@property(nonatomic, readwrite, copy, null_resettable) NSString *displayName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatarImage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *channelIdsArray;
/// The number of items in @c channelIdsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger channelIdsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Channel*> *channelsArray;
/// The number of items in @c channelsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger channelsArray_Count;

@property(nonatomic, readwrite) BOOL emailConfirmed;

@property(nonatomic, readwrite) User_UserStatus status;

@property(nonatomic, readwrite) BOOL termsOfService;

@property(nonatomic, readwrite) BOOL newsletter;

@property(nonatomic, readwrite, copy, null_resettable) NSString *titleImage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundImage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *gameIdsArray;
/// The number of items in @c gameIdsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gameIdsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *normalizedLogin;

@property(nonatomic, readwrite, strong, null_resettable) UserBiography *biography;
/// Test to see if @c biography has been set.
@property(nonatomic, readwrite) BOOL hasBiography;

@property(nonatomic, readwrite) BOOL isSysop;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChannelMembership*> *channelMembershipsArray;
/// The number of items in @c channelMembershipsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger channelMembershipsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProprietaryUserGroupRecord*> *relationsArray;
/// The number of items in @c relationsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger relationsArray_Count;

@property(nonatomic, readwrite) int64_t createdAt;

@property(nonatomic, readwrite) int64_t updatedAt;

@property(nonatomic, readwrite) BOOL ephemeral;

@property(nonatomic, readwrite, copy, null_resettable) NSString *facebookId;

@property(nonatomic, readwrite) BOOL avatarImageIsAutogenerated;

@property(nonatomic, readwrite) BOOL nameIsAutogenerated;

@property(nonatomic, readwrite, copy, null_resettable) NSString *googleId;

@property(nonatomic, readwrite) BOOL hasSetPassword;

@property(nonatomic, readwrite) BOOL hasMobileClient;

@end

/// Fetches the raw value of a @c User's @c status property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t User_Status_RawValue(User *message);
/// Sets the raw value of an @c User's @c status property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetUser_Status_RawValue(User *message, int32_t value);

#pragma mark - UserProfile

typedef GPB_ENUM(UserProfile_FieldNumber) {
  UserProfile_FieldNumber_Id_p = 1,
  UserProfile_FieldNumber_DisplayName = 2,
  UserProfile_FieldNumber_AvatarImage = 3,
  UserProfile_FieldNumber_TitleImage = 4,
  UserProfile_FieldNumber_BackgroundImage = 5,
  UserProfile_FieldNumber_Biography = 6,
  UserProfile_FieldNumber_GamesArray = 16,
  UserProfile_FieldNumber_BadgesArray = 17,
  UserProfile_FieldNumber_GroupsArray = 18,
  UserProfile_FieldNumber_AccountsArray = 19,
  UserProfile_FieldNumber_HubsArray = 20,
};

@interface UserProfile : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *displayName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatarImage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *titleImage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundImage;

@property(nonatomic, readwrite, strong, null_resettable) UserBiography *biography;
/// Test to see if @c biography has been set.
@property(nonatomic, readwrite) BOOL hasBiography;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserGame*> *gamesArray;
/// The number of items in @c gamesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gamesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserBadge*> *badgesArray;
/// The number of items in @c badgesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger badgesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupMembership*> *groupsArray;
/// The number of items in @c groupsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserAccount*> *accountsArray;
/// The number of items in @c accountsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger accountsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Hub*> *hubsArray;
/// The number of items in @c hubsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger hubsArray_Count;

@end

#pragma mark - UserBiography

typedef GPB_ENUM(UserBiography_FieldNumber) {
  UserBiography_FieldNumber_Introduction = 1,
  UserBiography_FieldNumber_Languages = 2,
};

@interface UserBiography : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *introduction;

@property(nonatomic, readwrite, copy, null_resettable) NSString *languages;

@end

#pragma mark - UserAccount

typedef GPB_ENUM(UserAccount_FieldNumber) {
  UserAccount_FieldNumber_Id_p = 1,
  UserAccount_FieldNumber_AccountId = 2,
  UserAccount_FieldNumber_Name = 3,
  UserAccount_FieldNumber_Type = 4,
};

@interface UserAccount : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) UserAccount_AccountType type;

@end

/// Fetches the raw value of a @c UserAccount's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t UserAccount_Type_RawValue(UserAccount *message);
/// Sets the raw value of an @c UserAccount's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetUserAccount_Type_RawValue(UserAccount *message, int32_t value);

#pragma mark - UserGame

typedef GPB_ENUM(UserGame_FieldNumber) {
  UserGame_FieldNumber_Id_p = 1,
  UserGame_FieldNumber_Rank = 2,
  UserGame_FieldNumber_Game = 16,
};

@interface UserGame : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rank;

@property(nonatomic, readwrite, strong, null_resettable) Game *game;
/// Test to see if @c game has been set.
@property(nonatomic, readwrite) BOOL hasGame;

@end

#pragma mark - UserAgent

typedef GPB_ENUM(UserAgent_FieldNumber) {
  UserAgent_FieldNumber_Id_p = 1,
  UserAgent_FieldNumber_UserId = 2,
  UserAgent_FieldNumber_Name = 3,
  UserAgent_FieldNumber_Type = 4,
  UserAgent_FieldNumber_LastToken = 5,
  UserAgent_FieldNumber_LastLogin = 6,
  UserAgent_FieldNumber_LastIp = 7,
  UserAgent_FieldNumber_User = 8,
};

@interface UserAgent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) UserAgent_UserAgentType type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *lastToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *lastLogin;

@property(nonatomic, readwrite, copy, null_resettable) NSString *lastIp;

@property(nonatomic, readwrite, strong, null_resettable) User *user;
/// Test to see if @c user has been set.
@property(nonatomic, readwrite) BOOL hasUser;

@end

/// Fetches the raw value of a @c UserAgent's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t UserAgent_Type_RawValue(UserAgent *message);
/// Sets the raw value of an @c UserAgent's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetUserAgent_Type_RawValue(UserAgent *message, int32_t value);

#pragma mark - UserAgentConnection

typedef GPB_ENUM(UserAgentConnection_FieldNumber) {
  UserAgentConnection_FieldNumber_Id_p = 1,
  UserAgentConnection_FieldNumber_AgentId = 2,
  UserAgentConnection_FieldNumber_Timestamp = 3,
};

@interface UserAgentConnection : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *agentId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;

@end

#pragma mark - ChannelUser

typedef GPB_ENUM(ChannelUser_FieldNumber) {
  ChannelUser_FieldNumber_User = 1,
  ChannelUser_FieldNumber_TypeV1 = 2,
  ChannelUser_FieldNumber_Type = 3,
  ChannelUser_FieldNumber_VoiceStatus = 4,
};

@interface ChannelUser : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ChatUser *user;
/// Test to see if @c user has been set.
@property(nonatomic, readwrite) BOOL hasUser;

@property(nonatomic, readwrite) ChannelUser_ChannelUserType typeV1;

@property(nonatomic, readwrite) ChannelMembershipRecord_MembershipType type;

@property(nonatomic, readwrite) ChannelMembershipRecord_VoiceStatus voiceStatus;

@end

/// Fetches the raw value of a @c ChannelUser's @c typeV1 property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ChannelUser_TypeV1_RawValue(ChannelUser *message);
/// Sets the raw value of an @c ChannelUser's @c typeV1 property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChannelUser_TypeV1_RawValue(ChannelUser *message, int32_t value);

/// Fetches the raw value of a @c ChannelUser's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ChannelUser_Type_RawValue(ChannelUser *message);
/// Sets the raw value of an @c ChannelUser's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChannelUser_Type_RawValue(ChannelUser *message, int32_t value);

/// Fetches the raw value of a @c ChannelUser's @c voiceStatus property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ChannelUser_VoiceStatus_RawValue(ChannelUser *message);
/// Sets the raw value of an @c ChannelUser's @c voiceStatus property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChannelUser_VoiceStatus_RawValue(ChannelUser *message, int32_t value);

#pragma mark - ChatUser

typedef GPB_ENUM(ChatUser_FieldNumber) {
  ChatUser_FieldNumber_Id_p = 1,
  ChatUser_FieldNumber_DisplayName = 2,
  ChatUser_FieldNumber_AvatarImage = 3,
  ChatUser_FieldNumber_IsModerator = 4,
  ChatUser_FieldNumber_Status = 5,
  ChatUser_FieldNumber_TitleImage = 6,
  ChatUser_FieldNumber_BackgroundImage = 7,
  ChatUser_FieldNumber_Ephemeral = 8,
};

@interface ChatUser : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *displayName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatarImage;

@property(nonatomic, readwrite) BOOL isModerator;

@property(nonatomic, readwrite) User_UserStatus status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *titleImage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundImage;

@property(nonatomic, readwrite) BOOL ephemeral;

@end

/// Fetches the raw value of a @c ChatUser's @c status property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ChatUser_Status_RawValue(ChatUser *message);
/// Sets the raw value of an @c ChatUser's @c status property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChatUser_Status_RawValue(ChatUser *message, int32_t value);

#pragma mark - ChatUserInfo

typedef GPB_ENUM(ChatUserInfo_FieldNumber) {
  ChatUserInfo_FieldNumber_User = 1,
  ChatUserInfo_FieldNumber_FriendsArray = 2,
  ChatUserInfo_FieldNumber_GroupMembershipsArray = 3,
  ChatUserInfo_FieldNumber_GamesArray = 4,
};

@interface ChatUserInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ChatUser *user;
/// Test to see if @c user has been set.
@property(nonatomic, readwrite) BOOL hasUser;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChatUser*> *friendsArray;
/// The number of items in @c friendsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger friendsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupMembership*> *groupMembershipsArray;
/// The number of items in @c groupMembershipsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger groupMembershipsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Game*> *gamesArray;
/// The number of items in @c gamesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gamesArray_Count;

@end

#pragma mark - ProprietaryUserGroupRecord

typedef GPB_ENUM(ProprietaryUserGroupRecord_FieldNumber) {
  ProprietaryUserGroupRecord_FieldNumber_Id_p = 1,
  ProprietaryUserGroupRecord_FieldNumber_UserId = 2,
  ProprietaryUserGroupRecord_FieldNumber_Type = 3,
};

@interface ProprietaryUserGroupRecord : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) ProprietaryUserGroupRecord_Type type;

@end

/// Fetches the raw value of a @c ProprietaryUserGroupRecord's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ProprietaryUserGroupRecord_Type_RawValue(ProprietaryUserGroupRecord *message);
/// Sets the raw value of an @c ProprietaryUserGroupRecord's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetProprietaryUserGroupRecord_Type_RawValue(ProprietaryUserGroupRecord *message, int32_t value);

#pragma mark - UserExternalIDRecord

typedef GPB_ENUM(UserExternalIDRecord_FieldNumber) {
  UserExternalIDRecord_FieldNumber_Id_p = 1,
  UserExternalIDRecord_FieldNumber_CreatedAt = 2,
  UserExternalIDRecord_FieldNumber_UpdatedAt = 3,
  UserExternalIDRecord_FieldNumber_UserId = 4,
  UserExternalIDRecord_FieldNumber_GroupId = 5,
  UserExternalIDRecord_FieldNumber_ExternalId = 6,
};

@interface UserExternalIDRecord : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite) int64_t createdAt;

@property(nonatomic, readwrite) int64_t updatedAt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *externalId;

@end

#pragma mark - FriendRequest

typedef GPB_ENUM(FriendRequest_FieldNumber) {
  FriendRequest_FieldNumber_User = 1,
  FriendRequest_FieldNumber_Message = 2,
};

@interface FriendRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ChatUser *user;
/// Test to see if @c user has been set.
@property(nonatomic, readwrite) BOOL hasUser;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - Channel

typedef GPB_ENUM(Channel_FieldNumber) {
  Channel_FieldNumber_Id_p = 1,
  Channel_FieldNumber_Title = 2,
  Channel_FieldNumber_Type = 3,
  Channel_FieldNumber_DirectUserIdsArray = 4,
  Channel_FieldNumber_DirectUsersArray = 5,
  Channel_FieldNumber_GroupId = 6,
  Channel_FieldNumber_BansArray = 7,
  Channel_FieldNumber_GameId = 8,
  Channel_FieldNumber_Game = 9,
  Channel_FieldNumber_TagsArray = 10,
  Channel_FieldNumber_TagList = 11,
  Channel_FieldNumber_Topic = 12,
  Channel_FieldNumber_HubId = 13,
  Channel_FieldNumber_Hub = 14,
};

@interface Channel : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite) Channel_ChannelType type;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *directUserIdsArray;
/// The number of items in @c directUserIdsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger directUserIdsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChatUser*> *directUsersArray;
/// The number of items in @c directUsersArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger directUsersArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChannelBan*> *bansArray;
/// The number of items in @c bansArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger bansArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *gameId;

@property(nonatomic, readwrite, strong, null_resettable) Game *game;
/// Test to see if @c game has been set.
@property(nonatomic, readwrite) BOOL hasGame;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tagsArray;
/// The number of items in @c tagsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger tagsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *tagList;

@property(nonatomic, readwrite, copy, null_resettable) NSString *topic;

@property(nonatomic, readwrite, copy, null_resettable) NSString *hubId;

@property(nonatomic, readwrite, strong, null_resettable) Hub *hub;
/// Test to see if @c hub has been set.
@property(nonatomic, readwrite) BOOL hasHub;

@end

/// Fetches the raw value of a @c Channel's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t Channel_Type_RawValue(Channel *message);
/// Sets the raw value of an @c Channel's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChannel_Type_RawValue(Channel *message, int32_t value);

#pragma mark - ChannelBan

typedef GPB_ENUM(ChannelBan_FieldNumber) {
  ChannelBan_FieldNumber_UserId = 1,
  ChannelBan_FieldNumber_Expiry = 2,
};

@interface ChannelBan : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) int64_t expiry;

@end

#pragma mark - ChannelMembership

typedef GPB_ENUM(ChannelMembership_FieldNumber) {
  ChannelMembership_FieldNumber_ChannelId = 1,
  ChannelMembership_FieldNumber_UserId = 2,
  ChannelMembership_FieldNumber_Type = 3,
  ChannelMembership_FieldNumber_Channel = 4,
  ChannelMembership_FieldNumber_Permissions = 5,
  ChannelMembership_FieldNumber_VoiceStatus = 6,
};

@interface ChannelMembership : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) ChannelMembershipRecord_MembershipType type;

@property(nonatomic, readwrite, strong, null_resettable) Channel *channel;
/// Test to see if @c channel has been set.
@property(nonatomic, readwrite) BOOL hasChannel;

@property(nonatomic, readwrite, strong, null_resettable) ChannelPermissions *permissions;
/// Test to see if @c permissions has been set.
@property(nonatomic, readwrite) BOOL hasPermissions;

@property(nonatomic, readwrite) ChannelMembershipRecord_VoiceStatus voiceStatus;

@end

/// Fetches the raw value of a @c ChannelMembership's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ChannelMembership_Type_RawValue(ChannelMembership *message);
/// Sets the raw value of an @c ChannelMembership's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChannelMembership_Type_RawValue(ChannelMembership *message, int32_t value);

/// Fetches the raw value of a @c ChannelMembership's @c voiceStatus property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ChannelMembership_VoiceStatus_RawValue(ChannelMembership *message);
/// Sets the raw value of an @c ChannelMembership's @c voiceStatus property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChannelMembership_VoiceStatus_RawValue(ChannelMembership *message, int32_t value);

#pragma mark - ChannelMembershipRecord

typedef GPB_ENUM(ChannelMembershipRecord_FieldNumber) {
  ChannelMembershipRecord_FieldNumber_Id_p = 1,
  ChannelMembershipRecord_FieldNumber_ChannelId = 2,
  ChannelMembershipRecord_FieldNumber_UserId = 3,
  ChannelMembershipRecord_FieldNumber_Type = 4,
  ChannelMembershipRecord_FieldNumber_Channel = 5,
  ChannelMembershipRecord_FieldNumber_User = 6,
  ChannelMembershipRecord_FieldNumber_Permissions = 7,
  ChannelMembershipRecord_FieldNumber_VoiceStatus = 8,
};

@interface ChannelMembershipRecord : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) ChannelMembershipRecord_MembershipType type;

@property(nonatomic, readwrite, strong, null_resettable) Channel *channel;
/// Test to see if @c channel has been set.
@property(nonatomic, readwrite) BOOL hasChannel;

@property(nonatomic, readwrite, strong, null_resettable) User *user;
/// Test to see if @c user has been set.
@property(nonatomic, readwrite) BOOL hasUser;

@property(nonatomic, readwrite, strong, null_resettable) ChannelPermissions *permissions;
/// Test to see if @c permissions has been set.
@property(nonatomic, readwrite) BOOL hasPermissions;

@property(nonatomic, readwrite) ChannelMembershipRecord_VoiceStatus voiceStatus;

@end

/// Fetches the raw value of a @c ChannelMembershipRecord's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ChannelMembershipRecord_Type_RawValue(ChannelMembershipRecord *message);
/// Sets the raw value of an @c ChannelMembershipRecord's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChannelMembershipRecord_Type_RawValue(ChannelMembershipRecord *message, int32_t value);

/// Fetches the raw value of a @c ChannelMembershipRecord's @c voiceStatus property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ChannelMembershipRecord_VoiceStatus_RawValue(ChannelMembershipRecord *message);
/// Sets the raw value of an @c ChannelMembershipRecord's @c voiceStatus property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetChannelMembershipRecord_VoiceStatus_RawValue(ChannelMembershipRecord *message, int32_t value);

#pragma mark - ChannelPermissions

typedef GPB_ENUM(ChannelPermissions_FieldNumber) {
  ChannelPermissions_FieldNumber_KickBanUser = 1,
  ChannelPermissions_FieldNumber_InviteUser = 2,
  ChannelPermissions_FieldNumber_SetChannelRole = 3,
  ChannelPermissions_FieldNumber_EditStickyMessage = 4,
  ChannelPermissions_FieldNumber_DeleteMessage = 5,
  ChannelPermissions_FieldNumber_EditChannel = 6,
  ChannelPermissions_FieldNumber_DeleteChannel = 7,
};

@interface ChannelPermissions : GPBMessage

@property(nonatomic, readwrite) BOOL kickBanUser;

@property(nonatomic, readwrite) BOOL inviteUser;

@property(nonatomic, readwrite) BOOL setChannelRole;

@property(nonatomic, readwrite) BOOL editStickyMessage;

@property(nonatomic, readwrite) BOOL deleteMessage;

@property(nonatomic, readwrite) BOOL editChannel;

@property(nonatomic, readwrite) BOOL deleteChannel;

@end

#pragma mark - Group

typedef GPB_ENUM(Group_FieldNumber) {
  Group_FieldNumber_Id_p = 1,
  Group_FieldNumber_Owner = 2,
  Group_FieldNumber_Name = 3,
  Group_FieldNumber_Description_p = 4,
  Group_FieldNumber_TitleImage = 5,
  Group_FieldNumber_BackgroundImage = 6,
  Group_FieldNumber_ChannelsArray = 7,
  Group_FieldNumber_MembersArray = 8,
  Group_FieldNumber_MemberCount = 9,
  Group_FieldNumber_SubscriberCount = 10,
};

@interface Group : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *owner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *titleImage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundImage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Channel*> *channelsArray;
/// The number of items in @c channelsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger channelsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChatUser*> *membersArray;
/// The number of items in @c membersArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@property(nonatomic, readwrite) int32_t memberCount;

@property(nonatomic, readwrite) int32_t subscriberCount;

@end

#pragma mark - GroupPermissions

typedef GPB_ENUM(GroupPermissions_FieldNumber) {
  GroupPermissions_FieldNumber_EditGroup = 1,
  GroupPermissions_FieldNumber_CreateChannel = 2,
  GroupPermissions_FieldNumber_JoinPublicChannel = 3,
  GroupPermissions_FieldNumber_JoinPrivateChannel = 4,
  GroupPermissions_FieldNumber_InviteUser = 5,
  GroupPermissions_FieldNumber_SetUserMembershipType = 6,
};

@interface GroupPermissions : GPBMessage

@property(nonatomic, readwrite) BOOL editGroup;

@property(nonatomic, readwrite) BOOL createChannel;

@property(nonatomic, readwrite) BOOL joinPublicChannel;

@property(nonatomic, readwrite) BOOL joinPrivateChannel;

@property(nonatomic, readwrite) BOOL inviteUser;

@property(nonatomic, readwrite) BOOL setUserMembershipType;

@end

#pragma mark - GroupMembership

typedef GPB_ENUM(GroupMembership_FieldNumber) {
  GroupMembership_FieldNumber_Group = 1,
  GroupMembership_FieldNumber_TypeV1 = 2,
  GroupMembership_FieldNumber_GroupId = 3,
  GroupMembership_FieldNumber_UserId = 4,
  GroupMembership_FieldNumber_Type = 5,
  GroupMembership_FieldNumber_Permissions = 6,
};

@interface GroupMembership : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Group *group;
/// Test to see if @c group has been set.
@property(nonatomic, readwrite) BOOL hasGroup;

/// this exists for backwards compatibility reasons
@property(nonatomic, readwrite) GroupMembershipTypeV1 typeV1;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) GroupMembershipRecord_MembershipType type;

@property(nonatomic, readwrite, strong, null_resettable) GroupPermissions *permissions;
/// Test to see if @c permissions has been set.
@property(nonatomic, readwrite) BOOL hasPermissions;

@end

/// Fetches the raw value of a @c GroupMembership's @c typeV1 property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t GroupMembership_TypeV1_RawValue(GroupMembership *message);
/// Sets the raw value of an @c GroupMembership's @c typeV1 property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetGroupMembership_TypeV1_RawValue(GroupMembership *message, int32_t value);

/// Fetches the raw value of a @c GroupMembership's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t GroupMembership_Type_RawValue(GroupMembership *message);
/// Sets the raw value of an @c GroupMembership's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetGroupMembership_Type_RawValue(GroupMembership *message, int32_t value);

#pragma mark - GroupMembershipRecord

typedef GPB_ENUM(GroupMembershipRecord_FieldNumber) {
  GroupMembershipRecord_FieldNumber_Id_p = 1,
  GroupMembershipRecord_FieldNumber_GroupId = 2,
  GroupMembershipRecord_FieldNumber_UserId = 3,
  GroupMembershipRecord_FieldNumber_Type = 4,
  GroupMembershipRecord_FieldNumber_Group = 5,
  GroupMembershipRecord_FieldNumber_User = 6,
  GroupMembershipRecord_FieldNumber_Permissions = 7,
  GroupMembershipRecord_FieldNumber_CreatedAt = 8,
  GroupMembershipRecord_FieldNumber_UpdatedAt = 9,
};

@interface GroupMembershipRecord : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) GroupMembershipRecord_MembershipType type;

@property(nonatomic, readwrite, strong, null_resettable) Group *group;
/// Test to see if @c group has been set.
@property(nonatomic, readwrite) BOOL hasGroup;

@property(nonatomic, readwrite, strong, null_resettable) User *user;
/// Test to see if @c user has been set.
@property(nonatomic, readwrite) BOOL hasUser;

@property(nonatomic, readwrite, strong, null_resettable) GroupPermissions *permissions;
/// Test to see if @c permissions has been set.
@property(nonatomic, readwrite) BOOL hasPermissions;

@property(nonatomic, readwrite) int64_t createdAt;

@property(nonatomic, readwrite) int64_t updatedAt;

@end

/// Fetches the raw value of a @c GroupMembershipRecord's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t GroupMembershipRecord_Type_RawValue(GroupMembershipRecord *message);
/// Sets the raw value of an @c GroupMembershipRecord's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetGroupMembershipRecord_Type_RawValue(GroupMembershipRecord *message, int32_t value);

#pragma mark - GroupMember

typedef GPB_ENUM(GroupMember_FieldNumber) {
  GroupMember_FieldNumber_Id_p = 1,
  GroupMember_FieldNumber_UserId = 2,
  GroupMember_FieldNumber_GroupId = 3,
};

@interface GroupMember : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@end

#pragma mark - GroupInvitation

typedef GPB_ENUM(GroupInvitation_FieldNumber) {
  GroupInvitation_FieldNumber_Id_p = 1,
  GroupInvitation_FieldNumber_GroupId = 2,
  GroupInvitation_FieldNumber_Code = 3,
  GroupInvitation_FieldNumber_InviterId = 4,
};

/// this is the deprecated group invite
@interface GroupInvitation : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *inviterId;

@end

#pragma mark - PotentialGroupMember

typedef GPB_ENUM(PotentialGroupMember_FieldNumber) {
  PotentialGroupMember_FieldNumber_UserId = 1,
  PotentialGroupMember_FieldNumber_EmailAddress = 2,
};

typedef GPB_ENUM(PotentialGroupMember_Identifier_OneOfCase) {
  PotentialGroupMember_Identifier_OneOfCase_GPBUnsetOneOfCase = 0,
  PotentialGroupMember_Identifier_OneOfCase_UserId = 1,
  PotentialGroupMember_Identifier_OneOfCase_EmailAddress = 2,
};

@interface PotentialGroupMember : GPBMessage

@property(nonatomic, readonly) PotentialGroupMember_Identifier_OneOfCase identifierOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) OptionalString *userId;

@property(nonatomic, readwrite, strong, null_resettable) OptionalString *emailAddress;

@end

/// Clears whatever value was set for the oneof 'identifier'.
void PotentialGroupMember_ClearIdentifierOneOfCase(PotentialGroupMember *message);

#pragma mark - GroupInvite

typedef GPB_ENUM(GroupInvite_FieldNumber) {
  GroupInvite_FieldNumber_Id_p = 1,
  GroupInvite_FieldNumber_CreatedAt = 2,
  GroupInvite_FieldNumber_UpdatedAt = 3,
  GroupInvite_FieldNumber_GroupId = 4,
  GroupInvite_FieldNumber_InviterId = 5,
  GroupInvite_FieldNumber_UserId = 6,
  GroupInvite_FieldNumber_Email = 7,
  GroupInvite_FieldNumber_Code = 8,
  GroupInvite_FieldNumber_Type = 9,
};

@interface GroupInvite : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite) int64_t createdAt;

@property(nonatomic, readwrite) int64_t updatedAt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *inviterId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *email;

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@property(nonatomic, readwrite) GroupMembershipRecord_MembershipType type;

@end

/// Fetches the raw value of a @c GroupInvite's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t GroupInvite_Type_RawValue(GroupInvite *message);
/// Sets the raw value of an @c GroupInvite's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetGroupInvite_Type_RawValue(GroupInvite *message, int32_t value);

#pragma mark - Game

typedef GPB_ENUM(Game_FieldNumber) {
  Game_FieldNumber_Id_p = 1,
  Game_FieldNumber_Name = 2,
  Game_FieldNumber_TitleImage = 3,
  Game_FieldNumber_BackgroundImagesArray = 4,
  Game_FieldNumber_ReadOnly = 5,
  Game_FieldNumber_ShortName = 6,
};

/// Game is how we transport games over the wire
/// Usually games are wrapped in UserGames and are updated on the fly
@interface Game : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *titleImage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *backgroundImagesArray;
/// The number of items in @c backgroundImagesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger backgroundImagesArray_Count;

@property(nonatomic, readwrite) BOOL readOnly;

@property(nonatomic, readwrite, copy, null_resettable) NSString *shortName;

@end

#pragma mark - GameMembership

typedef GPB_ENUM(GameMembership_FieldNumber) {
  GameMembership_FieldNumber_GameId = 1,
  GameMembership_FieldNumber_UserId = 2,
  GameMembership_FieldNumber_Type = 3,
  GameMembership_FieldNumber_Game = 4,
};

@interface GameMembership : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *gameId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) GameMembershipRecord_MembershipType type;

@property(nonatomic, readwrite, strong, null_resettable) Game *game;
/// Test to see if @c game has been set.
@property(nonatomic, readwrite) BOOL hasGame;

@end

/// Fetches the raw value of a @c GameMembership's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t GameMembership_Type_RawValue(GameMembership *message);
/// Sets the raw value of an @c GameMembership's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetGameMembership_Type_RawValue(GameMembership *message, int32_t value);

#pragma mark - GameMembershipRecord

typedef GPB_ENUM(GameMembershipRecord_FieldNumber) {
  GameMembershipRecord_FieldNumber_Id_p = 1,
  GameMembershipRecord_FieldNumber_GameId = 2,
  GameMembershipRecord_FieldNumber_UserId = 3,
  GameMembershipRecord_FieldNumber_Type = 4,
  GameMembershipRecord_FieldNumber_Game = 5,
  GameMembershipRecord_FieldNumber_User = 6,
};

@interface GameMembershipRecord : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *gameId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) GameMembershipRecord_MembershipType type;

@property(nonatomic, readwrite, strong, null_resettable) Game *game;
/// Test to see if @c game has been set.
@property(nonatomic, readwrite) BOOL hasGame;

@property(nonatomic, readwrite, strong, null_resettable) User *user;
/// Test to see if @c user has been set.
@property(nonatomic, readwrite) BOOL hasUser;

@end

/// Fetches the raw value of a @c GameMembershipRecord's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t GameMembershipRecord_Type_RawValue(GameMembershipRecord *message);
/// Sets the raw value of an @c GameMembershipRecord's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetGameMembershipRecord_Type_RawValue(GameMembershipRecord *message, int32_t value);

#pragma mark - GameEditEntry

typedef GPB_ENUM(GameEditEntry_FieldNumber) {
  GameEditEntry_FieldNumber_ExistingGameId = 1,
  GameEditEntry_FieldNumber_NewGame = 2,
  GameEditEntry_FieldNumber_EditedGame = 3,
};

typedef GPB_ENUM(GameEditEntry_Game_OneOfCase) {
  GameEditEntry_Game_OneOfCase_GPBUnsetOneOfCase = 0,
  GameEditEntry_Game_OneOfCase_ExistingGameId = 1,
  GameEditEntry_Game_OneOfCase_NewGame = 2,
  GameEditEntry_Game_OneOfCase_EditedGame = 3,
};

@interface GameEditEntry : GPBMessage

@property(nonatomic, readonly) GameEditEntry_Game_OneOfCase gameOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) OptionalString *existingGameId;

@property(nonatomic, readwrite, strong, null_resettable) Game *newGame NS_RETURNS_NOT_RETAINED;

@property(nonatomic, readwrite, strong, null_resettable) Game *editedGame;

@end

/// Clears whatever value was set for the oneof 'game'.
void GameEditEntry_ClearGameOneOfCase(GameEditEntry *message);

#pragma mark - OptionalGames

typedef GPB_ENUM(OptionalGames_FieldNumber) {
  OptionalGames_FieldNumber_GamesArray = 1,
};

@interface OptionalGames : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameEditEntry*> *gamesArray;
/// The number of items in @c gamesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gamesArray_Count;

@end

#pragma mark - GameRecord

typedef GPB_ENUM(GameRecord_FieldNumber) {
  GameRecord_FieldNumber_Id_p = 1,
  GameRecord_FieldNumber_UserId = 2,
  GameRecord_FieldNumber_Name = 3,
  GameRecord_FieldNumber_TitleImage = 4,
  GameRecord_FieldNumber_BackgroundImagesArray = 5,
  GameRecord_FieldNumber_ShortName = 6,
};

/// Game Record is an entry in the games table
@interface GameRecord : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *titleImage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *backgroundImagesArray;
/// The number of items in @c backgroundImagesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger backgroundImagesArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *shortName;

@end

#pragma mark - GameListPage

typedef GPB_ENUM(GameListPage_FieldNumber) {
  GameListPage_FieldNumber_GamesArray = 1,
  GameListPage_FieldNumber_PageNumber = 2,
  GameListPage_FieldNumber_PageSize = 3,
};

@interface GameListPage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameListEntry*> *gamesArray;
/// The number of items in @c gamesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gamesArray_Count;

@property(nonatomic, readwrite) int32_t pageNumber;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - GameListEntry

typedef GPB_ENUM(GameListEntry_FieldNumber) {
  GameListEntry_FieldNumber_Game = 1,
  GameListEntry_FieldNumber_ChannelsArray = 2,
  GameListEntry_FieldNumber_OnlineUserCount = 3,
  GameListEntry_FieldNumber_UserCount = 4,
  GameListEntry_FieldNumber_HasMoreChannels = 5,
  GameListEntry_FieldNumber_ChannelCount = 6,
};

@interface GameListEntry : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Game *game;
/// Test to see if @c game has been set.
@property(nonatomic, readwrite) BOOL hasGame;

/// this contains only the first X channels for that game
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameChannelListEntry*> *channelsArray;
/// The number of items in @c channelsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger channelsArray_Count;

@property(nonatomic, readwrite) int32_t onlineUserCount;

@property(nonatomic, readwrite) int32_t userCount;

@property(nonatomic, readwrite) BOOL hasMoreChannels;

@property(nonatomic, readwrite) int32_t channelCount;

@end

#pragma mark - GameChannelListPage

typedef GPB_ENUM(GameChannelListPage_FieldNumber) {
  GameChannelListPage_FieldNumber_Game = 1,
  GameChannelListPage_FieldNumber_ChannelsArray = 2,
  GameChannelListPage_FieldNumber_PageNumber = 3,
  GameChannelListPage_FieldNumber_PageSize = 4,
  GameChannelListPage_FieldNumber_HasMoreChannels = 5,
};

@interface GameChannelListPage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Game *game;
/// Test to see if @c game has been set.
@property(nonatomic, readwrite) BOOL hasGame;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GameChannelListEntry*> *channelsArray;
/// The number of items in @c channelsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger channelsArray_Count;

@property(nonatomic, readwrite) int32_t pageNumber;

@property(nonatomic, readwrite) int32_t pageSize;

@property(nonatomic, readwrite) BOOL hasMoreChannels;

@end

#pragma mark - GameChannelListEntry

typedef GPB_ENUM(GameChannelListEntry_FieldNumber) {
  GameChannelListEntry_FieldNumber_Channel = 1,
  GameChannelListEntry_FieldNumber_OnlineUserCount = 2,
  GameChannelListEntry_FieldNumber_UserCount = 3,
};

@interface GameChannelListEntry : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Channel *channel;
/// Test to see if @c channel has been set.
@property(nonatomic, readwrite) BOOL hasChannel;

@property(nonatomic, readwrite) int32_t onlineUserCount;

@property(nonatomic, readwrite) int32_t userCount;

@end

#pragma mark - Badge

typedef GPB_ENUM(Badge_FieldNumber) {
  Badge_FieldNumber_Id_p = 1,
  Badge_FieldNumber_Title = 2,
  Badge_FieldNumber_Image = 3,
  Badge_FieldNumber_Priority = 4,
};

@interface Badge : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *image;

@property(nonatomic, readwrite) int32_t priority;

@end

#pragma mark - UserBadge

typedef GPB_ENUM(UserBadge_FieldNumber) {
  UserBadge_FieldNumber_Id_p = 1,
  UserBadge_FieldNumber_BadgeId = 2,
  UserBadge_FieldNumber_UserId = 3,
  UserBadge_FieldNumber_Title = 4,
  UserBadge_FieldNumber_Image = 5,
  UserBadge_FieldNumber_Priority = 6,
  UserBadge_FieldNumber_Timestamp = 7,
};

@interface UserBadge : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *badgeId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *image;

@property(nonatomic, readwrite) int32_t priority;

@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - Tag

typedef GPB_ENUM(Tag_FieldNumber) {
  Tag_FieldNumber_Name = 1,
};

@interface Tag : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - BiographyUpdateData

typedef GPB_ENUM(BiographyUpdateData_FieldNumber) {
  BiographyUpdateData_FieldNumber_Introduction = 1,
  BiographyUpdateData_FieldNumber_Languages = 2,
};

/// Profile Update
@interface BiographyUpdateData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OptionalString *introduction;
/// Test to see if @c introduction has been set.
@property(nonatomic, readwrite) BOOL hasIntroduction;

@property(nonatomic, readwrite, strong, null_resettable) OptionalString *languages;
/// Test to see if @c languages has been set.
@property(nonatomic, readwrite) BOOL hasLanguages;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
