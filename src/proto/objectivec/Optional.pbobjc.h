// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: optional.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - OptionalRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface OptionalRoot : GPBRootObject
@end

#pragma mark - OptionalString

typedef GPB_ENUM(OptionalString_FieldNumber) {
  OptionalString_FieldNumber_Value = 1,
};

@interface OptionalString : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - OptionalBool

typedef GPB_ENUM(OptionalBool_FieldNumber) {
  OptionalBool_FieldNumber_Value = 1,
};

@interface OptionalBool : GPBMessage

@property(nonatomic, readwrite) BOOL value;

@end

#pragma mark - OptionalInt64

typedef GPB_ENUM(OptionalInt64_FieldNumber) {
  OptionalInt64_FieldNumber_Value = 1,
};

@interface OptionalInt64 : GPBMessage

@property(nonatomic, readwrite) int64_t value;

@end

#pragma mark - OptionalRepeatedString

typedef GPB_ENUM(OptionalRepeatedString_FieldNumber) {
  OptionalRepeatedString_FieldNumber_ValuesArray = 1,
};

@interface OptionalRepeatedString : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *valuesArray;
/// The number of items in @c valuesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger valuesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
