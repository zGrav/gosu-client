// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Message.pbobjc.h"
#import "Profile.pbobjc.h"
#import "Any.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - MessageRoot

@implementation MessageRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[ProfileRoot extensionRegistry]];
    [registry addExtensions:[AnyRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - MessageRoot_FileDescriptor

static GPBFileDescriptor *MessageRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"proto"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - WebsocketMessage

@implementation WebsocketMessage

@dynamic messageOneOfCase;
@dynamic id_p;
@dynamic type;
@dynamic timestamp;
@dynamic channel;
@dynamic sender;
@dynamic userMessage;
@dynamic userAction;
@dynamic systemMessage;
@dynamic systemAction;
@dynamic recipient;
@dynamic processedByCrawler;
@dynamic deleted;

typedef struct WebsocketMessage__storage_ {
  uint32_t _has_storage_[2];
  BOOL processedByCrawler;
  BOOL deleted;
  WebsocketMessage_MessageType type;
  NSString *id_p;
  NSString *timestamp;
  NSString *channel;
  NSString *sender;
  UserMessage *userMessage;
  UserMessage *userAction;
  SystemMessage *systemMessage;
  NSString *recipient;
  SystemAction *systemAction;
} WebsocketMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageOneofDescription oneofs[] = {
      {
        .name = "message",
        .index = -1,
      },
    };
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = WebsocketMessage_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(WebsocketMessage__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = WebsocketMessage_FieldNumber_Type,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(WebsocketMessage__storage_, type),
        .defaultValue.valueEnum = WebsocketMessage_MessageType_Unknown,
        .dataTypeSpecific.enumDescFunc = WebsocketMessage_MessageType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "timestamp",
        .number = WebsocketMessage_FieldNumber_Timestamp,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(WebsocketMessage__storage_, timestamp),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "channel",
        .number = WebsocketMessage_FieldNumber_Channel,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(WebsocketMessage__storage_, channel),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "sender",
        .number = WebsocketMessage_FieldNumber_Sender,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(WebsocketMessage__storage_, sender),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userMessage",
        .number = WebsocketMessage_FieldNumber_UserMessage,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(WebsocketMessage__storage_, userMessage),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(UserMessage),
        .fieldOptions = NULL,
      },
      {
        .name = "userAction",
        .number = WebsocketMessage_FieldNumber_UserAction,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(WebsocketMessage__storage_, userAction),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(UserMessage),
        .fieldOptions = NULL,
      },
      {
        .name = "systemMessage",
        .number = WebsocketMessage_FieldNumber_SystemMessage,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(WebsocketMessage__storage_, systemMessage),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SystemMessage),
        .fieldOptions = NULL,
      },
      {
        .name = "recipient",
        .number = WebsocketMessage_FieldNumber_Recipient,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(WebsocketMessage__storage_, recipient),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "systemAction",
        .number = WebsocketMessage_FieldNumber_SystemAction,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(WebsocketMessage__storage_, systemAction),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SystemAction),
        .fieldOptions = NULL,
      },
      {
        .name = "processedByCrawler",
        .number = WebsocketMessage_FieldNumber_ProcessedByCrawler,
        .hasIndex = 10,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(WebsocketMessage__storage_, processedByCrawler),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "deleted",
        .number = WebsocketMessage_FieldNumber_Deleted,
        .hasIndex = 11,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(WebsocketMessage__storage_, deleted),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = WebsocketMessage_MessageType_EnumDescriptor },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[WebsocketMessage class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:oneofs
                                    oneofCount:sizeof(oneofs) / sizeof(GPBMessageOneofDescription)
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(WebsocketMessage__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t WebsocketMessage_Type_RawValue(WebsocketMessage *message) {
  GPBDescriptor *descriptor = [WebsocketMessage descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:WebsocketMessage_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetWebsocketMessage_Type_RawValue(WebsocketMessage *message, int32_t value) {
  GPBDescriptor *descriptor = [WebsocketMessage descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:WebsocketMessage_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

void WebsocketMessage_ClearMessageOneOfCase(WebsocketMessage *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = descriptor->oneofs_[0];
  GPBMaybeClearOneof(message, oneof, 0);
}
#pragma mark - Enum WebsocketMessage_MessageType

GPBEnumDescriptor *WebsocketMessage_MessageType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Unknown", .number = WebsocketMessage_MessageType_Unknown },
      { .name = "ChatMessage", .number = WebsocketMessage_MessageType_ChatMessage },
      { .name = "UserAction", .number = WebsocketMessage_MessageType_UserAction },
      { .name = "SystemMessage", .number = WebsocketMessage_MessageType_SystemMessage },
      { .name = "Ping", .number = WebsocketMessage_MessageType_Ping },
      { .name = "SystemAction", .number = WebsocketMessage_MessageType_SystemAction },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(WebsocketMessage_MessageType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:WebsocketMessage_MessageType_IsValidValue];
  }
  return descriptor;
}

BOOL WebsocketMessage_MessageType_IsValidValue(int32_t value__) {
  switch (value__) {
    case WebsocketMessage_MessageType_Unknown:
    case WebsocketMessage_MessageType_ChatMessage:
    case WebsocketMessage_MessageType_UserAction:
    case WebsocketMessage_MessageType_SystemMessage:
    case WebsocketMessage_MessageType_Ping:
    case WebsocketMessage_MessageType_SystemAction:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - MessageBodyAnnotation

@implementation MessageBodyAnnotation

@dynamic type;
@dynamic posStart;
@dynamic posEnd;
@dynamic replacement;
@dynamic target;
@dynamic proprietary;

typedef struct MessageBodyAnnotation__storage_ {
  uint32_t _has_storage_[1];
  MessageBodyAnnotation_SliceType type;
  int32_t posStart;
  int32_t posEnd;
  NSString *replacement;
  NSString *target;
  NSData *proprietary;
} MessageBodyAnnotation__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .number = MessageBodyAnnotation_FieldNumber_Type,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MessageBodyAnnotation__storage_, type),
        .defaultValue.valueEnum = MessageBodyAnnotation_SliceType_Unknown,
        .dataTypeSpecific.enumDescFunc = MessageBodyAnnotation_SliceType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "posStart",
        .number = MessageBodyAnnotation_FieldNumber_PosStart,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(MessageBodyAnnotation__storage_, posStart),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "posEnd",
        .number = MessageBodyAnnotation_FieldNumber_PosEnd,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(MessageBodyAnnotation__storage_, posEnd),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "replacement",
        .number = MessageBodyAnnotation_FieldNumber_Replacement,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MessageBodyAnnotation__storage_, replacement),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "target",
        .number = MessageBodyAnnotation_FieldNumber_Target,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MessageBodyAnnotation__storage_, target),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "proprietary",
        .number = MessageBodyAnnotation_FieldNumber_Proprietary,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MessageBodyAnnotation__storage_, proprietary),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = MessageBodyAnnotation_SliceType_EnumDescriptor },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MessageBodyAnnotation class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MessageBodyAnnotation__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t MessageBodyAnnotation_Type_RawValue(MessageBodyAnnotation *message) {
  GPBDescriptor *descriptor = [MessageBodyAnnotation descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:MessageBodyAnnotation_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetMessageBodyAnnotation_Type_RawValue(MessageBodyAnnotation *message, int32_t value) {
  GPBDescriptor *descriptor = [MessageBodyAnnotation descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:MessageBodyAnnotation_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum MessageBodyAnnotation_SliceType

GPBEnumDescriptor *MessageBodyAnnotation_SliceType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Unknown", .number = MessageBodyAnnotation_SliceType_Unknown },
      { .name = "Plaintext", .number = MessageBodyAnnotation_SliceType_Plaintext },
      { .name = "UserMention", .number = MessageBodyAnnotation_SliceType_UserMention },
      { .name = "WebLink", .number = MessageBodyAnnotation_SliceType_WebLink },
      { .name = "ChannelLink", .number = MessageBodyAnnotation_SliceType_ChannelLink },
      { .name = "Email", .number = MessageBodyAnnotation_SliceType_Email },
      { .name = "Teamspeak", .number = MessageBodyAnnotation_SliceType_Teamspeak },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MessageBodyAnnotation_SliceType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MessageBodyAnnotation_SliceType_IsValidValue];
  }
  return descriptor;
}

BOOL MessageBodyAnnotation_SliceType_IsValidValue(int32_t value__) {
  switch (value__) {
    case MessageBodyAnnotation_SliceType_Unknown:
    case MessageBodyAnnotation_SliceType_Plaintext:
    case MessageBodyAnnotation_SliceType_UserMention:
    case MessageBodyAnnotation_SliceType_WebLink:
    case MessageBodyAnnotation_SliceType_ChannelLink:
    case MessageBodyAnnotation_SliceType_Email:
    case MessageBodyAnnotation_SliceType_Teamspeak:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - MessageBodyAnnotationChannelLinkExtension

@implementation MessageBodyAnnotationChannelLinkExtension

@dynamic hasInvitation, invitation;

typedef struct MessageBodyAnnotationChannelLinkExtension__storage_ {
  uint32_t _has_storage_[1];
  MessageBodyAnnotationChannelLinkExtensionInvitation *invitation;
} MessageBodyAnnotationChannelLinkExtension__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "invitation",
        .number = MessageBodyAnnotationChannelLinkExtension_FieldNumber_Invitation,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MessageBodyAnnotationChannelLinkExtension__storage_, invitation),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MessageBodyAnnotationChannelLinkExtensionInvitation),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MessageBodyAnnotationChannelLinkExtension class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MessageBodyAnnotationChannelLinkExtension__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MessageBodyAnnotationChannelLinkExtensionInvitation

@implementation MessageBodyAnnotationChannelLinkExtensionInvitation

@dynamic consumed;

typedef struct MessageBodyAnnotationChannelLinkExtensionInvitation__storage_ {
  uint32_t _has_storage_[1];
  BOOL consumed;
} MessageBodyAnnotationChannelLinkExtensionInvitation__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "consumed",
        .number = MessageBodyAnnotationChannelLinkExtensionInvitation_FieldNumber_Consumed,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(MessageBodyAnnotationChannelLinkExtensionInvitation__storage_, consumed),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MessageBodyAnnotationChannelLinkExtensionInvitation class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MessageBodyAnnotationChannelLinkExtensionInvitation__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserMessage

@implementation UserMessage

@dynamic extensionOneOfCase;
@dynamic body;
@dynamic bodyAnnotationsArray, bodyAnnotationsArray_Count;
@dynamic hasUser, user;
@dynamic deletedTimestamp;
@dynamic deletedUser;
@dynamic quote;
@dynamic website;

typedef struct UserMessage__storage_ {
  uint32_t _has_storage_[2];
  NSString *body;
  NSMutableArray *bodyAnnotationsArray;
  ChatUser *user;
  NSString *deletedTimestamp;
  NSString *deletedUser;
  NSString *quote;
  Website *website;
} UserMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageOneofDescription oneofs[] = {
      {
        .name = "extension",
        .index = -1,
      },
    };
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "body",
        .number = UserMessage_FieldNumber_Body,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserMessage__storage_, body),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bodyAnnotationsArray",
        .number = UserMessage_FieldNumber_BodyAnnotationsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(UserMessage__storage_, bodyAnnotationsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MessageBodyAnnotation),
        .fieldOptions = NULL,
      },
      {
        .name = "user",
        .number = UserMessage_FieldNumber_User,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(UserMessage__storage_, user),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ChatUser),
        .fieldOptions = NULL,
      },
      {
        .name = "deletedTimestamp",
        .number = UserMessage_FieldNumber_DeletedTimestamp,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserMessage__storage_, deletedTimestamp),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "deletedUser",
        .number = UserMessage_FieldNumber_DeletedUser,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserMessage__storage_, deletedUser),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "quote",
        .number = UserMessage_FieldNumber_Quote,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserMessage__storage_, quote),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "website",
        .number = UserMessage_FieldNumber_Website,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(UserMessage__storage_, website),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Website),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserMessage class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:oneofs
                                    oneofCount:sizeof(oneofs) / sizeof(GPBMessageOneofDescription)
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(UserMessage__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void UserMessage_ClearExtensionOneOfCase(UserMessage *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = descriptor->oneofs_[0];
  GPBMaybeClearOneof(message, oneof, 0);
}
#pragma mark - Website

@implementation Website

@dynamic uRL;
@dynamic title;
@dynamic description_p;
@dynamic image;
@dynamic video;
@dynamic imageWidth;
@dynamic imageHeight;
@dynamic type;
@dynamic contentId;

typedef struct Website__storage_ {
  uint32_t _has_storage_[1];
  int32_t imageWidth;
  int32_t imageHeight;
  Website_WebsiteType type;
  NSString *uRL;
  NSString *title;
  NSString *description_p;
  NSString *image;
  NSString *video;
  NSString *contentId;
} Website__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uRL",
        .number = Website_FieldNumber_URL,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Website__storage_, uRL),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "title",
        .number = Website_FieldNumber_Title,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Website__storage_, title),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "description_p",
        .number = Website_FieldNumber_Description_p,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Website__storage_, description_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "image",
        .number = Website_FieldNumber_Image,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Website__storage_, image),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "video",
        .number = Website_FieldNumber_Video,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Website__storage_, video),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "imageWidth",
        .number = Website_FieldNumber_ImageWidth,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(Website__storage_, imageWidth),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "imageHeight",
        .number = Website_FieldNumber_ImageHeight,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(Website__storage_, imageHeight),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = Website_FieldNumber_Type,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(Website__storage_, type),
        .defaultValue.valueEnum = Website_WebsiteType_Default,
        .dataTypeSpecific.enumDescFunc = Website_WebsiteType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "contentId",
        .number = Website_FieldNumber_ContentId,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Website__storage_, contentId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = Website_WebsiteType_EnumDescriptor },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\001\001!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Website class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(Website__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t Website_Type_RawValue(Website *message) {
  GPBDescriptor *descriptor = [Website descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:Website_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetWebsite_Type_RawValue(Website *message, int32_t value) {
  GPBDescriptor *descriptor = [Website descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:Website_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum Website_WebsiteType

GPBEnumDescriptor *Website_WebsiteType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Default", .number = Website_WebsiteType_Default },
      { .name = "TwitchChannel", .number = Website_WebsiteType_TwitchChannel },
      { .name = "YoutubeVideo", .number = Website_WebsiteType_YoutubeVideo },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(Website_WebsiteType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:Website_WebsiteType_IsValidValue];
  }
  return descriptor;
}

BOOL Website_WebsiteType_IsValidValue(int32_t value__) {
  switch (value__) {
    case Website_WebsiteType_Default:
    case Website_WebsiteType_TwitchChannel:
    case Website_WebsiteType_YoutubeVideo:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UserAction

@implementation UserAction

@dynamic id_p;
@dynamic message;
@dynamic userId;
@dynamic channel;

typedef struct UserAction__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
  NSString *message;
  NSString *userId;
  NSString *channel;
} UserAction__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = UserAction_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserAction__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "message",
        .number = UserAction_FieldNumber_Message,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserAction__storage_, message),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userId",
        .number = UserAction_FieldNumber_UserId,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserAction__storage_, userId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "channel",
        .number = UserAction_FieldNumber_Channel,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserAction__storage_, channel),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserAction class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(UserAction__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SystemMessage

@implementation SystemMessage

@dynamic bodyOneOfCase;
@dynamic type;
@dynamic channel;
@dynamic typing;
@dynamic user;
@dynamic message;
@dynamic userVoiceStatus;
@dynamic messageBatch;
@dynamic userTypeV1;
@dynamic userType;
@dynamic hasPayload, payload;

typedef struct SystemMessage__storage_ {
  uint32_t _has_storage_[2];
  SystemMessage_MessageType type;
  ChannelUser_ChannelUserType userTypeV1;
  ChannelMembershipRecord_MembershipType userType;
  NSString *channel;
  TypingStatus *typing;
  ChatUser *user;
  NSString *message;
  UserVoiceStatusUpdate *userVoiceStatus;
  MessageBatch *messageBatch;
  Any *payload;
} SystemMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageOneofDescription oneofs[] = {
      {
        .name = "body",
        .index = -1,
      },
    };
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .number = SystemMessage_FieldNumber_Type,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(SystemMessage__storage_, type),
        .defaultValue.valueEnum = SystemMessage_MessageType_Unknown,
        .dataTypeSpecific.enumDescFunc = SystemMessage_MessageType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "channel",
        .number = SystemMessage_FieldNumber_Channel,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SystemMessage__storage_, channel),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "typing",
        .number = SystemMessage_FieldNumber_Typing,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemMessage__storage_, typing),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(TypingStatus),
        .fieldOptions = NULL,
      },
      {
        .name = "user",
        .number = SystemMessage_FieldNumber_User,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemMessage__storage_, user),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ChatUser),
        .fieldOptions = NULL,
      },
      {
        .name = "message",
        .number = SystemMessage_FieldNumber_Message,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SystemMessage__storage_, message),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userTypeV1",
        .number = SystemMessage_FieldNumber_UserTypeV1,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(SystemMessage__storage_, userTypeV1),
        .defaultValue.valueEnum = ChannelUser_ChannelUserType_Unknown,
        .dataTypeSpecific.enumDescFunc = ChannelUser_ChannelUserType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "userType",
        .number = SystemMessage_FieldNumber_UserType,
        .hasIndex = 8,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(SystemMessage__storage_, userType),
        .defaultValue.valueEnum = ChannelMembershipRecord_MembershipType_Unknown,
        .dataTypeSpecific.enumDescFunc = ChannelMembershipRecord_MembershipType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "userVoiceStatus",
        .number = SystemMessage_FieldNumber_UserVoiceStatus,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemMessage__storage_, userVoiceStatus),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(UserVoiceStatusUpdate),
        .fieldOptions = NULL,
      },
      {
        .name = "messageBatch",
        .number = SystemMessage_FieldNumber_MessageBatch,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemMessage__storage_, messageBatch),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MessageBatch),
        .fieldOptions = NULL,
      },
      {
        .name = "payload",
        .number = SystemMessage_FieldNumber_Payload,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemMessage__storage_, payload),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Any),
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = SystemMessage_MessageType_EnumDescriptor },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SystemMessage class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:oneofs
                                    oneofCount:sizeof(oneofs) / sizeof(GPBMessageOneofDescription)
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SystemMessage__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t SystemMessage_Type_RawValue(SystemMessage *message) {
  GPBDescriptor *descriptor = [SystemMessage descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SystemMessage_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetSystemMessage_Type_RawValue(SystemMessage *message, int32_t value) {
  GPBDescriptor *descriptor = [SystemMessage descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SystemMessage_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t SystemMessage_UserTypeV1_RawValue(SystemMessage *message) {
  GPBDescriptor *descriptor = [SystemMessage descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SystemMessage_FieldNumber_UserTypeV1];
  return GPBGetMessageInt32Field(message, field);
}

void SetSystemMessage_UserTypeV1_RawValue(SystemMessage *message, int32_t value) {
  GPBDescriptor *descriptor = [SystemMessage descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SystemMessage_FieldNumber_UserTypeV1];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t SystemMessage_UserType_RawValue(SystemMessage *message) {
  GPBDescriptor *descriptor = [SystemMessage descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SystemMessage_FieldNumber_UserType];
  return GPBGetMessageInt32Field(message, field);
}

void SetSystemMessage_UserType_RawValue(SystemMessage *message, int32_t value) {
  GPBDescriptor *descriptor = [SystemMessage descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SystemMessage_FieldNumber_UserType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

void SystemMessage_ClearBodyOneOfCase(SystemMessage *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = descriptor->oneofs_[0];
  GPBMaybeClearOneof(message, oneof, 0);
}
#pragma mark - Enum SystemMessage_MessageType

GPBEnumDescriptor *SystemMessage_MessageType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Unknown", .number = SystemMessage_MessageType_Unknown },
      { .name = "Typing", .number = SystemMessage_MessageType_Typing },
      { .name = "Status", .number = SystemMessage_MessageType_Status },
      { .name = "SystemMessage", .number = SystemMessage_MessageType_SystemMessage },
      { .name = "UserJoined", .number = SystemMessage_MessageType_UserJoined },
      { .name = "UserLeft", .number = SystemMessage_MessageType_UserLeft },
      { .name = "FriendUpdated", .number = SystemMessage_MessageType_FriendUpdated },
      { .name = "ReadStatusUpdate", .number = SystemMessage_MessageType_ReadStatusUpdate },
      { .name = "RequestToPull", .number = SystemMessage_MessageType_RequestToPull },
      { .name = "UserVoiceStatus", .number = SystemMessage_MessageType_UserVoiceStatus },
      { .name = "MessageDeleted", .number = SystemMessage_MessageType_MessageDeleted },
      { .name = "MessageBatchDeleted", .number = SystemMessage_MessageType_MessageBatchDeleted },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(SystemMessage_MessageType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:SystemMessage_MessageType_IsValidValue];
  }
  return descriptor;
}

BOOL SystemMessage_MessageType_IsValidValue(int32_t value__) {
  switch (value__) {
    case SystemMessage_MessageType_Unknown:
    case SystemMessage_MessageType_Typing:
    case SystemMessage_MessageType_Status:
    case SystemMessage_MessageType_SystemMessage:
    case SystemMessage_MessageType_UserJoined:
    case SystemMessage_MessageType_UserLeft:
    case SystemMessage_MessageType_FriendUpdated:
    case SystemMessage_MessageType_ReadStatusUpdate:
    case SystemMessage_MessageType_RequestToPull:
    case SystemMessage_MessageType_UserVoiceStatus:
    case SystemMessage_MessageType_MessageDeleted:
    case SystemMessage_MessageType_MessageBatchDeleted:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - SystemAction

@implementation SystemAction

@dynamic type;
@dynamic body;
@dynamic bodyAnnotationsArray, bodyAnnotationsArray_Count;
@dynamic hasPayload, payload;

typedef struct SystemAction__storage_ {
  uint32_t _has_storage_[1];
  SystemAction_Type type;
  NSString *body;
  NSMutableArray *bodyAnnotationsArray;
  Any *payload;
} SystemAction__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .number = SystemAction_FieldNumber_Type,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(SystemAction__storage_, type),
        .defaultValue.valueEnum = SystemAction_Type_Unknown,
        .dataTypeSpecific.enumDescFunc = SystemAction_Type_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "body",
        .number = SystemAction_FieldNumber_Body,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SystemAction__storage_, body),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bodyAnnotationsArray",
        .number = SystemAction_FieldNumber_BodyAnnotationsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemAction__storage_, bodyAnnotationsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MessageBodyAnnotation),
        .fieldOptions = NULL,
      },
      {
        .name = "payload",
        .number = SystemAction_FieldNumber_Payload,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemAction__storage_, payload),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Any),
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = SystemAction_Type_EnumDescriptor },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SystemAction class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SystemAction__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t SystemAction_Type_RawValue(SystemAction *message) {
  GPBDescriptor *descriptor = [SystemAction descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SystemAction_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetSystemAction_Type_RawValue(SystemAction *message, int32_t value) {
  GPBDescriptor *descriptor = [SystemAction descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SystemAction_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum SystemAction_Type

GPBEnumDescriptor *SystemAction_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Unknown", .number = SystemAction_Type_Unknown },
      { .name = "General", .number = SystemAction_Type_General },
      { .name = "UserLoggedIn", .number = SystemAction_Type_UserLoggedIn },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(SystemAction_Type)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:SystemAction_Type_IsValidValue];
  }
  return descriptor;
}

BOOL SystemAction_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case SystemAction_Type_Unknown:
    case SystemAction_Type_General:
    case SystemAction_Type_UserLoggedIn:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - SystemActionPayloadUserLoggedIn

@implementation SystemActionPayloadUserLoggedIn

@dynamic hasFormerUser, formerUser;
@dynamic hasCurrentUser, currentUser;

typedef struct SystemActionPayloadUserLoggedIn__storage_ {
  uint32_t _has_storage_[1];
  ChatUser *formerUser;
  ChatUser *currentUser;
} SystemActionPayloadUserLoggedIn__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "formerUser",
        .number = SystemActionPayloadUserLoggedIn_FieldNumber_FormerUser,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemActionPayloadUserLoggedIn__storage_, formerUser),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ChatUser),
        .fieldOptions = NULL,
      },
      {
        .name = "currentUser",
        .number = SystemActionPayloadUserLoggedIn_FieldNumber_CurrentUser,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SystemActionPayloadUserLoggedIn__storage_, currentUser),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ChatUser),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SystemActionPayloadUserLoggedIn class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SystemActionPayloadUserLoggedIn__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MessageBatch

@implementation MessageBatch

@dynamic start;
@dynamic end;

typedef struct MessageBatch__storage_ {
  uint32_t _has_storage_[1];
  NSString *start;
  NSString *end;
} MessageBatch__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "start",
        .number = MessageBatch_FieldNumber_Start,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MessageBatch__storage_, start),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "end",
        .number = MessageBatch_FieldNumber_End,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MessageBatch__storage_, end),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MessageBatch class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MessageBatch__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserVoiceStatusUpdate

@implementation UserVoiceStatusUpdate

@dynamic userId;
@dynamic userVoiceStatus;

typedef struct UserVoiceStatusUpdate__storage_ {
  uint32_t _has_storage_[1];
  ChannelMembershipRecord_VoiceStatus userVoiceStatus;
  NSString *userId;
} UserVoiceStatusUpdate__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .number = UserVoiceStatusUpdate_FieldNumber_UserId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserVoiceStatusUpdate__storage_, userId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userVoiceStatus",
        .number = UserVoiceStatusUpdate_FieldNumber_UserVoiceStatus,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(UserVoiceStatusUpdate__storage_, userVoiceStatus),
        .defaultValue.valueEnum = ChannelMembershipRecord_VoiceStatus_VsUnknown,
        .dataTypeSpecific.enumDescFunc = ChannelMembershipRecord_VoiceStatus_EnumDescriptor,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserVoiceStatusUpdate class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(UserVoiceStatusUpdate__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UserVoiceStatusUpdate_UserVoiceStatus_RawValue(UserVoiceStatusUpdate *message) {
  GPBDescriptor *descriptor = [UserVoiceStatusUpdate descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserVoiceStatusUpdate_FieldNumber_UserVoiceStatus];
  return GPBGetMessageInt32Field(message, field);
}

void SetUserVoiceStatusUpdate_UserVoiceStatus_RawValue(UserVoiceStatusUpdate *message, int32_t value) {
  GPBDescriptor *descriptor = [UserVoiceStatusUpdate descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserVoiceStatusUpdate_FieldNumber_UserVoiceStatus];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - TypingStatus

@implementation TypingStatus

@dynamic userId;
@dynamic isTyping;

typedef struct TypingStatus__storage_ {
  uint32_t _has_storage_[1];
  BOOL isTyping;
  NSString *userId;
} TypingStatus__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .number = TypingStatus_FieldNumber_UserId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(TypingStatus__storage_, userId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "isTyping",
        .number = TypingStatus_FieldNumber_IsTyping,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(TypingStatus__storage_, isTyping),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[TypingStatus class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(TypingStatus__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MessageWithMeta

@implementation MessageWithMeta

@dynamic hasMessage, message;
@dynamic hasSenderAgent, senderAgent;

typedef struct MessageWithMeta__storage_ {
  uint32_t _has_storage_[1];
  WebsocketMessage *message;
  UserAgent *senderAgent;
} MessageWithMeta__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "message",
        .number = MessageWithMeta_FieldNumber_Message,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MessageWithMeta__storage_, message),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(WebsocketMessage),
        .fieldOptions = NULL,
      },
      {
        .name = "senderAgent",
        .number = MessageWithMeta_FieldNumber_SenderAgent,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MessageWithMeta__storage_, senderAgent),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(UserAgent),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MessageWithMeta class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MessageWithMeta__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
