// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: webhook.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Webhook.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - WebhookRoot

@implementation WebhookRoot

@end

#pragma mark - WebhookRoot_FileDescriptor

static GPBFileDescriptor *WebhookRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"proto"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - OutgoingWebhook

@implementation OutgoingWebhook

@dynamic id_p;
@dynamic triggerCommand;
@dynamic URL;
@dynamic method;
@dynamic token;
@dynamic channelId;
@dynamic tsCreated;
@dynamic acShow;
@dynamic acDesc;
@dynamic acHint;
@dynamic ownerId;
@dynamic responseName;
@dynamic responseAvatar;

typedef struct OutgoingWebhook__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
  NSString *triggerCommand;
  NSString *URL;
  NSString *method;
  NSString *token;
  NSString *channelId;
  NSString *tsCreated;
  NSString *acDesc;
  NSString *acHint;
  NSString *ownerId;
  NSString *responseName;
  NSString *responseAvatar;
} OutgoingWebhook__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "triggerCommand",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_TriggerCommand,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, triggerCommand),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_URL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "method",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_Method,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, method),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "token",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_Token,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, token),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_ChannelId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, channelId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tsCreated",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_TsCreated,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, tsCreated),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "acShow",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_AcShow,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "acDesc",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_AcDesc,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, acDesc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "acHint",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_AcHint,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, acHint),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ownerId",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_OwnerId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, ownerId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "responseName",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_ResponseName,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, responseName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "responseAvatar",
        .dataTypeSpecific.className = NULL,
        .number = OutgoingWebhook_FieldNumber_ResponseAvatar,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OutgoingWebhook__storage_, responseAvatar),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OutgoingWebhook class]
                                     rootClass:[WebhookRoot class]
                                          file:WebhookRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OutgoingWebhook__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003!!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
