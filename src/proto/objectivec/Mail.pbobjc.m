// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Mail.pbobjc.h"
 #import "Profile.pbobjc.h"
 #import "Message.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MailRoot

@implementation MailRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[ProfileRoot extensionRegistry]];
    [registry addExtensions:[MessageRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - MailRoot_FileDescriptor

static GPBFileDescriptor *MailRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"proto"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - SendEmailRequest

@implementation SendEmailRequest

@dynamic recipientName;
@dynamic recipientAddress;
@dynamic subject;
@dynamic template_p;
@dynamic variables, variables_Count;

typedef struct SendEmailRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *recipientName;
  NSString *recipientAddress;
  NSString *subject;
  NSString *template_p;
  NSMutableDictionary *variables;
} SendEmailRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "recipientName",
        .dataTypeSpecific.className = NULL,
        .number = SendEmailRequest_FieldNumber_RecipientName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SendEmailRequest__storage_, recipientName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "recipientAddress",
        .dataTypeSpecific.className = NULL,
        .number = SendEmailRequest_FieldNumber_RecipientAddress,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SendEmailRequest__storage_, recipientAddress),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "subject",
        .dataTypeSpecific.className = NULL,
        .number = SendEmailRequest_FieldNumber_Subject,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SendEmailRequest__storage_, subject),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "template_p",
        .dataTypeSpecific.className = NULL,
        .number = SendEmailRequest_FieldNumber_Template_p,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SendEmailRequest__storage_, template_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "variables",
        .dataTypeSpecific.className = NULL,
        .number = SendEmailRequest_FieldNumber_Variables,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(SendEmailRequest__storage_, variables),
        .flags = GPBFieldMapKeyString,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendEmailRequest class]
                                     rootClass:[MailRoot class]
                                          file:MailRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SendEmailRequest__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SendEmailResponse

@implementation SendEmailResponse


typedef struct SendEmailResponse__storage_ {
  uint32_t _has_storage_[1];
} SendEmailResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendEmailResponse class]
                                     rootClass:[MailRoot class]
                                          file:MailRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(SendEmailResponse__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SendPushReminderRequest

@implementation SendPushReminderRequest

@dynamic hasRecipient, recipient;
@dynamic hasMessage, message;
@dynamic hasChannel, channel;
@dynamic hasGroup, group;
@dynamic hasGame, game;
@dynamic participantsArray, participantsArray_Count;
@dynamic wasMention;

typedef struct SendPushReminderRequest__storage_ {
  uint32_t _has_storage_[1];
  User *recipient;
  WebsocketMessage *message;
  Channel *channel;
  Group *group;
  Game *game;
  NSMutableArray *participantsArray;
} SendPushReminderRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "recipient",
        .dataTypeSpecific.className = GPBStringifySymbol(User),
        .number = SendPushReminderRequest_FieldNumber_Recipient,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SendPushReminderRequest__storage_, recipient),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = GPBStringifySymbol(WebsocketMessage),
        .number = SendPushReminderRequest_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SendPushReminderRequest__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "channel",
        .dataTypeSpecific.className = GPBStringifySymbol(Channel),
        .number = SendPushReminderRequest_FieldNumber_Channel,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SendPushReminderRequest__storage_, channel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "group",
        .dataTypeSpecific.className = GPBStringifySymbol(Group),
        .number = SendPushReminderRequest_FieldNumber_Group,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SendPushReminderRequest__storage_, group),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "game",
        .dataTypeSpecific.className = GPBStringifySymbol(Game),
        .number = SendPushReminderRequest_FieldNumber_Game,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SendPushReminderRequest__storage_, game),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "participantsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(User),
        .number = SendPushReminderRequest_FieldNumber_ParticipantsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(SendPushReminderRequest__storage_, participantsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "wasMention",
        .dataTypeSpecific.className = NULL,
        .number = SendPushReminderRequest_FieldNumber_WasMention,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendPushReminderRequest class]
                                     rootClass:[MailRoot class]
                                          file:MailRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SendPushReminderRequest__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\007\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SendPushReminderResponse

@implementation SendPushReminderResponse

@dynamic hasRecipient, recipient;
@dynamic hasMessage, message;
@dynamic hasChannel, channel;
@dynamic hasGroup, group;
@dynamic hasGame, game;
@dynamic participantsArray, participantsArray_Count;

typedef struct SendPushReminderResponse__storage_ {
  uint32_t _has_storage_[1];
  User *recipient;
  WebsocketMessage *message;
  Channel *channel;
  Group *group;
  Game *game;
  NSMutableArray *participantsArray;
} SendPushReminderResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "recipient",
        .dataTypeSpecific.className = GPBStringifySymbol(User),
        .number = SendPushReminderResponse_FieldNumber_Recipient,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SendPushReminderResponse__storage_, recipient),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = GPBStringifySymbol(WebsocketMessage),
        .number = SendPushReminderResponse_FieldNumber_Message,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SendPushReminderResponse__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "channel",
        .dataTypeSpecific.className = GPBStringifySymbol(Channel),
        .number = SendPushReminderResponse_FieldNumber_Channel,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SendPushReminderResponse__storage_, channel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "group",
        .dataTypeSpecific.className = GPBStringifySymbol(Group),
        .number = SendPushReminderResponse_FieldNumber_Group,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SendPushReminderResponse__storage_, group),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "game",
        .dataTypeSpecific.className = GPBStringifySymbol(Game),
        .number = SendPushReminderResponse_FieldNumber_Game,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SendPushReminderResponse__storage_, game),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "participantsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(User),
        .number = SendPushReminderResponse_FieldNumber_ParticipantsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(SendPushReminderResponse__storage_, participantsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SendPushReminderResponse class]
                                     rootClass:[MailRoot class]
                                          file:MailRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SendPushReminderResponse__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
