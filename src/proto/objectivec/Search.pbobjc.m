// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: search.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Search.pbobjc.h"
#import "Any.pbobjc.h"
#import "Profile.pbobjc.h"
#import "HubBase.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - SearchRoot

@implementation SearchRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[AnyRoot extensionRegistry]];
    [registry addExtensions:[ProfileRoot extensionRegistry]];
    [registry addExtensions:[HubBaseRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - SearchRoot_FileDescriptor

static GPBFileDescriptor *SearchRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"proto"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - SearchRequest

@implementation SearchRequest

@dynamic typesArray, typesArray_Count;
@dynamic fieldsArray, fieldsArray_Count;
@dynamic text;
@dynamic fuzzy;
@dynamic size;
@dynamic from;

typedef struct SearchRequest__storage_ {
  uint32_t _has_storage_[1];
  BOOL fuzzy;
  int32_t size;
  int32_t from;
  NSMutableArray *typesArray;
  NSMutableArray *fieldsArray;
  NSString *text;
} SearchRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "typesArray",
        .number = SearchRequest_FieldNumber_TypesArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchRequest__storage_, typesArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fieldsArray",
        .number = SearchRequest_FieldNumber_FieldsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchRequest__storage_, fieldsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "text",
        .number = SearchRequest_FieldNumber_Text,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchRequest__storage_, text),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fuzzy",
        .number = SearchRequest_FieldNumber_Fuzzy,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(SearchRequest__storage_, fuzzy),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "size",
        .number = SearchRequest_FieldNumber_Size,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(SearchRequest__storage_, size),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "from",
        .number = SearchRequest_FieldNumber_From,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(SearchRequest__storage_, from),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SearchRequest class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SearchRequest__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SearchResponse

@implementation SearchResponse

@dynamic hits, hits_Count;
@dynamic from;

typedef struct SearchResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  NSMutableDictionary *hits;
} SearchResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hits",
        .number = SearchResponse_FieldNumber_Hits,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldMapKeyString,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchResponse__storage_, hits),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SearchHits),
        .fieldOptions = NULL,
      },
      {
        .name = "from",
        .number = SearchResponse_FieldNumber_From,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(SearchResponse__storage_, from),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SearchResponse class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SearchResponse__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SearchHits

@implementation SearchHits

@dynamic hitsArray, hitsArray_Count;
@dynamic type;
@dynamic total;

typedef struct SearchHits__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *hitsArray;
  NSString *type;
  int64_t total;
} SearchHits__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hitsArray",
        .number = SearchHits_FieldNumber_HitsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchHits__storage_, hitsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SearchHit),
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = SearchHits_FieldNumber_Type,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchHits__storage_, type),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "total",
        .number = SearchHits_FieldNumber_Total,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(SearchHits__storage_, total),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SearchHits class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SearchHits__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SearchHit

@implementation SearchHit

@dynamic sourceOneOfCase;
@dynamic score;
@dynamic index;
@dynamic type;
@dynamic id_p;
@dynamic highlights, highlights_Count;
@dynamic user;
@dynamic group;
@dynamic game;
@dynamic community;

typedef struct SearchHit__storage_ {
  uint32_t _has_storage_[2];
  float score;
  SearchHit_Type type;
  NSString *index;
  NSString *id_p;
  NSMutableDictionary *highlights;
  SearchUser *user;
  SearchGroup *group;
  SearchGame *game;
  Hub *community;
} SearchHit__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageOneofDescription oneofs[] = {
      {
        .name = "source",
        .index = -1,
      },
    };
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "score",
        .number = SearchHit_FieldNumber_Score,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
        .offset = offsetof(SearchHit__storage_, score),
        .defaultValue.valueFloat = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "index",
        .number = SearchHit_FieldNumber_Index,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchHit__storage_, index),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = SearchHit_FieldNumber_Type,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(SearchHit__storage_, type),
        .defaultValue.valueEnum = SearchHit_Type_Unknown,
        .dataTypeSpecific.enumDescFunc = SearchHit_Type_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "id_p",
        .number = SearchHit_FieldNumber_Id_p,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchHit__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "highlights",
        .number = SearchHit_FieldNumber_Highlights,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldMapKeyString,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchHit__storage_, highlights),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Highlights),
        .fieldOptions = NULL,
      },
      {
        .name = "user",
        .number = SearchHit_FieldNumber_User,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchHit__storage_, user),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SearchUser),
        .fieldOptions = NULL,
      },
      {
        .name = "group",
        .number = SearchHit_FieldNumber_Group,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchHit__storage_, group),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SearchGroup),
        .fieldOptions = NULL,
      },
      {
        .name = "game",
        .number = SearchHit_FieldNumber_Game,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchHit__storage_, game),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SearchGame),
        .fieldOptions = NULL,
      },
      {
        .name = "community",
        .number = SearchHit_FieldNumber_Community,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchHit__storage_, community),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Hub),
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = SearchHit_Type_EnumDescriptor },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SearchHit class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:oneofs
                                    oneofCount:sizeof(oneofs) / sizeof(GPBMessageOneofDescription)
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SearchHit__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t SearchHit_Type_RawValue(SearchHit *message) {
  GPBDescriptor *descriptor = [SearchHit descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SearchHit_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetSearchHit_Type_RawValue(SearchHit *message, int32_t value) {
  GPBDescriptor *descriptor = [SearchHit descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:SearchHit_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

void SearchHit_ClearSourceOneOfCase(SearchHit *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = descriptor->oneofs_[0];
  GPBMaybeClearOneof(message, oneof, 0);
}
#pragma mark - Enum SearchHit_Type

GPBEnumDescriptor *SearchHit_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Unknown", .number = SearchHit_Type_Unknown },
      { .name = "Group", .number = SearchHit_Type_Group },
      { .name = "User", .number = SearchHit_Type_User },
      { .name = "Game", .number = SearchHit_Type_Game },
      { .name = "Community", .number = SearchHit_Type_Community },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(SearchHit_Type)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:SearchHit_Type_IsValidValue];
  }
  return descriptor;
}

BOOL SearchHit_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case SearchHit_Type_Unknown:
    case SearchHit_Type_Group:
    case SearchHit_Type_User:
    case SearchHit_Type_Game:
    case SearchHit_Type_Community:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Highlights

@implementation Highlights

@dynamic field;
@dynamic highlightsArray, highlightsArray_Count;

typedef struct Highlights__storage_ {
  uint32_t _has_storage_[1];
  NSString *field;
  NSMutableArray *highlightsArray;
} Highlights__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "field",
        .number = Highlights_FieldNumber_Field,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Highlights__storage_, field),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "highlightsArray",
        .number = Highlights_FieldNumber_HighlightsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Highlights__storage_, highlightsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Highlights class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(Highlights__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - IndexResponse

@implementation IndexResponse

@dynamic index;
@dynamic type;
@dynamic id_p;
@dynamic version;
@dynamic created;

typedef struct IndexResponse__storage_ {
  uint32_t _has_storage_[1];
  BOOL created;
  NSString *index;
  NSString *type;
  NSString *id_p;
  int64_t version;
} IndexResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "index",
        .number = IndexResponse_FieldNumber_Index,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(IndexResponse__storage_, index),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = IndexResponse_FieldNumber_Type,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(IndexResponse__storage_, type),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "id_p",
        .number = IndexResponse_FieldNumber_Id_p,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(IndexResponse__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "version",
        .number = IndexResponse_FieldNumber_Version,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(IndexResponse__storage_, version),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "created",
        .number = IndexResponse_FieldNumber_Created,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(IndexResponse__storage_, created),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IndexResponse class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(IndexResponse__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DeleteResponse

@implementation DeleteResponse

@dynamic found;
@dynamic index;
@dynamic type;
@dynamic id_p;
@dynamic version;

typedef struct DeleteResponse__storage_ {
  uint32_t _has_storage_[1];
  BOOL found;
  NSString *index;
  NSString *type;
  NSString *id_p;
  int64_t version;
} DeleteResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "found",
        .number = DeleteResponse_FieldNumber_Found,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(DeleteResponse__storage_, found),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "index",
        .number = DeleteResponse_FieldNumber_Index,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(DeleteResponse__storage_, index),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = DeleteResponse_FieldNumber_Type,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(DeleteResponse__storage_, type),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "id_p",
        .number = DeleteResponse_FieldNumber_Id_p,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(DeleteResponse__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "version",
        .number = DeleteResponse_FieldNumber_Version,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(DeleteResponse__storage_, version),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DeleteResponse class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(DeleteResponse__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Suggestion

@implementation Suggestion

@dynamic id_p;
@dynamic type;
@dynamic title;
@dynamic image;
@dynamic deprecatedProprietary;
@dynamic hasData_p, data_p;

typedef struct Suggestion__storage_ {
  uint32_t _has_storage_[1];
  Suggestion_Type type;
  NSString *id_p;
  NSString *title;
  NSString *image;
  NSData *deprecatedProprietary;
  Any *data_p;
} Suggestion__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = Suggestion_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Suggestion__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = Suggestion_FieldNumber_Type,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(Suggestion__storage_, type),
        .defaultValue.valueEnum = Suggestion_Type_Unknown,
        .dataTypeSpecific.enumDescFunc = Suggestion_Type_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "title",
        .number = Suggestion_FieldNumber_Title,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Suggestion__storage_, title),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "image",
        .number = Suggestion_FieldNumber_Image,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(Suggestion__storage_, image),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "deprecatedProprietary",
        .number = Suggestion_FieldNumber_DeprecatedProprietary,
        .hasIndex = 4,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(Suggestion__storage_, deprecatedProprietary),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "data_p",
        .number = Suggestion_FieldNumber_Data_p,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(Suggestion__storage_, data_p),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Any),
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = Suggestion_Type_EnumDescriptor },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\005j\253\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Suggestion class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(Suggestion__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t Suggestion_Type_RawValue(Suggestion *message) {
  GPBDescriptor *descriptor = [Suggestion descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:Suggestion_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetSuggestion_Type_RawValue(Suggestion *message, int32_t value) {
  GPBDescriptor *descriptor = [Suggestion descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:Suggestion_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum Suggestion_Type

GPBEnumDescriptor *Suggestion_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Unknown", .number = Suggestion_Type_Unknown },
      { .name = "Group", .number = Suggestion_Type_Group },
      { .name = "User", .number = Suggestion_Type_User },
      { .name = "Game", .number = Suggestion_Type_Game },
      { .name = "Community", .number = Suggestion_Type_Community },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(Suggestion_Type)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:Suggestion_Type_IsValidValue];
  }
  return descriptor;
}

BOOL Suggestion_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case Suggestion_Type_Unknown:
    case Suggestion_Type_Group:
    case Suggestion_Type_User:
    case Suggestion_Type_Game:
    case Suggestion_Type_Community:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - SuggestionRequest

@implementation SuggestionRequest

@dynamic text;
@dynamic fuzzy;
@dynamic contextArray, contextArray_Count;

typedef struct SuggestionRequest__storage_ {
  uint32_t _has_storage_[1];
  BOOL fuzzy;
  NSString *text;
  NSMutableArray *contextArray;
} SuggestionRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "text",
        .number = SuggestionRequest_FieldNumber_Text,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SuggestionRequest__storage_, text),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fuzzy",
        .number = SuggestionRequest_FieldNumber_Fuzzy,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(SuggestionRequest__storage_, fuzzy),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "contextArray",
        .number = SuggestionRequest_FieldNumber_ContextArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SuggestionRequest__storage_, contextArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SuggestionRequest class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SuggestionRequest__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SuggestionResponse

@implementation SuggestionResponse

@dynamic suggestionsArray, suggestionsArray_Count;

typedef struct SuggestionResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *suggestionsArray;
} SuggestionResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "suggestionsArray",
        .number = SuggestionResponse_FieldNumber_SuggestionsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SuggestionResponse__storage_, suggestionsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(Suggestion),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SuggestionResponse class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SuggestionResponse__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SearchGroup

@implementation SearchGroup

@dynamic id_p;
@dynamic name;
@dynamic description_p;
@dynamic titleImage;
@dynamic backgroundImage;
@dynamic channelsArray, channelsArray_Count;

typedef struct SearchGroup__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
  NSString *name;
  NSString *description_p;
  NSString *titleImage;
  NSString *backgroundImage;
  NSMutableArray *channelsArray;
} SearchGroup__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = SearchGroup_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGroup__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "name",
        .number = SearchGroup_FieldNumber_Name,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGroup__storage_, name),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "description_p",
        .number = SearchGroup_FieldNumber_Description_p,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGroup__storage_, description_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "titleImage",
        .number = SearchGroup_FieldNumber_TitleImage,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGroup__storage_, titleImage),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "backgroundImage",
        .number = SearchGroup_FieldNumber_BackgroundImage,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGroup__storage_, backgroundImage),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "channelsArray",
        .number = SearchGroup_FieldNumber_ChannelsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchGroup__storage_, channelsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SearchChannel),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SearchGroup class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SearchGroup__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SearchGame

@implementation SearchGame

@dynamic id_p;
@dynamic name;
@dynamic shortName;
@dynamic titleImage;
@dynamic backgroundImagesArray, backgroundImagesArray_Count;
@dynamic channelsArray, channelsArray_Count;

typedef struct SearchGame__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
  NSString *name;
  NSString *shortName;
  NSString *titleImage;
  NSMutableArray *backgroundImagesArray;
  NSMutableArray *channelsArray;
} SearchGame__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = SearchGame_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGame__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "name",
        .number = SearchGame_FieldNumber_Name,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGame__storage_, name),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "shortName",
        .number = SearchGame_FieldNumber_ShortName,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGame__storage_, shortName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "titleImage",
        .number = SearchGame_FieldNumber_TitleImage,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGame__storage_, titleImage),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "backgroundImagesArray",
        .number = SearchGame_FieldNumber_BackgroundImagesArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchGame__storage_, backgroundImagesArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "channelsArray",
        .number = SearchGame_FieldNumber_ChannelsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(SearchGame__storage_, channelsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SearchChannel),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SearchGame class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SearchGame__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SearchChannel

@implementation SearchChannel

@dynamic id_p;
@dynamic title;
@dynamic topic;
@dynamic tagsArray, tagsArray_Count;

typedef struct SearchChannel__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
  NSString *title;
  NSString *topic;
  NSMutableArray *tagsArray;
} SearchChannel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = SearchChannel_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchChannel__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "title",
        .number = SearchChannel_FieldNumber_Title,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchChannel__storage_, title),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "topic",
        .number = SearchChannel_FieldNumber_Topic,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchChannel__storage_, topic),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "tagsArray",
        .number = SearchChannel_FieldNumber_TagsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchChannel__storage_, tagsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SearchChannel class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SearchChannel__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SearchUser

@implementation SearchUser

@dynamic id_p;
@dynamic name;
@dynamic avatarImage;
@dynamic backgroundImage;

typedef struct SearchUser__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
  NSString *name;
  NSString *avatarImage;
  NSString *backgroundImage;
} SearchUser__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = SearchUser_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchUser__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "name",
        .number = SearchUser_FieldNumber_Name,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchUser__storage_, name),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "avatarImage",
        .number = SearchUser_FieldNumber_AvatarImage,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchUser__storage_, avatarImage),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "backgroundImage",
        .number = SearchUser_FieldNumber_BackgroundImage,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(SearchUser__storage_, backgroundImage),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SearchUser class]
                                     rootClass:[SearchRoot class]
                                          file:SearchRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(SearchUser__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
