// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eventlog.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ChatUser;
@class LogEntry;
@class WebsocketMessage;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum EventLogGetLogEntriesResponse_ErrorType

typedef GPB_ENUM(EventLogGetLogEntriesResponse_ErrorType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  EventLogGetLogEntriesResponse_ErrorType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EventLogGetLogEntriesResponse_ErrorType_None = 0,
  EventLogGetLogEntriesResponse_ErrorType_UnknownError = 1,
  EventLogGetLogEntriesResponse_ErrorType_Forbidden = 2,
  EventLogGetLogEntriesResponse_ErrorType_BadRequest = 3,
};

GPBEnumDescriptor *EventLogGetLogEntriesResponse_ErrorType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL EventLogGetLogEntriesResponse_ErrorType_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_TargetType

typedef GPB_ENUM(LogEntry_TargetType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  LogEntry_TargetType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_TargetType_Notarget = 0,
  LogEntry_TargetType_User = 1,
  LogEntry_TargetType_Message = 2,
};

GPBEnumDescriptor *LogEntry_TargetType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL LogEntry_TargetType_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_ActionType

typedef GPB_ENUM(LogEntry_ActionType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  LogEntry_ActionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_ActionType_Other = 0,
  LogEntry_ActionType_KickBan = 1,
  LogEntry_ActionType_MessageDelete = 2,
  LogEntry_ActionType_MessagePurge = 3,
};

GPBEnumDescriptor *LogEntry_ActionType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL LogEntry_ActionType_IsValidValue(int32_t value);

#pragma mark - EventlogRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface EventlogRoot : GPBRootObject
@end

#pragma mark - EventLogGetLogEntriesResponse

typedef GPB_ENUM(EventLogGetLogEntriesResponse_FieldNumber) {
  EventLogGetLogEntriesResponse_FieldNumber_Error = 1,
  EventLogGetLogEntriesResponse_FieldNumber_LogEntriesArray = 2,
};

@interface EventLogGetLogEntriesResponse : GPBMessage

@property(nonatomic, readwrite) EventLogGetLogEntriesResponse_ErrorType error;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LogEntry*> *logEntriesArray;
/// The number of items in @c logEntriesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger logEntriesArray_Count;

@end

/// Fetches the raw value of a @c EventLogGetLogEntriesResponse's @c error property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t EventLogGetLogEntriesResponse_Error_RawValue(EventLogGetLogEntriesResponse *message);
/// Sets the raw value of an @c EventLogGetLogEntriesResponse's @c error property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetEventLogGetLogEntriesResponse_Error_RawValue(EventLogGetLogEntriesResponse *message, int32_t value);

#pragma mark - LogEntryEvent

typedef GPB_ENUM(LogEntryEvent_FieldNumber) {
  LogEntryEvent_FieldNumber_Timestamp = 1,
  LogEntryEvent_FieldNumber_ChannelId = 2,
  LogEntryEvent_FieldNumber_CommunityId = 3,
  LogEntryEvent_FieldNumber_SourceUserId = 4,
  LogEntryEvent_FieldNumber_TargetId = 5,
  LogEntryEvent_FieldNumber_TargetMessage = 6,
  LogEntryEvent_FieldNumber_TargetType = 7,
  LogEntryEvent_FieldNumber_Action = 8,
  LogEntryEvent_FieldNumber_ActionType = 9,
  LogEntryEvent_FieldNumber_Reason = 10,
  LogEntryEvent_FieldNumber_Description_p = 11,
};

@interface LogEntryEvent : GPBMessage

@property(nonatomic, readwrite) int64_t timestamp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *communityId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceUserId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *targetId;

@property(nonatomic, readwrite, strong, null_resettable) WebsocketMessage *targetMessage;
/// Test to see if @c targetMessage has been set.
@property(nonatomic, readwrite) BOOL hasTargetMessage;

@property(nonatomic, readwrite) LogEntry_TargetType targetType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

@property(nonatomic, readwrite) LogEntry_ActionType actionType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@end

/// Fetches the raw value of a @c LogEntryEvent's @c targetType property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t LogEntryEvent_TargetType_RawValue(LogEntryEvent *message);
/// Sets the raw value of an @c LogEntryEvent's @c targetType property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetLogEntryEvent_TargetType_RawValue(LogEntryEvent *message, int32_t value);

/// Fetches the raw value of a @c LogEntryEvent's @c actionType property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t LogEntryEvent_ActionType_RawValue(LogEntryEvent *message);
/// Sets the raw value of an @c LogEntryEvent's @c actionType property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetLogEntryEvent_ActionType_RawValue(LogEntryEvent *message, int32_t value);

#pragma mark - LogEntry

typedef GPB_ENUM(LogEntry_FieldNumber) {
  LogEntry_FieldNumber_Id_p = 1,
  LogEntry_FieldNumber_Timestamp = 2,
  LogEntry_FieldNumber_ChannelId = 3,
  LogEntry_FieldNumber_CommunityId = 4,
  LogEntry_FieldNumber_SourceUser = 5,
  LogEntry_FieldNumber_TargetUser = 6,
  LogEntry_FieldNumber_TargetMessage = 7,
  LogEntry_FieldNumber_TargetType = 8,
  LogEntry_FieldNumber_Action = 9,
  LogEntry_FieldNumber_ActionType = 10,
  LogEntry_FieldNumber_Reason = 11,
  LogEntry_FieldNumber_Description_p = 12,
  LogEntry_FieldNumber_ContextArray = 13,
};

typedef GPB_ENUM(LogEntry_Target_OneOfCase) {
  LogEntry_Target_OneOfCase_GPBUnsetOneOfCase = 0,
  LogEntry_Target_OneOfCase_TargetUser = 6,
  LogEntry_Target_OneOfCase_TargetMessage = 7,
};

@interface LogEntry : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite) int64_t timestamp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *communityId;

@property(nonatomic, readwrite, strong, null_resettable) ChatUser *sourceUser;
/// Test to see if @c sourceUser has been set.
@property(nonatomic, readwrite) BOOL hasSourceUser;

@property(nonatomic, readonly) LogEntry_Target_OneOfCase targetOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ChatUser *targetUser;

@property(nonatomic, readwrite, strong, null_resettable) WebsocketMessage *targetMessage;

@property(nonatomic, readwrite) LogEntry_TargetType targetType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

@property(nonatomic, readwrite) LogEntry_ActionType actionType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WebsocketMessage*> *contextArray;
/// The number of items in @c contextArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger contextArray_Count;

@end

/// Fetches the raw value of a @c LogEntry's @c targetType property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t LogEntry_TargetType_RawValue(LogEntry *message);
/// Sets the raw value of an @c LogEntry's @c targetType property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetLogEntry_TargetType_RawValue(LogEntry *message, int32_t value);

/// Fetches the raw value of a @c LogEntry's @c actionType property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t LogEntry_ActionType_RawValue(LogEntry *message);
/// Sets the raw value of an @c LogEntry's @c actionType property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetLogEntry_ActionType_RawValue(LogEntry *message, int32_t value);

/// Clears whatever value was set for the oneof 'target'.
void LogEntry_ClearTargetOneOfCase(LogEntry *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
