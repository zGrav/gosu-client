// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chatservice_control.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "ChatserviceControl.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - ChatserviceControlRoot

@implementation ChatserviceControlRoot

@end

#pragma mark - ChatserviceControlRoot_FileDescriptor

static GPBFileDescriptor *ChatserviceControlRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"proto"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - ChatServiceControlCommand

@implementation ChatServiceControlCommand

@dynamic commandOneOfCase;
@dynamic type;
@dynamic disconnectUsersCommand;

typedef struct ChatServiceControlCommand__storage_ {
  uint32_t _has_storage_[2];
  ChatServiceControlCommand_CommandType type;
  ChatServiceDisconnectUsersCommand *disconnectUsersCommand;
} ChatServiceControlCommand__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageOneofDescription oneofs[] = {
      {
        .name = "command",
        .index = -1,
      },
    };
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .number = ChatServiceControlCommand_FieldNumber_Type,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(ChatServiceControlCommand__storage_, type),
        .defaultValue.valueEnum = ChatServiceControlCommand_CommandType_Unknown,
        .dataTypeSpecific.enumDescFunc = ChatServiceControlCommand_CommandType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "disconnectUsersCommand",
        .number = ChatServiceControlCommand_FieldNumber_DisconnectUsersCommand,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(ChatServiceControlCommand__storage_, disconnectUsersCommand),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ChatServiceDisconnectUsersCommand),
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = ChatServiceControlCommand_CommandType_EnumDescriptor },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ChatServiceControlCommand class]
                                     rootClass:[ChatserviceControlRoot class]
                                          file:ChatserviceControlRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:oneofs
                                    oneofCount:sizeof(oneofs) / sizeof(GPBMessageOneofDescription)
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(ChatServiceControlCommand__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t ChatServiceControlCommand_Type_RawValue(ChatServiceControlCommand *message) {
  GPBDescriptor *descriptor = [ChatServiceControlCommand descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ChatServiceControlCommand_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetChatServiceControlCommand_Type_RawValue(ChatServiceControlCommand *message, int32_t value) {
  GPBDescriptor *descriptor = [ChatServiceControlCommand descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ChatServiceControlCommand_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

void ChatServiceControlCommand_ClearCommandOneOfCase(ChatServiceControlCommand *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = descriptor->oneofs_[0];
  GPBMaybeClearOneof(message, oneof, 0);
}
#pragma mark - Enum ChatServiceControlCommand_CommandType

GPBEnumDescriptor *ChatServiceControlCommand_CommandType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Unknown", .number = ChatServiceControlCommand_CommandType_Unknown },
      { .name = "DisconnectUsers", .number = ChatServiceControlCommand_CommandType_DisconnectUsers },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ChatServiceControlCommand_CommandType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:ChatServiceControlCommand_CommandType_IsValidValue];
  }
  return descriptor;
}

BOOL ChatServiceControlCommand_CommandType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ChatServiceControlCommand_CommandType_Unknown:
    case ChatServiceControlCommand_CommandType_DisconnectUsers:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - ChatServiceDisconnectUsersCommand

@implementation ChatServiceDisconnectUsersCommand

@dynamic userIdsArray, userIdsArray_Count;

typedef struct ChatServiceDisconnectUsersCommand__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *userIdsArray;
} ChatServiceDisconnectUsersCommand__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userIdsArray",
        .number = ChatServiceDisconnectUsersCommand_FieldNumber_UserIdsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
        .offset = offsetof(ChatServiceDisconnectUsersCommand__storage_, userIdsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ChatServiceDisconnectUsersCommand class]
                                     rootClass:[ChatserviceControlRoot class]
                                          file:ChatserviceControlRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(ChatServiceDisconnectUsersCommand__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
