// Generated by the protocol buffer compiler.  DO NOT EDIT!

package maple.proto.nano;

@SuppressWarnings("hiding")
public interface Sip {

  public static final class SipGetDeviceResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SipGetDeviceResponse[] _emptyArray;
    public static SipGetDeviceResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SipGetDeviceResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string private_id = 1;
    public java.lang.String privateId;

    // optional string public_id = 2;
    public java.lang.String publicId;

    // optional string realm = 3;
    public java.lang.String realm;

    // optional string password = 4;
    public java.lang.String password;

    public SipGetDeviceResponse() {
      clear();
    }

    public SipGetDeviceResponse clear() {
      privateId = "";
      publicId = "";
      realm = "";
      password = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.privateId.equals("")) {
        output.writeString(1, this.privateId);
      }
      if (!this.publicId.equals("")) {
        output.writeString(2, this.publicId);
      }
      if (!this.realm.equals("")) {
        output.writeString(3, this.realm);
      }
      if (!this.password.equals("")) {
        output.writeString(4, this.password);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.privateId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.privateId);
      }
      if (!this.publicId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.publicId);
      }
      if (!this.realm.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.realm);
      }
      if (!this.password.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.password);
      }
      return size;
    }

    @Override
    public SipGetDeviceResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.privateId = input.readString();
            break;
          }
          case 18: {
            this.publicId = input.readString();
            break;
          }
          case 26: {
            this.realm = input.readString();
            break;
          }
          case 34: {
            this.password = input.readString();
            break;
          }
        }
      }
    }

    public static SipGetDeviceResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SipGetDeviceResponse(), data);
    }

    public static SipGetDeviceResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SipGetDeviceResponse().mergeFrom(input);
    }
  }

  public static final class SipGetConferenceResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SipGetConferenceResponse[] _emptyArray;
    public static SipGetConferenceResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SipGetConferenceResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string address = 1;
    public java.lang.String address;

    public SipGetConferenceResponse() {
      clear();
    }

    public SipGetConferenceResponse clear() {
      address = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.address.equals("")) {
        output.writeString(1, this.address);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.address.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.address);
      }
      return size;
    }

    @Override
    public SipGetConferenceResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.address = input.readString();
            break;
          }
        }
      }
    }

    public static SipGetConferenceResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SipGetConferenceResponse(), data);
    }

    public static SipGetConferenceResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SipGetConferenceResponse().mergeFrom(input);
    }
  }

  public static final class SipSetConferenceStatusRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SipSetConferenceStatusRequest[] _emptyArray;
    public static SipSetConferenceStatusRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SipSetConferenceStatusRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .proto.ChannelMembershipRecord.VoiceStatus voice_status = 1;
    @maple.proto.nano.Profile.ChannelMembershipRecord.VoiceStatus
    public int voiceStatus;

    public SipSetConferenceStatusRequest() {
      clear();
    }

    public SipSetConferenceStatusRequest clear() {
      voiceStatus = maple.proto.nano.Profile.ChannelMembershipRecord.VS_UNKNOWN;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.voiceStatus != maple.proto.nano.Profile.ChannelMembershipRecord.VS_UNKNOWN) {
        output.writeInt32(1, this.voiceStatus);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.voiceStatus != maple.proto.nano.Profile.ChannelMembershipRecord.VS_UNKNOWN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.voiceStatus);
      }
      return size;
    }

    @Override
    public SipSetConferenceStatusRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case maple.proto.nano.Profile.ChannelMembershipRecord.VS_UNKNOWN:
              case maple.proto.nano.Profile.ChannelMembershipRecord.VS_OFFLINE:
              case maple.proto.nano.Profile.ChannelMembershipRecord.VS_ONLINE_MUTED:
              case maple.proto.nano.Profile.ChannelMembershipRecord.VS_ONLINE:
                this.voiceStatus = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static SipSetConferenceStatusRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SipSetConferenceStatusRequest(), data);
    }

    public static SipSetConferenceStatusRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SipSetConferenceStatusRequest().mergeFrom(input);
    }
  }
}
