// Generated by the protocol buffer compiler.  DO NOT EDIT!

package maple.proto.nano;

@SuppressWarnings("hiding")
public interface Webhook {

  public static final class OutgoingWebhook extends
      com.google.protobuf.nano.MessageNano {

    private static volatile OutgoingWebhook[] _emptyArray;
    public static OutgoingWebhook[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new OutgoingWebhook[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string id = 1;
    public java.lang.String id;

    // optional string trigger_command = 2;
    public java.lang.String triggerCommand;

    // optional string url = 3;
    public java.lang.String url;

    // optional string method = 4;
    public java.lang.String method;

    // optional string token = 5;
    public java.lang.String token;

    // optional string channel_id = 6;
    public java.lang.String channelId;

    // optional string ts_created = 7;
    public java.lang.String tsCreated;

    // optional bool ac_show = 8;
    public boolean acShow;

    // optional string ac_desc = 9;
    public java.lang.String acDesc;

    // optional string ac_hint = 10;
    public java.lang.String acHint;

    // optional string owner_id = 11;
    public java.lang.String ownerId;

    // optional string response_name = 12;
    public java.lang.String responseName;

    // optional string response_avatar = 13;
    public java.lang.String responseAvatar;

    public OutgoingWebhook() {
      clear();
    }

    public OutgoingWebhook clear() {
      id = "";
      triggerCommand = "";
      url = "";
      method = "";
      token = "";
      channelId = "";
      tsCreated = "";
      acShow = false;
      acDesc = "";
      acHint = "";
      ownerId = "";
      responseName = "";
      responseAvatar = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.id.equals("")) {
        output.writeString(1, this.id);
      }
      if (!this.triggerCommand.equals("")) {
        output.writeString(2, this.triggerCommand);
      }
      if (!this.url.equals("")) {
        output.writeString(3, this.url);
      }
      if (!this.method.equals("")) {
        output.writeString(4, this.method);
      }
      if (!this.token.equals("")) {
        output.writeString(5, this.token);
      }
      if (!this.channelId.equals("")) {
        output.writeString(6, this.channelId);
      }
      if (!this.tsCreated.equals("")) {
        output.writeString(7, this.tsCreated);
      }
      if (this.acShow != false) {
        output.writeBool(8, this.acShow);
      }
      if (!this.acDesc.equals("")) {
        output.writeString(9, this.acDesc);
      }
      if (!this.acHint.equals("")) {
        output.writeString(10, this.acHint);
      }
      if (!this.ownerId.equals("")) {
        output.writeString(11, this.ownerId);
      }
      if (!this.responseName.equals("")) {
        output.writeString(12, this.responseName);
      }
      if (!this.responseAvatar.equals("")) {
        output.writeString(13, this.responseAvatar);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.id.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.id);
      }
      if (!this.triggerCommand.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.triggerCommand);
      }
      if (!this.url.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.url);
      }
      if (!this.method.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.method);
      }
      if (!this.token.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.token);
      }
      if (!this.channelId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.channelId);
      }
      if (!this.tsCreated.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.tsCreated);
      }
      if (this.acShow != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(8, this.acShow);
      }
      if (!this.acDesc.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.acDesc);
      }
      if (!this.acHint.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(10, this.acHint);
      }
      if (!this.ownerId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(11, this.ownerId);
      }
      if (!this.responseName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(12, this.responseName);
      }
      if (!this.responseAvatar.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(13, this.responseAvatar);
      }
      return size;
    }

    @Override
    public OutgoingWebhook mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 18: {
            this.triggerCommand = input.readString();
            break;
          }
          case 26: {
            this.url = input.readString();
            break;
          }
          case 34: {
            this.method = input.readString();
            break;
          }
          case 42: {
            this.token = input.readString();
            break;
          }
          case 50: {
            this.channelId = input.readString();
            break;
          }
          case 58: {
            this.tsCreated = input.readString();
            break;
          }
          case 64: {
            this.acShow = input.readBool();
            break;
          }
          case 74: {
            this.acDesc = input.readString();
            break;
          }
          case 82: {
            this.acHint = input.readString();
            break;
          }
          case 90: {
            this.ownerId = input.readString();
            break;
          }
          case 98: {
            this.responseName = input.readString();
            break;
          }
          case 106: {
            this.responseAvatar = input.readString();
            break;
          }
        }
      }
    }

    public static OutgoingWebhook parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new OutgoingWebhook(), data);
    }

    public static OutgoingWebhook parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new OutgoingWebhook().mergeFrom(input);
    }
  }
}
