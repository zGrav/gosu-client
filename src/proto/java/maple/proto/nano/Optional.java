// Generated by the protocol buffer compiler.  DO NOT EDIT!

package maple.proto.nano;

@SuppressWarnings("hiding")
public interface Optional {

  public static final class OptionalString extends
      com.google.protobuf.nano.MessageNano {

    private static volatile OptionalString[] _emptyArray;
    public static OptionalString[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new OptionalString[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string value = 1;
    public java.lang.String value;

    public OptionalString() {
      clear();
    }

    public OptionalString clear() {
      value = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.value.equals("")) {
        output.writeString(1, this.value);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.value.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.value);
      }
      return size;
    }

    @Override
    public OptionalString mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.value = input.readString();
            break;
          }
        }
      }
    }

    public static OptionalString parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new OptionalString(), data);
    }

    public static OptionalString parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new OptionalString().mergeFrom(input);
    }
  }

  public static final class OptionalBool extends
      com.google.protobuf.nano.MessageNano {

    private static volatile OptionalBool[] _emptyArray;
    public static OptionalBool[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new OptionalBool[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool value = 1;
    public boolean value;

    public OptionalBool() {
      clear();
    }

    public OptionalBool clear() {
      value = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.value != false) {
        output.writeBool(1, this.value);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.value != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.value);
      }
      return size;
    }

    @Override
    public OptionalBool mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.value = input.readBool();
            break;
          }
        }
      }
    }

    public static OptionalBool parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new OptionalBool(), data);
    }

    public static OptionalBool parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new OptionalBool().mergeFrom(input);
    }
  }

  public static final class OptionalInt64 extends
      com.google.protobuf.nano.MessageNano {

    private static volatile OptionalInt64[] _emptyArray;
    public static OptionalInt64[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new OptionalInt64[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 value = 1;
    public long value;

    public OptionalInt64() {
      clear();
    }

    public OptionalInt64 clear() {
      value = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.value != 0L) {
        output.writeInt64(1, this.value);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.value != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.value);
      }
      return size;
    }

    @Override
    public OptionalInt64 mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.value = input.readInt64();
            break;
          }
        }
      }
    }

    public static OptionalInt64 parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new OptionalInt64(), data);
    }

    public static OptionalInt64 parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new OptionalInt64().mergeFrom(input);
    }
  }

  public static final class OptionalRepeatedString extends
      com.google.protobuf.nano.MessageNano {

    private static volatile OptionalRepeatedString[] _emptyArray;
    public static OptionalRepeatedString[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new OptionalRepeatedString[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated string values = 1;
    public java.lang.String[] values;

    public OptionalRepeatedString() {
      clear();
    }

    public OptionalRepeatedString clear() {
      values = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.values != null && this.values.length > 0) {
        for (int i = 0; i < this.values.length; i++) {
          java.lang.String element = this.values[i];
          if (element != null) {
            output.writeString(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.values != null && this.values.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.values.length; i++) {
          java.lang.String element = this.values[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public OptionalRepeatedString mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.values == null ? 0 : this.values.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.values, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.values = newArray;
            break;
          }
        }
      }
    }

    public static OptionalRepeatedString parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new OptionalRepeatedString(), data);
    }

    public static OptionalRepeatedString parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new OptionalRepeatedString().mergeFrom(input);
    }
  }
}
