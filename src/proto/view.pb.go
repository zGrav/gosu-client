// Code generated by protoc-gen-go.
// source: view.proto
// DO NOT EDIT!

package gosuproto

import proto "github.com/golang/protobuf/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type RPCViewsCreateViewResponse_ErrorType int32

const (
	RPCViewsCreateViewResponse_NONE          RPCViewsCreateViewResponse_ErrorType = 0
	RPCViewsCreateViewResponse_UNKNOWN_ERROR RPCViewsCreateViewResponse_ErrorType = 1
	RPCViewsCreateViewResponse_BAD_REQUEST   RPCViewsCreateViewResponse_ErrorType = 2
	RPCViewsCreateViewResponse_FORBIDDEN     RPCViewsCreateViewResponse_ErrorType = 3
)

var RPCViewsCreateViewResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var RPCViewsCreateViewResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x RPCViewsCreateViewResponse_ErrorType) String() string {
	return proto.EnumName(RPCViewsCreateViewResponse_ErrorType_name, int32(x))
}

type RPCViewsEditViewResponse_ErrorType int32

const (
	RPCViewsEditViewResponse_NONE          RPCViewsEditViewResponse_ErrorType = 0
	RPCViewsEditViewResponse_UNKNOWN_ERROR RPCViewsEditViewResponse_ErrorType = 1
	RPCViewsEditViewResponse_BAD_REQUEST   RPCViewsEditViewResponse_ErrorType = 2
	RPCViewsEditViewResponse_FORBIDDEN     RPCViewsEditViewResponse_ErrorType = 3
)

var RPCViewsEditViewResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var RPCViewsEditViewResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x RPCViewsEditViewResponse_ErrorType) String() string {
	return proto.EnumName(RPCViewsEditViewResponse_ErrorType_name, int32(x))
}

type RPCViewsDeleteViewResponse_ErrorType int32

const (
	RPCViewsDeleteViewResponse_NONE          RPCViewsDeleteViewResponse_ErrorType = 0
	RPCViewsDeleteViewResponse_UNKNOWN_ERROR RPCViewsDeleteViewResponse_ErrorType = 1
	RPCViewsDeleteViewResponse_BAD_REQUEST   RPCViewsDeleteViewResponse_ErrorType = 2
	RPCViewsDeleteViewResponse_FORBIDDEN     RPCViewsDeleteViewResponse_ErrorType = 3
)

var RPCViewsDeleteViewResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var RPCViewsDeleteViewResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x RPCViewsDeleteViewResponse_ErrorType) String() string {
	return proto.EnumName(RPCViewsDeleteViewResponse_ErrorType_name, int32(x))
}

type RPCViewsGetViewResponse_ErrorType int32

const (
	RPCViewsGetViewResponse_NONE          RPCViewsGetViewResponse_ErrorType = 0
	RPCViewsGetViewResponse_UNKNOWN_ERROR RPCViewsGetViewResponse_ErrorType = 1
	RPCViewsGetViewResponse_BAD_REQUEST   RPCViewsGetViewResponse_ErrorType = 2
	RPCViewsGetViewResponse_FORBIDDEN     RPCViewsGetViewResponse_ErrorType = 3
	RPCViewsGetViewResponse_NOT_FOUND     RPCViewsGetViewResponse_ErrorType = 4
)

var RPCViewsGetViewResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
	4: "NOT_FOUND",
}
var RPCViewsGetViewResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
	"NOT_FOUND":     4,
}

func (x RPCViewsGetViewResponse_ErrorType) String() string {
	return proto.EnumName(RPCViewsGetViewResponse_ErrorType_name, int32(x))
}

type RPCViewsGetViewsResponse_ErrorType int32

const (
	RPCViewsGetViewsResponse_NONE          RPCViewsGetViewsResponse_ErrorType = 0
	RPCViewsGetViewsResponse_UNKNOWN_ERROR RPCViewsGetViewsResponse_ErrorType = 1
	RPCViewsGetViewsResponse_BAD_REQUEST   RPCViewsGetViewsResponse_ErrorType = 2
	RPCViewsGetViewsResponse_FORBIDDEN     RPCViewsGetViewsResponse_ErrorType = 3
)

var RPCViewsGetViewsResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var RPCViewsGetViewsResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x RPCViewsGetViewsResponse_ErrorType) String() string {
	return proto.EnumName(RPCViewsGetViewsResponse_ErrorType_name, int32(x))
}

type RPCViewsSetViewPropertiesResponse_ErrorType int32

const (
	RPCViewsSetViewPropertiesResponse_NONE          RPCViewsSetViewPropertiesResponse_ErrorType = 0
	RPCViewsSetViewPropertiesResponse_UNKNOWN_ERROR RPCViewsSetViewPropertiesResponse_ErrorType = 1
	RPCViewsSetViewPropertiesResponse_BAD_REQUEST   RPCViewsSetViewPropertiesResponse_ErrorType = 2
	RPCViewsSetViewPropertiesResponse_FORBIDDEN     RPCViewsSetViewPropertiesResponse_ErrorType = 3
)

var RPCViewsSetViewPropertiesResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var RPCViewsSetViewPropertiesResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x RPCViewsSetViewPropertiesResponse_ErrorType) String() string {
	return proto.EnumName(RPCViewsSetViewPropertiesResponse_ErrorType_name, int32(x))
}

type RPCViewsDeleteViewPropertiesResponse_ErrorType int32

const (
	RPCViewsDeleteViewPropertiesResponse_NONE          RPCViewsDeleteViewPropertiesResponse_ErrorType = 0
	RPCViewsDeleteViewPropertiesResponse_UNKNOWN_ERROR RPCViewsDeleteViewPropertiesResponse_ErrorType = 1
	RPCViewsDeleteViewPropertiesResponse_BAD_REQUEST   RPCViewsDeleteViewPropertiesResponse_ErrorType = 2
	RPCViewsDeleteViewPropertiesResponse_FORBIDDEN     RPCViewsDeleteViewPropertiesResponse_ErrorType = 3
)

var RPCViewsDeleteViewPropertiesResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var RPCViewsDeleteViewPropertiesResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x RPCViewsDeleteViewPropertiesResponse_ErrorType) String() string {
	return proto.EnumName(RPCViewsDeleteViewPropertiesResponse_ErrorType_name, int32(x))
}

type ViewsPopulateViewFromURLResponse_ErrorType int32

const (
	ViewsPopulateViewFromURLResponse_NONE            ViewsPopulateViewFromURLResponse_ErrorType = 0
	ViewsPopulateViewFromURLResponse_UNKNOWN_ERROR   ViewsPopulateViewFromURLResponse_ErrorType = 1
	ViewsPopulateViewFromURLResponse_BAD_REQUEST     ViewsPopulateViewFromURLResponse_ErrorType = 2
	ViewsPopulateViewFromURLResponse_FORBIDDEN       ViewsPopulateViewFromURLResponse_ErrorType = 3
	ViewsPopulateViewFromURLResponse_PAGE_NOT_FOUND  ViewsPopulateViewFromURLResponse_ErrorType = 4
	ViewsPopulateViewFromURLResponse_INVALID_URL     ViewsPopulateViewFromURLResponse_ErrorType = 5
	ViewsPopulateViewFromURLResponse_COULD_NOT_CRAWL ViewsPopulateViewFromURLResponse_ErrorType = 6
)

var ViewsPopulateViewFromURLResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
	4: "PAGE_NOT_FOUND",
	5: "INVALID_URL",
	6: "COULD_NOT_CRAWL",
}
var ViewsPopulateViewFromURLResponse_ErrorType_value = map[string]int32{
	"NONE":            0,
	"UNKNOWN_ERROR":   1,
	"BAD_REQUEST":     2,
	"FORBIDDEN":       3,
	"PAGE_NOT_FOUND":  4,
	"INVALID_URL":     5,
	"COULD_NOT_CRAWL": 6,
}

func (x ViewsPopulateViewFromURLResponse_ErrorType) String() string {
	return proto.EnumName(ViewsPopulateViewFromURLResponse_ErrorType_name, int32(x))
}

type ViewsTransferOwnershipResponse_ErrorType int32

const (
	ViewsTransferOwnershipResponse_NONE          ViewsTransferOwnershipResponse_ErrorType = 0
	ViewsTransferOwnershipResponse_UNKNOWN_ERROR ViewsTransferOwnershipResponse_ErrorType = 1
	ViewsTransferOwnershipResponse_BAD_REQUEST   ViewsTransferOwnershipResponse_ErrorType = 2
	ViewsTransferOwnershipResponse_FORBIDDEN     ViewsTransferOwnershipResponse_ErrorType = 3
)

var ViewsTransferOwnershipResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var ViewsTransferOwnershipResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x ViewsTransferOwnershipResponse_ErrorType) String() string {
	return proto.EnumName(ViewsTransferOwnershipResponse_ErrorType_name, int32(x))
}

type ViewsGetEditorInviteCodeResponse_ErrorType int32

const (
	ViewsGetEditorInviteCodeResponse_NONE          ViewsGetEditorInviteCodeResponse_ErrorType = 0
	ViewsGetEditorInviteCodeResponse_UNKNOWN_ERROR ViewsGetEditorInviteCodeResponse_ErrorType = 1
	ViewsGetEditorInviteCodeResponse_BAD_REQUEST   ViewsGetEditorInviteCodeResponse_ErrorType = 2
	ViewsGetEditorInviteCodeResponse_FORBIDDEN     ViewsGetEditorInviteCodeResponse_ErrorType = 3
)

var ViewsGetEditorInviteCodeResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var ViewsGetEditorInviteCodeResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x ViewsGetEditorInviteCodeResponse_ErrorType) String() string {
	return proto.EnumName(ViewsGetEditorInviteCodeResponse_ErrorType_name, int32(x))
}

type ViewsGetEditorInviteInfoResponse_ErrorType int32

const (
	ViewsGetEditorInviteInfoResponse_NONE          ViewsGetEditorInviteInfoResponse_ErrorType = 0
	ViewsGetEditorInviteInfoResponse_UNKNOWN_ERROR ViewsGetEditorInviteInfoResponse_ErrorType = 1
	ViewsGetEditorInviteInfoResponse_BAD_REQUEST   ViewsGetEditorInviteInfoResponse_ErrorType = 2
	ViewsGetEditorInviteInfoResponse_FORBIDDEN     ViewsGetEditorInviteInfoResponse_ErrorType = 3
	ViewsGetEditorInviteInfoResponse_INVALID_CODE  ViewsGetEditorInviteInfoResponse_ErrorType = 4
)

var ViewsGetEditorInviteInfoResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
	4: "INVALID_CODE",
}
var ViewsGetEditorInviteInfoResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
	"INVALID_CODE":  4,
}

func (x ViewsGetEditorInviteInfoResponse_ErrorType) String() string {
	return proto.EnumName(ViewsGetEditorInviteInfoResponse_ErrorType_name, int32(x))
}

type ViewsAcceptEditorInviteResponse_ErrorType int32

const (
	ViewsAcceptEditorInviteResponse_NONE          ViewsAcceptEditorInviteResponse_ErrorType = 0
	ViewsAcceptEditorInviteResponse_UNKNOWN_ERROR ViewsAcceptEditorInviteResponse_ErrorType = 1
	ViewsAcceptEditorInviteResponse_BAD_REQUEST   ViewsAcceptEditorInviteResponse_ErrorType = 2
	ViewsAcceptEditorInviteResponse_FORBIDDEN     ViewsAcceptEditorInviteResponse_ErrorType = 3
	ViewsAcceptEditorInviteResponse_INVALID_CODE  ViewsAcceptEditorInviteResponse_ErrorType = 4
)

var ViewsAcceptEditorInviteResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
	4: "INVALID_CODE",
}
var ViewsAcceptEditorInviteResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
	"INVALID_CODE":  4,
}

func (x ViewsAcceptEditorInviteResponse_ErrorType) String() string {
	return proto.EnumName(ViewsAcceptEditorInviteResponse_ErrorType_name, int32(x))
}

type ViewsRemoveEditorResponse_ErrorType int32

const (
	ViewsRemoveEditorResponse_NONE          ViewsRemoveEditorResponse_ErrorType = 0
	ViewsRemoveEditorResponse_UNKNOWN_ERROR ViewsRemoveEditorResponse_ErrorType = 1
	ViewsRemoveEditorResponse_BAD_REQUEST   ViewsRemoveEditorResponse_ErrorType = 2
	ViewsRemoveEditorResponse_FORBIDDEN     ViewsRemoveEditorResponse_ErrorType = 3
)

var ViewsRemoveEditorResponse_ErrorType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN_ERROR",
	2: "BAD_REQUEST",
	3: "FORBIDDEN",
}
var ViewsRemoveEditorResponse_ErrorType_value = map[string]int32{
	"NONE":          0,
	"UNKNOWN_ERROR": 1,
	"BAD_REQUEST":   2,
	"FORBIDDEN":     3,
}

func (x ViewsRemoveEditorResponse_ErrorType) String() string {
	return proto.EnumName(ViewsRemoveEditorResponse_ErrorType_name, int32(x))
}

type RPCViewsCreateViewRequest struct {
	UserId     string          `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Name       string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Properties []*ViewProperty `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty"`
}

func (m *RPCViewsCreateViewRequest) Reset()         { *m = RPCViewsCreateViewRequest{} }
func (m *RPCViewsCreateViewRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsCreateViewRequest) ProtoMessage()    {}

func (m *RPCViewsCreateViewRequest) GetProperties() []*ViewProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

type RPCViewsCreateViewResponse struct {
	Error RPCViewsCreateViewResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsCreateViewResponse_ErrorType" json:"error,omitempty"`
	View  *View                                `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *RPCViewsCreateViewResponse) Reset()         { *m = RPCViewsCreateViewResponse{} }
func (m *RPCViewsCreateViewResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsCreateViewResponse) ProtoMessage()    {}

func (m *RPCViewsCreateViewResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type RPCViewsEditViewRequest struct {
	UserId     string          `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	ViewId     string          `protobuf:"bytes,2,opt,name=view_id" json:"view_id,omitempty"`
	Name       *StringValue    `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Properties []*ViewProperty `protobuf:"bytes,4,rep,name=properties" json:"properties,omitempty"`
}

func (m *RPCViewsEditViewRequest) Reset()         { *m = RPCViewsEditViewRequest{} }
func (m *RPCViewsEditViewRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsEditViewRequest) ProtoMessage()    {}

func (m *RPCViewsEditViewRequest) GetName() *StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *RPCViewsEditViewRequest) GetProperties() []*ViewProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

type RPCViewsEditViewResponse struct {
	Error RPCViewsEditViewResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsEditViewResponse_ErrorType" json:"error,omitempty"`
	View  *View                              `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *RPCViewsEditViewResponse) Reset()         { *m = RPCViewsEditViewResponse{} }
func (m *RPCViewsEditViewResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsEditViewResponse) ProtoMessage()    {}

func (m *RPCViewsEditViewResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type RPCViewsDeleteViewRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	ViewId string `protobuf:"bytes,2,opt,name=view_id" json:"view_id,omitempty"`
}

func (m *RPCViewsDeleteViewRequest) Reset()         { *m = RPCViewsDeleteViewRequest{} }
func (m *RPCViewsDeleteViewRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsDeleteViewRequest) ProtoMessage()    {}

type RPCViewsDeleteViewResponse struct {
	Error RPCViewsDeleteViewResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsDeleteViewResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCViewsDeleteViewResponse) Reset()         { *m = RPCViewsDeleteViewResponse{} }
func (m *RPCViewsDeleteViewResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsDeleteViewResponse) ProtoMessage()    {}

type RPCViewsGetViewRequest struct {
	ViewId string `protobuf:"bytes,1,opt,name=view_id" json:"view_id,omitempty"`
}

func (m *RPCViewsGetViewRequest) Reset()         { *m = RPCViewsGetViewRequest{} }
func (m *RPCViewsGetViewRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsGetViewRequest) ProtoMessage()    {}

type RPCViewsGetViewResponse struct {
	Error RPCViewsGetViewResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsGetViewResponse_ErrorType" json:"error,omitempty"`
	View  *View                             `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *RPCViewsGetViewResponse) Reset()         { *m = RPCViewsGetViewResponse{} }
func (m *RPCViewsGetViewResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsGetViewResponse) ProtoMessage()    {}

func (m *RPCViewsGetViewResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type RPCViewsGetViewsRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
}

func (m *RPCViewsGetViewsRequest) Reset()         { *m = RPCViewsGetViewsRequest{} }
func (m *RPCViewsGetViewsRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsGetViewsRequest) ProtoMessage()    {}

type RPCViewsGetViewsResponse struct {
	Error         RPCViewsGetViewsResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsGetViewsResponse_ErrorType" json:"error,omitempty"`
	Views         []*View                            `protobuf:"bytes,2,rep,name=views" json:"views,omitempty"`
	ViewsWithMeta []*ViewWithMeta                    `protobuf:"bytes,3,rep,name=views_with_meta" json:"views_with_meta,omitempty"`
}

func (m *RPCViewsGetViewsResponse) Reset()         { *m = RPCViewsGetViewsResponse{} }
func (m *RPCViewsGetViewsResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsGetViewsResponse) ProtoMessage()    {}

func (m *RPCViewsGetViewsResponse) GetViews() []*View {
	if m != nil {
		return m.Views
	}
	return nil
}

func (m *RPCViewsGetViewsResponse) GetViewsWithMeta() []*ViewWithMeta {
	if m != nil {
		return m.ViewsWithMeta
	}
	return nil
}

type RPCViewsSetViewPropertiesRequest struct {
	UserId     string          `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	ViewId     string          `protobuf:"bytes,2,opt,name=view_id" json:"view_id,omitempty"`
	Properties []*ViewProperty `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty"`
}

func (m *RPCViewsSetViewPropertiesRequest) Reset()         { *m = RPCViewsSetViewPropertiesRequest{} }
func (m *RPCViewsSetViewPropertiesRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsSetViewPropertiesRequest) ProtoMessage()    {}

func (m *RPCViewsSetViewPropertiesRequest) GetProperties() []*ViewProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

type RPCViewsSetViewPropertiesResponse struct {
	Error RPCViewsSetViewPropertiesResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsSetViewPropertiesResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCViewsSetViewPropertiesResponse) Reset()         { *m = RPCViewsSetViewPropertiesResponse{} }
func (m *RPCViewsSetViewPropertiesResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsSetViewPropertiesResponse) ProtoMessage()    {}

type RPCViewsDeleteViewPropertiesRequest struct {
	UserId string   `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	ViewId string   `protobuf:"bytes,2,opt,name=view_id" json:"view_id,omitempty"`
	Keys   []string `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
}

func (m *RPCViewsDeleteViewPropertiesRequest) Reset()         { *m = RPCViewsDeleteViewPropertiesRequest{} }
func (m *RPCViewsDeleteViewPropertiesRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsDeleteViewPropertiesRequest) ProtoMessage()    {}

type RPCViewsDeleteViewPropertiesResponse struct {
	Error RPCViewsDeleteViewPropertiesResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsDeleteViewPropertiesResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCViewsDeleteViewPropertiesResponse) Reset()         { *m = RPCViewsDeleteViewPropertiesResponse{} }
func (m *RPCViewsDeleteViewPropertiesResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsDeleteViewPropertiesResponse) ProtoMessage()    {}

type RPCViewsPopulateViewFromURLRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	ViewId string `protobuf:"bytes,2,opt,name=view_id" json:"view_id,omitempty"`
	Url    string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
}

func (m *RPCViewsPopulateViewFromURLRequest) Reset()         { *m = RPCViewsPopulateViewFromURLRequest{} }
func (m *RPCViewsPopulateViewFromURLRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsPopulateViewFromURLRequest) ProtoMessage()    {}

type RPCViewsPopulateViewFromURLResponse struct {
	Error ViewsPopulateViewFromURLResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsPopulateViewFromURLResponse_ErrorType" json:"error,omitempty"`
	View  *View                                      `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *RPCViewsPopulateViewFromURLResponse) Reset()         { *m = RPCViewsPopulateViewFromURLResponse{} }
func (m *RPCViewsPopulateViewFromURLResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsPopulateViewFromURLResponse) ProtoMessage()    {}

func (m *RPCViewsPopulateViewFromURLResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type RPCViewsTransferOwnershipRequest struct {
	UserId       string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	ViewId       string `protobuf:"bytes,2,opt,name=view_id" json:"view_id,omitempty"`
	TargetUserId string `protobuf:"bytes,3,opt,name=target_user_id" json:"target_user_id,omitempty"`
}

func (m *RPCViewsTransferOwnershipRequest) Reset()         { *m = RPCViewsTransferOwnershipRequest{} }
func (m *RPCViewsTransferOwnershipRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsTransferOwnershipRequest) ProtoMessage()    {}

type RPCViewsTransferOwnershipResponse struct {
	Error ViewsTransferOwnershipResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsTransferOwnershipResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCViewsTransferOwnershipResponse) Reset()         { *m = RPCViewsTransferOwnershipResponse{} }
func (m *RPCViewsTransferOwnershipResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsTransferOwnershipResponse) ProtoMessage()    {}

type RPCViewsGetEditorInviteCodeRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	ViewId string `protobuf:"bytes,2,opt,name=view_id" json:"view_id,omitempty"`
}

func (m *RPCViewsGetEditorInviteCodeRequest) Reset()         { *m = RPCViewsGetEditorInviteCodeRequest{} }
func (m *RPCViewsGetEditorInviteCodeRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsGetEditorInviteCodeRequest) ProtoMessage()    {}

type RPCViewsGetEditorInviteCodeResponse struct {
	Error  ViewsGetEditorInviteCodeResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsGetEditorInviteCodeResponse_ErrorType" json:"error,omitempty"`
	Invite *ViewEditorInvite                          `protobuf:"bytes,2,opt,name=invite" json:"invite,omitempty"`
}

func (m *RPCViewsGetEditorInviteCodeResponse) Reset()         { *m = RPCViewsGetEditorInviteCodeResponse{} }
func (m *RPCViewsGetEditorInviteCodeResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsGetEditorInviteCodeResponse) ProtoMessage()    {}

func (m *RPCViewsGetEditorInviteCodeResponse) GetInvite() *ViewEditorInvite {
	if m != nil {
		return m.Invite
	}
	return nil
}

type RPCViewsGetEditorInviteInfoRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *RPCViewsGetEditorInviteInfoRequest) Reset()         { *m = RPCViewsGetEditorInviteInfoRequest{} }
func (m *RPCViewsGetEditorInviteInfoRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsGetEditorInviteInfoRequest) ProtoMessage()    {}

type RPCViewsGetEditorInviteInfoResponse struct {
	Error  ViewsGetEditorInviteInfoResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsGetEditorInviteInfoResponse_ErrorType" json:"error,omitempty"`
	Invite *ViewEditorInvite                          `protobuf:"bytes,2,opt,name=invite" json:"invite,omitempty"`
	View   *View                                      `protobuf:"bytes,3,opt,name=view" json:"view,omitempty"`
}

func (m *RPCViewsGetEditorInviteInfoResponse) Reset()         { *m = RPCViewsGetEditorInviteInfoResponse{} }
func (m *RPCViewsGetEditorInviteInfoResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsGetEditorInviteInfoResponse) ProtoMessage()    {}

func (m *RPCViewsGetEditorInviteInfoResponse) GetInvite() *ViewEditorInvite {
	if m != nil {
		return m.Invite
	}
	return nil
}

func (m *RPCViewsGetEditorInviteInfoResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type RPCViewsAcceptEditorInviteRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *RPCViewsAcceptEditorInviteRequest) Reset()         { *m = RPCViewsAcceptEditorInviteRequest{} }
func (m *RPCViewsAcceptEditorInviteRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsAcceptEditorInviteRequest) ProtoMessage()    {}

type RPCViewsAcceptEditorInviteResponse struct {
	Error ViewsAcceptEditorInviteResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsAcceptEditorInviteResponse_ErrorType" json:"error,omitempty"`
	View  *View                                     `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *RPCViewsAcceptEditorInviteResponse) Reset()         { *m = RPCViewsAcceptEditorInviteResponse{} }
func (m *RPCViewsAcceptEditorInviteResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsAcceptEditorInviteResponse) ProtoMessage()    {}

func (m *RPCViewsAcceptEditorInviteResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type RPCViewsRemoveEditorRequest struct {
	UserId       string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	ViewId       string `protobuf:"bytes,2,opt,name=view_id" json:"view_id,omitempty"`
	TargetUserId string `protobuf:"bytes,3,opt,name=target_user_id" json:"target_user_id,omitempty"`
}

func (m *RPCViewsRemoveEditorRequest) Reset()         { *m = RPCViewsRemoveEditorRequest{} }
func (m *RPCViewsRemoveEditorRequest) String() string { return proto.CompactTextString(m) }
func (*RPCViewsRemoveEditorRequest) ProtoMessage()    {}

type RPCViewsRemoveEditorResponse struct {
	Error ViewsRemoveEditorResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsRemoveEditorResponse_ErrorType" json:"error,omitempty"`
}

func (m *RPCViewsRemoveEditorResponse) Reset()         { *m = RPCViewsRemoveEditorResponse{} }
func (m *RPCViewsRemoveEditorResponse) String() string { return proto.CompactTextString(m) }
func (*RPCViewsRemoveEditorResponse) ProtoMessage()    {}

type ViewsCreateViewRequest struct {
	Name       string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Properties []*ViewProperty `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty"`
}

func (m *ViewsCreateViewRequest) Reset()         { *m = ViewsCreateViewRequest{} }
func (m *ViewsCreateViewRequest) String() string { return proto.CompactTextString(m) }
func (*ViewsCreateViewRequest) ProtoMessage()    {}

func (m *ViewsCreateViewRequest) GetProperties() []*ViewProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

type ViewsCreateViewResponse struct {
	Error RPCViewsCreateViewResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsCreateViewResponse_ErrorType" json:"error,omitempty"`
	View  *View                                `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *ViewsCreateViewResponse) Reset()         { *m = ViewsCreateViewResponse{} }
func (m *ViewsCreateViewResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsCreateViewResponse) ProtoMessage()    {}

func (m *ViewsCreateViewResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type ViewsEditViewRequest struct {
	Name       *StringValue    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Properties []*ViewProperty `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty"`
}

func (m *ViewsEditViewRequest) Reset()         { *m = ViewsEditViewRequest{} }
func (m *ViewsEditViewRequest) String() string { return proto.CompactTextString(m) }
func (*ViewsEditViewRequest) ProtoMessage()    {}

func (m *ViewsEditViewRequest) GetName() *StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ViewsEditViewRequest) GetProperties() []*ViewProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

type ViewsEditViewResponse struct {
	Error RPCViewsEditViewResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsEditViewResponse_ErrorType" json:"error,omitempty"`
	View  *View                              `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *ViewsEditViewResponse) Reset()         { *m = ViewsEditViewResponse{} }
func (m *ViewsEditViewResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsEditViewResponse) ProtoMessage()    {}

func (m *ViewsEditViewResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type ViewsDeleteViewResponse struct {
	Error RPCViewsDeleteViewResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsDeleteViewResponse_ErrorType" json:"error,omitempty"`
}

func (m *ViewsDeleteViewResponse) Reset()         { *m = ViewsDeleteViewResponse{} }
func (m *ViewsDeleteViewResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsDeleteViewResponse) ProtoMessage()    {}

type ViewsGetViewResponse struct {
	Error RPCViewsGetViewResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsGetViewResponse_ErrorType" json:"error,omitempty"`
	View  *View                             `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *ViewsGetViewResponse) Reset()         { *m = ViewsGetViewResponse{} }
func (m *ViewsGetViewResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsGetViewResponse) ProtoMessage()    {}

func (m *ViewsGetViewResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type ViewsGetViewsResponse struct {
	Error         RPCViewsGetViewsResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsGetViewsResponse_ErrorType" json:"error,omitempty"`
	Views         []*View                            `protobuf:"bytes,2,rep,name=views" json:"views,omitempty"`
	ViewsWithMeta []*ViewWithMeta                    `protobuf:"bytes,3,rep,name=views_with_meta" json:"views_with_meta,omitempty"`
}

func (m *ViewsGetViewsResponse) Reset()         { *m = ViewsGetViewsResponse{} }
func (m *ViewsGetViewsResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsGetViewsResponse) ProtoMessage()    {}

func (m *ViewsGetViewsResponse) GetViews() []*View {
	if m != nil {
		return m.Views
	}
	return nil
}

func (m *ViewsGetViewsResponse) GetViewsWithMeta() []*ViewWithMeta {
	if m != nil {
		return m.ViewsWithMeta
	}
	return nil
}

type ViewsSetViewPropertiesRequest struct {
	Properties []*ViewProperty `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty"`
}

func (m *ViewsSetViewPropertiesRequest) Reset()         { *m = ViewsSetViewPropertiesRequest{} }
func (m *ViewsSetViewPropertiesRequest) String() string { return proto.CompactTextString(m) }
func (*ViewsSetViewPropertiesRequest) ProtoMessage()    {}

func (m *ViewsSetViewPropertiesRequest) GetProperties() []*ViewProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

type ViewsSetViewPropertiesResponse struct {
	Error RPCViewsSetViewPropertiesResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsSetViewPropertiesResponse_ErrorType" json:"error,omitempty"`
}

func (m *ViewsSetViewPropertiesResponse) Reset()         { *m = ViewsSetViewPropertiesResponse{} }
func (m *ViewsSetViewPropertiesResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsSetViewPropertiesResponse) ProtoMessage()    {}

type ViewsDeleteViewPropertiesRequest struct {
	Keys []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (m *ViewsDeleteViewPropertiesRequest) Reset()         { *m = ViewsDeleteViewPropertiesRequest{} }
func (m *ViewsDeleteViewPropertiesRequest) String() string { return proto.CompactTextString(m) }
func (*ViewsDeleteViewPropertiesRequest) ProtoMessage()    {}

type ViewsDeleteViewPropertiesResponse struct {
	Error RPCViewsDeleteViewPropertiesResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.RPCViewsDeleteViewPropertiesResponse_ErrorType" json:"error,omitempty"`
}

func (m *ViewsDeleteViewPropertiesResponse) Reset()         { *m = ViewsDeleteViewPropertiesResponse{} }
func (m *ViewsDeleteViewPropertiesResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsDeleteViewPropertiesResponse) ProtoMessage()    {}

type ViewsPopulateViewFromURLRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *ViewsPopulateViewFromURLRequest) Reset()         { *m = ViewsPopulateViewFromURLRequest{} }
func (m *ViewsPopulateViewFromURLRequest) String() string { return proto.CompactTextString(m) }
func (*ViewsPopulateViewFromURLRequest) ProtoMessage()    {}

type ViewsPopulateViewFromURLResponse struct {
	Error ViewsPopulateViewFromURLResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsPopulateViewFromURLResponse_ErrorType" json:"error,omitempty"`
	View  *View                                      `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *ViewsPopulateViewFromURLResponse) Reset()         { *m = ViewsPopulateViewFromURLResponse{} }
func (m *ViewsPopulateViewFromURLResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsPopulateViewFromURLResponse) ProtoMessage()    {}

func (m *ViewsPopulateViewFromURLResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type ViewsTransferOwnershipResponse struct {
	Error ViewsTransferOwnershipResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsTransferOwnershipResponse_ErrorType" json:"error,omitempty"`
}

func (m *ViewsTransferOwnershipResponse) Reset()         { *m = ViewsTransferOwnershipResponse{} }
func (m *ViewsTransferOwnershipResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsTransferOwnershipResponse) ProtoMessage()    {}

type ViewsGetEditorInviteCodeResponse struct {
	Error  ViewsGetEditorInviteCodeResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsGetEditorInviteCodeResponse_ErrorType" json:"error,omitempty"`
	Invite *ViewEditorInvite                          `protobuf:"bytes,2,opt,name=invite" json:"invite,omitempty"`
}

func (m *ViewsGetEditorInviteCodeResponse) Reset()         { *m = ViewsGetEditorInviteCodeResponse{} }
func (m *ViewsGetEditorInviteCodeResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsGetEditorInviteCodeResponse) ProtoMessage()    {}

func (m *ViewsGetEditorInviteCodeResponse) GetInvite() *ViewEditorInvite {
	if m != nil {
		return m.Invite
	}
	return nil
}

type ViewsGetEditorInviteInfoResponse struct {
	Error  ViewsGetEditorInviteInfoResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsGetEditorInviteInfoResponse_ErrorType" json:"error,omitempty"`
	Invite *ViewEditorInvite                          `protobuf:"bytes,2,opt,name=invite" json:"invite,omitempty"`
	View   *View                                      `protobuf:"bytes,3,opt,name=view" json:"view,omitempty"`
}

func (m *ViewsGetEditorInviteInfoResponse) Reset()         { *m = ViewsGetEditorInviteInfoResponse{} }
func (m *ViewsGetEditorInviteInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsGetEditorInviteInfoResponse) ProtoMessage()    {}

func (m *ViewsGetEditorInviteInfoResponse) GetInvite() *ViewEditorInvite {
	if m != nil {
		return m.Invite
	}
	return nil
}

func (m *ViewsGetEditorInviteInfoResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type ViewsAcceptEditorInviteResponse struct {
	Error ViewsAcceptEditorInviteResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsAcceptEditorInviteResponse_ErrorType" json:"error,omitempty"`
	View  *View                                     `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (m *ViewsAcceptEditorInviteResponse) Reset()         { *m = ViewsAcceptEditorInviteResponse{} }
func (m *ViewsAcceptEditorInviteResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsAcceptEditorInviteResponse) ProtoMessage()    {}

func (m *ViewsAcceptEditorInviteResponse) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

type ViewsRemoveEditorResponse struct {
	Error ViewsRemoveEditorResponse_ErrorType `protobuf:"varint,1,opt,name=error,enum=proto.ViewsRemoveEditorResponse_ErrorType" json:"error,omitempty"`
}

func (m *ViewsRemoveEditorResponse) Reset()         { *m = ViewsRemoveEditorResponse{} }
func (m *ViewsRemoveEditorResponse) String() string { return proto.CompactTextString(m) }
func (*ViewsRemoveEditorResponse) ProtoMessage()    {}

type View struct {
	Id         string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name       string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Properties []*ViewProperty `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty"`
}

func (m *View) Reset()         { *m = View{} }
func (m *View) String() string { return proto.CompactTextString(m) }
func (*View) ProtoMessage()    {}

func (m *View) GetProperties() []*ViewProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

type ViewProperty struct {
	Key         string       `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	StringValue *StringValue `protobuf:"bytes,2,opt,name=string_value" json:"string_value,omitempty"`
	FloatValue  *FloatValue  `protobuf:"bytes,3,opt,name=float_value" json:"float_value,omitempty"`
	IntValue    *Int64Value  `protobuf:"bytes,4,opt,name=int_value" json:"int_value,omitempty"`
	BoolValue   *BoolValue   `protobuf:"bytes,5,opt,name=bool_value" json:"bool_value,omitempty"`
}

func (m *ViewProperty) Reset()         { *m = ViewProperty{} }
func (m *ViewProperty) String() string { return proto.CompactTextString(m) }
func (*ViewProperty) ProtoMessage()    {}

func (m *ViewProperty) GetStringValue() *StringValue {
	if m != nil {
		return m.StringValue
	}
	return nil
}

func (m *ViewProperty) GetFloatValue() *FloatValue {
	if m != nil {
		return m.FloatValue
	}
	return nil
}

func (m *ViewProperty) GetIntValue() *Int64Value {
	if m != nil {
		return m.IntValue
	}
	return nil
}

func (m *ViewProperty) GetBoolValue() *BoolValue {
	if m != nil {
		return m.BoolValue
	}
	return nil
}

type ViewWithMeta struct {
	View    *View       `protobuf:"bytes,1,opt,name=view" json:"view,omitempty"`
	Owner   *ChatUser   `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Editors []*ChatUser `protobuf:"bytes,3,rep,name=editors" json:"editors,omitempty"`
}

func (m *ViewWithMeta) Reset()         { *m = ViewWithMeta{} }
func (m *ViewWithMeta) String() string { return proto.CompactTextString(m) }
func (*ViewWithMeta) ProtoMessage()    {}

func (m *ViewWithMeta) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

func (m *ViewWithMeta) GetOwner() *ChatUser {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ViewWithMeta) GetEditors() []*ChatUser {
	if m != nil {
		return m.Editors
	}
	return nil
}

type ViewEditorInvite struct {
	CreatedAt int32  `protobuf:"varint,1,opt,name=created_at" json:"created_at,omitempty"`
	UpdatedAt int32  `protobuf:"varint,2,opt,name=updated_at" json:"updated_at,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	ViewId    string `protobuf:"bytes,4,opt,name=view_id" json:"view_id,omitempty"`
	InviterId string `protobuf:"bytes,5,opt,name=inviter_id" json:"inviter_id,omitempty"`
}

func (m *ViewEditorInvite) Reset()         { *m = ViewEditorInvite{} }
func (m *ViewEditorInvite) String() string { return proto.CompactTextString(m) }
func (*ViewEditorInvite) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("proto.RPCViewsCreateViewResponse_ErrorType", RPCViewsCreateViewResponse_ErrorType_name, RPCViewsCreateViewResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCViewsEditViewResponse_ErrorType", RPCViewsEditViewResponse_ErrorType_name, RPCViewsEditViewResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCViewsDeleteViewResponse_ErrorType", RPCViewsDeleteViewResponse_ErrorType_name, RPCViewsDeleteViewResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCViewsGetViewResponse_ErrorType", RPCViewsGetViewResponse_ErrorType_name, RPCViewsGetViewResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCViewsGetViewsResponse_ErrorType", RPCViewsGetViewsResponse_ErrorType_name, RPCViewsGetViewsResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCViewsSetViewPropertiesResponse_ErrorType", RPCViewsSetViewPropertiesResponse_ErrorType_name, RPCViewsSetViewPropertiesResponse_ErrorType_value)
	proto.RegisterEnum("proto.RPCViewsDeleteViewPropertiesResponse_ErrorType", RPCViewsDeleteViewPropertiesResponse_ErrorType_name, RPCViewsDeleteViewPropertiesResponse_ErrorType_value)
	proto.RegisterEnum("proto.ViewsPopulateViewFromURLResponse_ErrorType", ViewsPopulateViewFromURLResponse_ErrorType_name, ViewsPopulateViewFromURLResponse_ErrorType_value)
	proto.RegisterEnum("proto.ViewsTransferOwnershipResponse_ErrorType", ViewsTransferOwnershipResponse_ErrorType_name, ViewsTransferOwnershipResponse_ErrorType_value)
	proto.RegisterEnum("proto.ViewsGetEditorInviteCodeResponse_ErrorType", ViewsGetEditorInviteCodeResponse_ErrorType_name, ViewsGetEditorInviteCodeResponse_ErrorType_value)
	proto.RegisterEnum("proto.ViewsGetEditorInviteInfoResponse_ErrorType", ViewsGetEditorInviteInfoResponse_ErrorType_name, ViewsGetEditorInviteInfoResponse_ErrorType_value)
	proto.RegisterEnum("proto.ViewsAcceptEditorInviteResponse_ErrorType", ViewsAcceptEditorInviteResponse_ErrorType_name, ViewsAcceptEditorInviteResponse_ErrorType_value)
	proto.RegisterEnum("proto.ViewsRemoveEditorResponse_ErrorType", ViewsRemoveEditorResponse_ErrorType_name, ViewsRemoveEditorResponse_ErrorType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for ViewsService service

type ViewsServiceClient interface {
	CreateView(ctx context.Context, in *RPCViewsCreateViewRequest, opts ...grpc.CallOption) (*RPCViewsCreateViewResponse, error)
	EditView(ctx context.Context, in *RPCViewsEditViewRequest, opts ...grpc.CallOption) (*RPCViewsEditViewResponse, error)
	DeleteView(ctx context.Context, in *RPCViewsDeleteViewRequest, opts ...grpc.CallOption) (*RPCViewsDeleteViewResponse, error)
	GetView(ctx context.Context, in *RPCViewsGetViewRequest, opts ...grpc.CallOption) (*RPCViewsGetViewResponse, error)
	GetViews(ctx context.Context, in *RPCViewsGetViewsRequest, opts ...grpc.CallOption) (*RPCViewsGetViewsResponse, error)
	SetViewProperties(ctx context.Context, in *RPCViewsSetViewPropertiesRequest, opts ...grpc.CallOption) (*RPCViewsSetViewPropertiesResponse, error)
	DeleteViewProperties(ctx context.Context, in *RPCViewsDeleteViewPropertiesRequest, opts ...grpc.CallOption) (*RPCViewsDeleteViewPropertiesResponse, error)
	PopulateViewFromURL(ctx context.Context, in *RPCViewsPopulateViewFromURLRequest, opts ...grpc.CallOption) (*RPCViewsPopulateViewFromURLResponse, error)
	TransferOwnership(ctx context.Context, in *RPCViewsTransferOwnershipRequest, opts ...grpc.CallOption) (*RPCViewsTransferOwnershipResponse, error)
	GetEditorInviteCode(ctx context.Context, in *RPCViewsGetEditorInviteCodeRequest, opts ...grpc.CallOption) (*RPCViewsGetEditorInviteCodeResponse, error)
	GetEditorInviteInfo(ctx context.Context, in *RPCViewsGetEditorInviteInfoRequest, opts ...grpc.CallOption) (*RPCViewsGetEditorInviteInfoResponse, error)
	AcceptEditorInvite(ctx context.Context, in *RPCViewsAcceptEditorInviteRequest, opts ...grpc.CallOption) (*RPCViewsAcceptEditorInviteResponse, error)
	RemoveEditor(ctx context.Context, in *RPCViewsRemoveEditorRequest, opts ...grpc.CallOption) (*RPCViewsRemoveEditorResponse, error)
}

type viewsServiceClient struct {
	cc *grpc.ClientConn
}

func NewViewsServiceClient(cc *grpc.ClientConn) ViewsServiceClient {
	return &viewsServiceClient{cc}
}

func (c *viewsServiceClient) CreateView(ctx context.Context, in *RPCViewsCreateViewRequest, opts ...grpc.CallOption) (*RPCViewsCreateViewResponse, error) {
	out := new(RPCViewsCreateViewResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/CreateView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) EditView(ctx context.Context, in *RPCViewsEditViewRequest, opts ...grpc.CallOption) (*RPCViewsEditViewResponse, error) {
	out := new(RPCViewsEditViewResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/EditView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) DeleteView(ctx context.Context, in *RPCViewsDeleteViewRequest, opts ...grpc.CallOption) (*RPCViewsDeleteViewResponse, error) {
	out := new(RPCViewsDeleteViewResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/DeleteView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) GetView(ctx context.Context, in *RPCViewsGetViewRequest, opts ...grpc.CallOption) (*RPCViewsGetViewResponse, error) {
	out := new(RPCViewsGetViewResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/GetView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) GetViews(ctx context.Context, in *RPCViewsGetViewsRequest, opts ...grpc.CallOption) (*RPCViewsGetViewsResponse, error) {
	out := new(RPCViewsGetViewsResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/GetViews", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) SetViewProperties(ctx context.Context, in *RPCViewsSetViewPropertiesRequest, opts ...grpc.CallOption) (*RPCViewsSetViewPropertiesResponse, error) {
	out := new(RPCViewsSetViewPropertiesResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/SetViewProperties", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) DeleteViewProperties(ctx context.Context, in *RPCViewsDeleteViewPropertiesRequest, opts ...grpc.CallOption) (*RPCViewsDeleteViewPropertiesResponse, error) {
	out := new(RPCViewsDeleteViewPropertiesResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/DeleteViewProperties", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) PopulateViewFromURL(ctx context.Context, in *RPCViewsPopulateViewFromURLRequest, opts ...grpc.CallOption) (*RPCViewsPopulateViewFromURLResponse, error) {
	out := new(RPCViewsPopulateViewFromURLResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/PopulateViewFromURL", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) TransferOwnership(ctx context.Context, in *RPCViewsTransferOwnershipRequest, opts ...grpc.CallOption) (*RPCViewsTransferOwnershipResponse, error) {
	out := new(RPCViewsTransferOwnershipResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/TransferOwnership", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) GetEditorInviteCode(ctx context.Context, in *RPCViewsGetEditorInviteCodeRequest, opts ...grpc.CallOption) (*RPCViewsGetEditorInviteCodeResponse, error) {
	out := new(RPCViewsGetEditorInviteCodeResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/GetEditorInviteCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) GetEditorInviteInfo(ctx context.Context, in *RPCViewsGetEditorInviteInfoRequest, opts ...grpc.CallOption) (*RPCViewsGetEditorInviteInfoResponse, error) {
	out := new(RPCViewsGetEditorInviteInfoResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/GetEditorInviteInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) AcceptEditorInvite(ctx context.Context, in *RPCViewsAcceptEditorInviteRequest, opts ...grpc.CallOption) (*RPCViewsAcceptEditorInviteResponse, error) {
	out := new(RPCViewsAcceptEditorInviteResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/AcceptEditorInvite", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewsServiceClient) RemoveEditor(ctx context.Context, in *RPCViewsRemoveEditorRequest, opts ...grpc.CallOption) (*RPCViewsRemoveEditorResponse, error) {
	out := new(RPCViewsRemoveEditorResponse)
	err := grpc.Invoke(ctx, "/proto.ViewsService/RemoveEditor", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ViewsService service

type ViewsServiceServer interface {
	CreateView(context.Context, *RPCViewsCreateViewRequest) (*RPCViewsCreateViewResponse, error)
	EditView(context.Context, *RPCViewsEditViewRequest) (*RPCViewsEditViewResponse, error)
	DeleteView(context.Context, *RPCViewsDeleteViewRequest) (*RPCViewsDeleteViewResponse, error)
	GetView(context.Context, *RPCViewsGetViewRequest) (*RPCViewsGetViewResponse, error)
	GetViews(context.Context, *RPCViewsGetViewsRequest) (*RPCViewsGetViewsResponse, error)
	SetViewProperties(context.Context, *RPCViewsSetViewPropertiesRequest) (*RPCViewsSetViewPropertiesResponse, error)
	DeleteViewProperties(context.Context, *RPCViewsDeleteViewPropertiesRequest) (*RPCViewsDeleteViewPropertiesResponse, error)
	PopulateViewFromURL(context.Context, *RPCViewsPopulateViewFromURLRequest) (*RPCViewsPopulateViewFromURLResponse, error)
	TransferOwnership(context.Context, *RPCViewsTransferOwnershipRequest) (*RPCViewsTransferOwnershipResponse, error)
	GetEditorInviteCode(context.Context, *RPCViewsGetEditorInviteCodeRequest) (*RPCViewsGetEditorInviteCodeResponse, error)
	GetEditorInviteInfo(context.Context, *RPCViewsGetEditorInviteInfoRequest) (*RPCViewsGetEditorInviteInfoResponse, error)
	AcceptEditorInvite(context.Context, *RPCViewsAcceptEditorInviteRequest) (*RPCViewsAcceptEditorInviteResponse, error)
	RemoveEditor(context.Context, *RPCViewsRemoveEditorRequest) (*RPCViewsRemoveEditorResponse, error)
}

func RegisterViewsServiceServer(s *grpc.Server, srv ViewsServiceServer) {
	s.RegisterService(&_ViewsService_serviceDesc, srv)
}

func _ViewsService_CreateView_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsCreateViewRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).CreateView(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_EditView_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsEditViewRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).EditView(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_DeleteView_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsDeleteViewRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).DeleteView(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_GetView_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsGetViewRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).GetView(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_GetViews_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsGetViewsRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).GetViews(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_SetViewProperties_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsSetViewPropertiesRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).SetViewProperties(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_DeleteViewProperties_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsDeleteViewPropertiesRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).DeleteViewProperties(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_PopulateViewFromURL_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsPopulateViewFromURLRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).PopulateViewFromURL(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_TransferOwnership_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsTransferOwnershipRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).TransferOwnership(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_GetEditorInviteCode_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsGetEditorInviteCodeRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).GetEditorInviteCode(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_GetEditorInviteInfo_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsGetEditorInviteInfoRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).GetEditorInviteInfo(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_AcceptEditorInvite_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsAcceptEditorInviteRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).AcceptEditorInvite(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ViewsService_RemoveEditor_Handler(srv interface{}, ctx context.Context, codec grpc.Codec, buf []byte) (interface{}, error) {
	in := new(RPCViewsRemoveEditorRequest)
	if err := codec.Unmarshal(buf, in); err != nil {
		return nil, err
	}
	out, err := srv.(ViewsServiceServer).RemoveEditor(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _ViewsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ViewsService",
	HandlerType: (*ViewsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateView",
			Handler:    _ViewsService_CreateView_Handler,
		},
		{
			MethodName: "EditView",
			Handler:    _ViewsService_EditView_Handler,
		},
		{
			MethodName: "DeleteView",
			Handler:    _ViewsService_DeleteView_Handler,
		},
		{
			MethodName: "GetView",
			Handler:    _ViewsService_GetView_Handler,
		},
		{
			MethodName: "GetViews",
			Handler:    _ViewsService_GetViews_Handler,
		},
		{
			MethodName: "SetViewProperties",
			Handler:    _ViewsService_SetViewProperties_Handler,
		},
		{
			MethodName: "DeleteViewProperties",
			Handler:    _ViewsService_DeleteViewProperties_Handler,
		},
		{
			MethodName: "PopulateViewFromURL",
			Handler:    _ViewsService_PopulateViewFromURL_Handler,
		},
		{
			MethodName: "TransferOwnership",
			Handler:    _ViewsService_TransferOwnership_Handler,
		},
		{
			MethodName: "GetEditorInviteCode",
			Handler:    _ViewsService_GetEditorInviteCode_Handler,
		},
		{
			MethodName: "GetEditorInviteInfo",
			Handler:    _ViewsService_GetEditorInviteInfo_Handler,
		},
		{
			MethodName: "AcceptEditorInvite",
			Handler:    _ViewsService_AcceptEditorInvite_Handler,
		},
		{
			MethodName: "RemoveEditor",
			Handler:    _ViewsService_RemoveEditor_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}
